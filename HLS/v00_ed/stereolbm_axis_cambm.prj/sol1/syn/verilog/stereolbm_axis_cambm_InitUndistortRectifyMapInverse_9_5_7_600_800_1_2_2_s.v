// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module stereolbm_axis_cambm_InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        cameraMatrix_address0,
        cameraMatrix_ce0,
        cameraMatrix_q0,
        distCoeffs_address0,
        distCoeffs_ce0,
        distCoeffs_q0,
        ir_address0,
        ir_ce0,
        ir_q0,
        p_read,
        p_read1,
        mapxLMat_data_din,
        mapxLMat_data_num_data_valid,
        mapxLMat_data_fifo_cap,
        mapxLMat_data_full_n,
        mapxLMat_data_write,
        mapyLMat_data_din,
        mapyLMat_data_num_data_valid,
        mapyLMat_data_fifo_cap,
        mapyLMat_data_full_n,
        mapyLMat_data_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [3:0] cameraMatrix_address0;
output   cameraMatrix_ce0;
input  [31:0] cameraMatrix_q0;
output  [2:0] distCoeffs_address0;
output   distCoeffs_ce0;
input  [31:0] distCoeffs_q0;
output  [3:0] ir_address0;
output   ir_ce0;
input  [31:0] ir_q0;
input  [31:0] p_read;
input  [31:0] p_read1;
output  [31:0] mapxLMat_data_din;
input  [1:0] mapxLMat_data_num_data_valid;
input  [1:0] mapxLMat_data_fifo_cap;
input   mapxLMat_data_full_n;
output   mapxLMat_data_write;
output  [31:0] mapyLMat_data_din;
input  [1:0] mapyLMat_data_num_data_valid;
input  [1:0] mapyLMat_data_fifo_cap;
input   mapyLMat_data_full_n;
output   mapyLMat_data_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg mapxLMat_data_write;
reg mapyLMat_data_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [15:0] trunc_ln249_fu_56_p1;
reg   [15:0] trunc_ln249_reg_64;
reg    ap_block_state1;
wire   [15:0] trunc_ln249_4_fu_60_p1;
reg   [15:0] trunc_ln249_4_reg_69;
wire    grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_start;
wire    grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_done;
wire    grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_idle;
wire    grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_ready;
wire   [3:0] grp_xFInitUndistortRectifyMapInverseKernel_fu_40_cameraMatrix_address0;
wire    grp_xFInitUndistortRectifyMapInverseKernel_fu_40_cameraMatrix_ce0;
wire   [2:0] grp_xFInitUndistortRectifyMapInverseKernel_fu_40_distCoeffs_address0;
wire    grp_xFInitUndistortRectifyMapInverseKernel_fu_40_distCoeffs_ce0;
wire   [3:0] grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ir_address0;
wire    grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ir_ce0;
wire   [31:0] grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapxRMat_data_din;
wire    grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapxRMat_data_write;
wire   [31:0] grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapyRMat_data_din;
wire    grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapyRMat_data_write;
reg    grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_start_reg = 1'b0;
end

stereolbm_axis_cambm_xFInitUndistortRectifyMapInverseKernel grp_xFInitUndistortRectifyMapInverseKernel_fu_40(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_start),
    .ap_done(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_done),
    .ap_idle(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_idle),
    .ap_ready(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_ready),
    .cameraMatrix_address0(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_cameraMatrix_address0),
    .cameraMatrix_ce0(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_cameraMatrix_ce0),
    .cameraMatrix_q0(cameraMatrix_q0),
    .distCoeffs_address0(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_distCoeffs_address0),
    .distCoeffs_ce0(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_distCoeffs_ce0),
    .distCoeffs_q0(distCoeffs_q0),
    .ir_address0(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ir_address0),
    .ir_ce0(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ir_ce0),
    .ir_q0(ir_q0),
    .mapxRMat_data_din(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapxRMat_data_din),
    .mapxRMat_data_num_data_valid(2'd0),
    .mapxRMat_data_fifo_cap(2'd0),
    .mapxRMat_data_full_n(mapxLMat_data_full_n),
    .mapxRMat_data_write(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapxRMat_data_write),
    .mapyRMat_data_din(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapyRMat_data_din),
    .mapyRMat_data_num_data_valid(2'd0),
    .mapyRMat_data_fifo_cap(2'd0),
    .mapyRMat_data_full_n(mapyLMat_data_full_n),
    .mapyRMat_data_write(grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapyRMat_data_write),
    .rows(trunc_ln249_reg_64),
    .cols(trunc_ln249_4_reg_69)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_start_reg <= 1'b1;
        end else if ((grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_ready == 1'b1)) begin
            grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        trunc_ln249_4_reg_69 <= trunc_ln249_4_fu_60_p1;
        trunc_ln249_reg_64 <= trunc_ln249_fu_56_p1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mapxLMat_data_write = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapxRMat_data_write;
    end else begin
        mapxLMat_data_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mapyLMat_data_write = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapyRMat_data_write;
    end else begin
        mapyLMat_data_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign cameraMatrix_address0 = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_cameraMatrix_address0;

assign cameraMatrix_ce0 = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_cameraMatrix_ce0;

assign distCoeffs_address0 = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_distCoeffs_address0;

assign distCoeffs_ce0 = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_distCoeffs_ce0;

assign grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_start = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ap_start_reg;

assign ir_address0 = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ir_address0;

assign ir_ce0 = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_ir_ce0;

assign mapxLMat_data_din = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapxRMat_data_din;

assign mapyLMat_data_din = grp_xFInitUndistortRectifyMapInverseKernel_fu_40_mapyRMat_data_din;

assign trunc_ln249_4_fu_60_p1 = p_read1[15:0];

assign trunc_ln249_fu_56_p1 = p_read[15:0];

endmodule //stereolbm_axis_cambm_InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_s
