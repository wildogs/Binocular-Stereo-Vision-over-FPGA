// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_Pipeline_loop_width (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgR_in_data_dout,
        imgR_in_data_num_data_valid,
        imgR_in_data_fifo_cap,
        imgR_in_data_empty_n,
        imgR_in_data_read,
        mapxRMat_data_dout,
        mapxRMat_data_num_data_valid,
        mapxRMat_data_fifo_cap,
        mapxRMat_data_empty_n,
        mapxRMat_data_read,
        mapyRMat_data_dout,
        mapyRMat_data_num_data_valid,
        mapyRMat_data_fifo_cap,
        mapyRMat_data_empty_n,
        mapyRMat_data_read,
        rightRemappedMat_data_din,
        rightRemappedMat_data_num_data_valid,
        rightRemappedMat_data_fifo_cap,
        rightRemappedMat_data_full_n,
        rightRemappedMat_data_write,
        r2_address0,
        r2_ce0,
        r2_we0,
        r2_d0,
        r2_address1,
        r2_ce1,
        r2_q1,
        idxprom2582_i,
        r1_address0,
        r1_ce0,
        r1_we0,
        r1_d0,
        r1_address1,
        r1_ce1,
        r1_q1,
        add106_i,
        i,
        cmp263_i,
        mul_ln314,
        trunc_ln,
        cols_cast_i,
        cmp111_i,
        bitcast_ln347,
        trunc_ln347_2,
        conv3_i,
        bitcast_ln348,
        trunc_ln348_2,
        conv4_i
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] imgR_in_data_dout;
input  [1:0] imgR_in_data_num_data_valid;
input  [1:0] imgR_in_data_fifo_cap;
input   imgR_in_data_empty_n;
output   imgR_in_data_read;
input  [31:0] mapxRMat_data_dout;
input  [1:0] mapxRMat_data_num_data_valid;
input  [1:0] mapxRMat_data_fifo_cap;
input   mapxRMat_data_empty_n;
output   mapxRMat_data_read;
input  [31:0] mapyRMat_data_dout;
input  [1:0] mapyRMat_data_num_data_valid;
input  [1:0] mapyRMat_data_fifo_cap;
input   mapyRMat_data_empty_n;
output   mapyRMat_data_read;
output  [7:0] rightRemappedMat_data_din;
input  [1:0] rightRemappedMat_data_num_data_valid;
input  [1:0] rightRemappedMat_data_fifo_cap;
input   rightRemappedMat_data_full_n;
output   rightRemappedMat_data_write;
output  [6:0] r2_address0;
output   r2_ce0;
output   r2_we0;
output  [16:0] r2_d0;
output  [6:0] r2_address1;
output   r2_ce1;
input  [16:0] r2_q1;
input  [6:0] idxprom2582_i;
output  [6:0] r1_address0;
output   r1_ce0;
output   r1_we0;
output  [16:0] r1_d0;
output  [6:0] r1_address1;
output   r1_ce1;
input  [16:0] r1_q1;
input  [16:0] add106_i;
input  [16:0] i;
input  [0:0] cmp263_i;
input  [14:0] mul_ln314;
input  [0:0] trunc_ln;
input  [15:0] cols_cast_i;
input  [0:0] cmp111_i;
input  [30:0] bitcast_ln347;
input  [22:0] trunc_ln347_2;
input  [31:0] conv3_i;
input  [30:0] bitcast_ln348;
input  [22:0] trunc_ln348_2;
input  [31:0] conv4_i;

reg ap_idle;
reg imgR_in_data_read;
reg mapxRMat_data_read;
reg mapyRMat_data_read;
reg rightRemappedMat_data_write;
reg r2_ce0;
reg r2_we0;
reg r2_ce1;
reg r1_ce0;
reg r1_we0;
reg r1_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln259_reg_1715;
reg   [0:0] and_ln270_reg_1723;
reg    ap_predicate_op80_read_state2;
reg   [0:0] and_ln323_reg_1732;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
reg   [0:0] and_ln323_reg_1732_pp0_iter16_reg;
reg    ap_block_state18_pp0_stage0_iter17;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln259_fu_528_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    imgR_in_data_blk_n;
wire    ap_block_pp0_stage0;
reg    mapxRMat_data_blk_n;
reg    mapyRMat_data_blk_n;
reg    rightRemappedMat_data_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] trunc_ln259_fu_540_p1;
reg   [0:0] trunc_ln259_reg_1719;
reg   [0:0] trunc_ln259_reg_1719_pp0_iter1_reg;
wire   [0:0] and_ln270_fu_550_p2;
wire   [14:0] add_ln314_fu_566_p2;
reg   [14:0] add_ln314_reg_1727;
reg   [14:0] add_ln314_reg_1727_pp0_iter1_reg;
wire   [0:0] and_ln323_fu_572_p2;
reg   [0:0] and_ln323_reg_1732_pp0_iter1_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter2_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter3_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter4_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter5_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter6_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter7_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter8_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter9_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter10_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter11_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter12_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter13_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter14_reg;
reg   [0:0] and_ln323_reg_1732_pp0_iter15_reg;
wire   [0:0] icmp_ln347_2_fu_588_p2;
reg   [0:0] icmp_ln347_2_reg_1736;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter1_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter2_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter3_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter4_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter5_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter6_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter7_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter8_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter9_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter10_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter11_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter12_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter13_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter14_reg;
reg   [0:0] icmp_ln347_2_reg_1736_pp0_iter15_reg;
wire   [0:0] icmp_ln347_5_fu_594_p2;
reg   [0:0] icmp_ln347_5_reg_1741;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter1_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter2_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter3_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter4_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter5_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter6_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter7_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter8_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter9_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter10_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter11_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter12_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter13_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter14_reg;
reg   [0:0] icmp_ln347_5_reg_1741_pp0_iter15_reg;
wire   [0:0] icmp_ln348_2_fu_610_p2;
reg   [0:0] icmp_ln348_2_reg_1746;
reg   [0:0] icmp_ln348_2_reg_1746_pp0_iter1_reg;
reg   [0:0] icmp_ln348_2_reg_1746_pp0_iter2_reg;
wire   [0:0] icmp_ln348_3_fu_616_p2;
reg   [0:0] icmp_ln348_3_reg_1751;
reg   [0:0] icmp_ln348_3_reg_1751_pp0_iter1_reg;
reg   [0:0] icmp_ln348_3_reg_1751_pp0_iter2_reg;
reg   [31:0] val_reg_1761;
reg   [31:0] val_1_reg_1766;
wire   [0:0] icmp_ln347_fu_641_p2;
reg   [0:0] icmp_ln347_reg_1771;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter2_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter3_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter4_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter5_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter6_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter7_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter8_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter9_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter10_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter11_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter12_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter13_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter14_reg;
reg   [0:0] icmp_ln347_reg_1771_pp0_iter15_reg;
wire   [0:0] icmp_ln347_1_fu_647_p2;
reg   [0:0] icmp_ln347_1_reg_1776;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter2_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter3_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter4_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter5_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter6_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter7_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter8_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter9_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter10_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter11_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter12_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter13_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter14_reg;
reg   [0:0] icmp_ln347_1_reg_1776_pp0_iter15_reg;
wire   [0:0] icmp_ln348_fu_667_p2;
reg   [0:0] icmp_ln348_reg_1781;
reg   [0:0] icmp_ln348_reg_1781_pp0_iter2_reg;
wire   [0:0] icmp_ln348_1_fu_673_p2;
reg   [0:0] icmp_ln348_1_reg_1786;
reg   [0:0] icmp_ln348_1_reg_1786_pp0_iter2_reg;
wire   [31:0] x_fl_fu_686_p1;
reg   [31:0] x_fl_reg_1791;
reg   [31:0] x_fl_reg_1791_pp0_iter3_reg;
wire   [31:0] y_fl_fu_690_p1;
wire   [0:0] grp_fu_502_p2;
reg   [0:0] tmp_s_reg_1803;
reg   [0:0] tmp_s_reg_1803_pp0_iter4_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter5_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter6_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter7_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter8_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter9_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter10_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter11_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter12_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter13_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter14_reg;
reg   [0:0] tmp_s_reg_1803_pp0_iter15_reg;
wire   [0:0] and_ln348_1_fu_709_p2;
reg   [0:0] and_ln348_1_reg_1808;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter4_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter5_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter6_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter7_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter8_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter9_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter10_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter11_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter12_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter13_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter14_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter15_reg;
reg   [0:0] and_ln348_1_reg_1808_pp0_iter16_reg;
wire   [31:0] grp_fu_492_p2;
reg   [31:0] dc_1_reg_1813;
reg   [0:0] xs_sign_1_reg_1818;
reg   [0:0] xs_sign_1_reg_1818_pp0_iter7_reg;
reg   [0:0] xs_sign_1_reg_1818_pp0_iter8_reg;
wire   [22:0] trunc_ln371_1_fu_736_p1;
reg   [22:0] trunc_ln371_1_reg_1823;
wire   [0:0] tmp_264_fu_750_p3;
reg   [0:0] tmp_264_reg_1828;
wire   [8:0] select_ln18_2_fu_768_p3;
reg   [8:0] select_ln18_2_reg_1833;
wire   [31:0] grp_fu_497_p2;
reg   [31:0] dc_reg_1838;
wire   [31:0] val_5_fu_830_p3;
reg   [31:0] val_5_reg_1843;
reg   [31:0] val_5_reg_1843_pp0_iter8_reg;
reg   [0:0] xs_sign_reg_1849;
reg   [0:0] xs_sign_reg_1849_pp0_iter9_reg;
reg   [0:0] xs_sign_reg_1849_pp0_iter10_reg;
wire   [22:0] trunc_ln371_fu_858_p1;
reg   [22:0] trunc_ln371_reg_1854;
wire   [0:0] tmp_fu_872_p3;
reg   [0:0] tmp_reg_1859;
wire   [8:0] select_ln18_fu_890_p3;
reg   [8:0] select_ln18_reg_1864;
wire   [31:0] result_3_fu_898_p2;
reg   [31:0] result_3_reg_1869;
wire   [31:0] val_4_fu_957_p3;
reg   [31:0] val_4_reg_1874;
reg   [31:0] val_4_reg_1874_pp0_iter10_reg;
wire   [31:0] result_fu_964_p3;
reg   [31:0] result_reg_1880;
reg   [31:0] result_reg_1880_pp0_iter10_reg;
reg   [31:0] result_reg_1880_pp0_iter11_reg;
reg   [31:0] result_reg_1880_pp0_iter12_reg;
reg   [31:0] result_reg_1880_pp0_iter13_reg;
reg   [31:0] result_reg_1880_pp0_iter14_reg;
reg   [31:0] result_reg_1880_pp0_iter15_reg;
reg   [31:0] result_reg_1880_pp0_iter16_reg;
wire  signed [26:0] y_fu_969_p4;
reg  signed [26:0] y_reg_1885;
reg  signed [26:0] y_reg_1885_pp0_iter10_reg;
reg  signed [26:0] y_reg_1885_pp0_iter11_reg;
reg  signed [26:0] y_reg_1885_pp0_iter12_reg;
reg  signed [26:0] y_reg_1885_pp0_iter13_reg;
reg  signed [26:0] y_reg_1885_pp0_iter14_reg;
reg  signed [26:0] y_reg_1885_pp0_iter15_reg;
reg   [6:0] trunc_ln335_2_reg_1890;
reg   [6:0] trunc_ln335_2_reg_1890_pp0_iter10_reg;
reg   [6:0] trunc_ln335_2_reg_1890_pp0_iter11_reg;
reg   [6:0] trunc_ln335_2_reg_1890_pp0_iter12_reg;
reg   [6:0] trunc_ln335_2_reg_1890_pp0_iter13_reg;
reg   [6:0] trunc_ln335_2_reg_1890_pp0_iter14_reg;
wire  signed [27:0] sext_ln335_fu_997_p1;
reg  signed [27:0] sext_ln335_reg_1896;
reg  signed [27:0] sext_ln335_reg_1896_pp0_iter10_reg;
reg  signed [27:0] sext_ln335_reg_1896_pp0_iter11_reg;
reg  signed [27:0] sext_ln335_reg_1896_pp0_iter12_reg;
reg  signed [27:0] sext_ln335_reg_1896_pp0_iter13_reg;
reg  signed [27:0] sext_ln335_reg_1896_pp0_iter14_reg;
reg  signed [27:0] sext_ln335_reg_1896_pp0_iter15_reg;
wire   [4:0] iv_fu_1001_p1;
reg   [4:0] iv_reg_1901;
reg   [4:0] iv_reg_1901_pp0_iter10_reg;
reg   [4:0] iv_reg_1901_pp0_iter11_reg;
reg   [4:0] iv_reg_1901_pp0_iter12_reg;
wire  signed [27:0] select_ln370_fu_1057_p3;
reg  signed [27:0] select_ln370_reg_1908;
wire   [5:0] trunc_ln370_fu_1065_p1;
reg   [5:0] trunc_ln370_reg_1913;
wire  signed [2:0] select_ln370_3_fu_1087_p3;
reg  signed [2:0] select_ln370_3_reg_1919;
reg   [0:0] tmp_273_reg_1924;
wire   [0:0] tobool438_i_fu_1107_p2;
reg   [0:0] tobool438_i_reg_1929;
reg   [0:0] tobool438_i_reg_1929_pp0_iter10_reg;
reg   [0:0] tobool438_i_reg_1929_pp0_iter11_reg;
reg   [0:0] tobool438_i_reg_1929_pp0_iter12_reg;
wire   [31:0] result_2_fu_1113_p2;
reg   [31:0] result_2_reg_1937;
wire   [5:0] trunc_ln370_2_fu_1130_p1;
reg   [5:0] trunc_ln370_2_reg_1942;
reg   [0:0] tmp_272_reg_1947;
wire   [7:0] sub_ln370_4_fu_1160_p2;
reg   [7:0] sub_ln370_4_reg_1952;
wire   [7:0] ya1_fu_1200_p3;
reg  signed [7:0] ya1_reg_1957;
wire   [31:0] result_5_fu_1207_p3;
reg   [31:0] result_5_reg_1962;
reg   [31:0] result_5_reg_1962_pp0_iter12_reg;
reg   [31:0] result_5_reg_1962_pp0_iter13_reg;
reg   [31:0] result_5_reg_1962_pp0_iter14_reg;
reg   [31:0] result_5_reg_1962_pp0_iter15_reg;
reg   [31:0] result_5_reg_1962_pp0_iter16_reg;
wire   [4:0] iu_fu_1220_p1;
reg   [4:0] iu_reg_1967;
reg   [4:0] iu_reg_1967_pp0_iter12_reg;
wire   [14:0] xa1_fu_1274_p3;
reg   [14:0] xa1_reg_1974;
wire  signed [1:0] select_ln368_1_fu_1296_p3;
reg  signed [1:0] select_ln368_1_reg_1981;
wire   [14:0] empty_fu_1325_p2;
reg   [14:0] empty_reg_1987;
wire   [14:0] empty_145_fu_1334_p2;
reg   [14:0] empty_145_reg_1993;
wire   [0:0] tobool428_i_fu_1386_p2;
reg   [0:0] tobool428_i_reg_2019;
wire   [5:0] sub_i_i682_i_fu_1394_p2;
reg   [5:0] sub_i_i682_i_reg_2027;
wire   [10:0] k01_fu_1412_p2;
reg   [10:0] k01_reg_2033;
wire   [10:0] k10_fu_1428_p2;
reg   [10:0] k10_reg_2038;
wire   [7:0] select_ln412_1_fu_1492_p3;
reg   [7:0] select_ln412_1_reg_2048;
wire   [7:0] select_ln412_2_fu_1499_p3;
reg   [7:0] select_ln412_2_reg_2053;
wire   [17:0] mul_ln439_1_fu_1530_p2;
reg   [17:0] mul_ln439_1_reg_2068;
wire   [17:0] mul_ln439_2_fu_1539_p2;
reg   [17:0] mul_ln439_2_reg_2073;
wire   [0:0] icmp_ln347_4_fu_1596_p2;
reg   [0:0] icmp_ln347_4_reg_2088;
wire   [0:0] and_ln347_2_fu_1602_p2;
reg   [0:0] and_ln347_2_reg_2093;
wire   [17:0] grp_fu_1678_p4;
reg   [17:0] add_ln439_reg_2098;
wire   [17:0] grp_fu_1687_p3;
reg   [17:0] add_ln439_1_reg_2103;
wire   [14:0] buf_address0;
reg    buf_ce0;
reg    buf_we0;
wire   [14:0] buf_address1;
reg    buf_ce1;
wire   [7:0] buf_q1;
wire   [14:0] buf_5_address0;
reg    buf_5_ce0;
reg    buf_5_we0;
wire   [14:0] buf_5_address1;
reg    buf_5_ce1;
wire   [7:0] buf_5_q1;
wire   [14:0] buf_4_address0;
reg    buf_4_ce0;
reg    buf_4_we0;
wire   [14:0] buf_4_address1;
reg    buf_4_ce1;
wire   [7:0] buf_4_q1;
wire   [14:0] buf_3_address0;
reg    buf_3_ce0;
reg    buf_3_we0;
wire   [14:0] buf_3_address1;
reg    buf_3_ce1;
wire   [7:0] buf_3_q1;
wire   [7:0] ap_phi_reg_pp0_iter0_s_reg_477;
reg   [7:0] ap_phi_reg_pp0_iter1_s_reg_477;
reg   [7:0] ap_phi_reg_pp0_iter2_s_reg_477;
wire   [63:0] idxprom2582_i_cast_fu_514_p1;
wire   [63:0] zext_ln314_fu_679_p1;
wire   [63:0] p_cast5_fu_1353_p1;
wire   [63:0] p_cast6_fu_1362_p1;
wire   [63:0] p_cast7_fu_1372_p1;
wire   [63:0] p_cast8_fu_1381_p1;
wire   [63:0] zext_ln347_fu_1550_p1;
wire   [63:0] zext_ln347_1_fu_1554_p1;
reg   [16:0] j_fu_204;
wire   [16:0] j_4_fu_534_p2;
wire    ap_loop_init;
reg   [16:0] ap_sig_allocacmp_j_3;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_506_p0;
wire   [16:0] cols_cast_i_cast_fu_510_p1;
wire   [0:0] icmp_ln270_fu_544_p2;
wire   [14:0] div235_udiv_i_fu_556_p4;
wire   [7:0] tmp_9_fu_578_p4;
wire   [7:0] tmp_2_fu_600_p4;
wire   [7:0] tmp_8_fu_627_p4;
wire   [22:0] trunc_ln347_fu_637_p1;
wire   [7:0] tmp_1_fu_653_p4;
wire   [22:0] trunc_ln348_fu_663_p1;
wire   [0:0] or_ln348_fu_695_p2;
wire   [0:0] or_ln348_1_fu_699_p2;
wire   [0:0] and_ln348_fu_703_p2;
wire   [0:0] grp_fu_506_p2;
wire   [31:0] data_1_fu_715_p1;
wire   [7:0] xs_exp_1_fu_726_p4;
wire   [8:0] zext_ln346_1_fu_740_p1;
wire   [8:0] add_ln346_1_fu_744_p2;
wire   [7:0] sub_ln18_1_fu_758_p2;
wire  signed [8:0] sext_ln18_2_fu_764_p1;
wire   [24:0] mantissa_1_fu_776_p4;
wire  signed [31:0] sext_ln18_3_fu_789_p1;
wire   [78:0] zext_ln15_1_fu_785_p1;
wire   [78:0] zext_ln18_1_fu_792_p1;
wire   [78:0] lshr_ln18_1_fu_796_p2;
wire   [0:0] tmp_265_fu_808_p3;
wire   [78:0] shl_ln18_1_fu_802_p2;
wire   [31:0] zext_ln21_1_fu_816_p1;
wire   [31:0] tmp_5_fu_820_p4;
wire   [31:0] data_fu_837_p1;
wire   [7:0] xs_exp_fu_848_p4;
wire   [8:0] zext_ln346_fu_862_p1;
wire   [8:0] add_ln346_fu_866_p2;
wire   [7:0] sub_ln18_fu_880_p2;
wire  signed [8:0] sext_ln18_fu_886_p1;
wire   [24:0] mantissa_fu_903_p4;
wire  signed [31:0] sext_ln18_1_fu_916_p1;
wire   [78:0] zext_ln15_fu_912_p1;
wire   [78:0] zext_ln18_fu_919_p1;
wire   [78:0] lshr_ln18_fu_923_p2;
wire   [0:0] tmp_262_fu_935_p3;
wire   [78:0] shl_ln18_fu_929_p2;
wire   [31:0] zext_ln21_fu_943_p1;
wire   [31:0] tmp_4_fu_947_p4;
wire   [27:0] sub_ln370_fu_1013_p2;
wire   [26:0] lshr_ln370_3_fu_1019_p4;
wire   [27:0] zext_ln370_fu_1029_p1;
wire   [25:0] trunc_ln370_3_fu_1039_p4;
wire  signed [26:0] sext_ln370_fu_1049_p1;
wire   [0:0] tmp_271_fu_1005_p3;
wire   [27:0] sub_ln370_1_fu_1033_p2;
wire   [27:0] zext_ln370_1_fu_1053_p1;
wire   [0:0] tmp_267_fu_979_p3;
wire   [1:0] p_and_f9_fu_1069_p3;
wire   [2:0] zext_ln370_2_fu_1077_p1;
wire   [2:0] sub_ln370_2_fu_1081_p2;
wire   [1:0] trunc_ln370_1_fu_1095_p1;
wire  signed [28:0] sext_ln370_1_fu_1118_p1;
wire  signed [28:0] sext_ln370_2_fu_1121_p1;
wire   [28:0] add_ln370_fu_1124_p2;
wire   [5:0] sub_ln370_3_fu_1142_p2;
wire   [6:0] p_and_t5_fu_1148_p3;
wire   [7:0] zext_ln370_4_fu_1156_p1;
wire   [6:0] p_and_f_fu_1166_p3;
wire   [5:0] sub_ln371_fu_1177_p2;
wire   [6:0] p_and_t_fu_1182_p3;
wire   [7:0] zext_ln371_1_fu_1190_p1;
wire   [7:0] sub_ln371_1_fu_1194_p2;
wire   [7:0] zext_ln371_fu_1173_p1;
wire   [15:0] trunc_ln1_fu_1224_p4;
wire   [15:0] sub_ln368_fu_1242_p2;
wire   [14:0] trunc_ln368_6_fu_1248_p4;
wire   [0:0] tmp_270_fu_1234_p3;
wire   [14:0] sub_ln368_1_fu_1258_p2;
wire   [14:0] trunc_ln368_7_fu_1264_p4;
wire   [0:0] tmp_266_fu_1212_p3;
wire   [1:0] p_and_t3_fu_1282_p3;
wire   [1:0] sub_ln368_2_fu_1290_p2;
wire   [6:0] p_and_f3_fu_1304_p3;
wire   [7:0] zext_ln370_3_fu_1311_p1;
wire  signed [7:0] ya0_fu_1315_p3;
wire   [9:0] empty_fu_1325_p1;
wire   [9:0] empty_145_fu_1334_p1;
wire  signed [14:0] sext_ln368_fu_1340_p1;
wire   [14:0] xa0_fu_1343_p2;
wire   [14:0] empty_143_fu_1348_p2;
wire   [14:0] empty_144_fu_1358_p2;
wire   [14:0] empty_146_fu_1367_p2;
wire   [14:0] empty_147_fu_1377_p2;
wire   [5:0] iv_cast_i_fu_1391_p1;
wire   [5:0] k01_fu_1412_p0;
wire   [4:0] k01_fu_1412_p1;
wire   [5:0] iu_cast_i_fu_1409_p1;
wire   [5:0] sub_i_i569_i_fu_1418_p2;
wire   [5:0] k10_fu_1428_p0;
wire   [4:0] k10_fu_1428_p1;
wire   [4:0] mul_i_i_fu_1440_p0;
wire   [4:0] mul_i_i_fu_1440_p1;
wire   [9:0] mul_i_i_fu_1440_p2;
wire   [7:0] d10_3_fu_1457_p3;
wire   [7:0] d00_fu_1471_p3;
wire   [7:0] d11_4_fu_1464_p3;
wire   [7:0] d01_fu_1478_p3;
wire   [7:0] select_ln412_fu_1485_p3;
wire   [7:0] select_ln412_3_fu_1506_p3;
wire   [10:0] mul_ln439_1_fu_1530_p0;
wire   [7:0] mul_ln439_1_fu_1530_p1;
wire   [10:0] mul_ln439_2_fu_1539_p0;
wire   [7:0] mul_ln439_2_fu_1539_p1;
wire   [6:0] add_ln338_1_fu_1545_p2;
wire   [0:0] or_ln347_fu_1564_p2;
wire   [0:0] or_ln347_1_fu_1568_p2;
wire   [0:0] and_ln347_fu_1572_p2;
wire   [26:0] r1_load_cast_i_fu_1583_p1;
wire   [27:0] r2_load_cast_i_fu_1592_p1;
wire   [27:0] ynext_fu_1559_p2;
wire   [0:0] and_ln347_1_fu_1578_p2;
wire   [0:0] icmp_ln347_3_fu_1587_p2;
wire   [0:0] tmp_268_fu_1608_p3;
wire   [0:0] tmp_269_fu_1621_p3;
wire   [0:0] xor_ln347_fu_1615_p2;
wire   [0:0] xor_ln348_fu_1628_p2;
wire   [0:0] and_ln347_4_fu_1639_p2;
wire   [0:0] and_ln347_5_fu_1644_p2;
wire   [0:0] and_ln347_3_fu_1634_p2;
(* use_dsp48 = "no" *) wire   [17:0] add_ln439_2_fu_1655_p2;
wire   [0:0] in_range_fu_1649_p2;
wire   [7:0] d_fu_1659_p4;
wire   [10:0] grp_fu_1678_p0;
wire   [7:0] grp_fu_1678_p2;
wire   [9:0] grp_fu_1687_p0;
wire   [7:0] grp_fu_1687_p1;
reg    grp_fu_492_ce;
reg    grp_fu_497_ce;
reg    grp_fu_502_ce;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_506_ce;
reg    grp_fu_1678_ce;
reg    grp_fu_1687_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_68;
reg    ap_enable_state1_pp0_iter0_stage0;
reg    ap_enable_operation_288;
reg    ap_enable_state16_pp0_iter15_stage0;
reg    ap_enable_operation_301;
reg    ap_enable_state17_pp0_iter16_stage0;
reg    ap_enable_operation_69;
reg    ap_enable_operation_291;
reg    ap_enable_operation_304;
reg    ap_predicate_op98_store_state3;
reg    ap_enable_operation_98;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_enable_operation_242;
reg    ap_enable_state13_pp0_iter12_stage0;
reg    ap_enable_operation_261;
reg    ap_enable_state14_pp0_iter13_stage0;
reg    ap_predicate_op100_store_state3;
reg    ap_enable_operation_100;
reg    ap_enable_operation_243;
reg    ap_enable_operation_262;
reg    ap_predicate_op102_store_state3;
reg    ap_enable_operation_102;
reg    ap_enable_operation_244;
reg    ap_enable_operation_263;
reg    ap_predicate_op104_store_state3;
reg    ap_enable_operation_104;
reg    ap_enable_operation_245;
reg    ap_enable_operation_264;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [17:0] grp_fu_1678_p20;
wire   [17:0] grp_fu_1687_p00;
wire   [17:0] grp_fu_1687_p10;
wire   [10:0] k01_fu_1412_p00;
wire   [10:0] k01_fu_1412_p10;
wire   [10:0] k10_fu_1428_p00;
wire   [10:0] k10_fu_1428_p10;
wire   [9:0] mul_i_i_fu_1440_p00;
wire   [9:0] mul_i_i_fu_1440_p10;
wire   [17:0] mul_ln439_1_fu_1530_p00;
wire   [17:0] mul_ln439_1_fu_1530_p10;
wire   [17:0] mul_ln439_2_fu_1539_p00;
wire   [17:0] mul_ln439_2_fu_1539_p10;
reg    ap_condition_682;
reg    ap_condition_684;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_done_reg = 1'b0;
end

stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_buf_RAM_Abkb #(
    .DataWidth( 8 ),
    .AddressRange( 26065 ),
    .AddressWidth( 15 ))
buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_address0),
    .ce0(buf_ce0),
    .we0(buf_we0),
    .d0(ap_phi_reg_pp0_iter2_s_reg_477),
    .address1(buf_address1),
    .ce1(buf_ce1),
    .q1(buf_q1)
);

stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_buf_RAM_Abkb #(
    .DataWidth( 8 ),
    .AddressRange( 26065 ),
    .AddressWidth( 15 ))
buf_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_5_address0),
    .ce0(buf_5_ce0),
    .we0(buf_5_we0),
    .d0(ap_phi_reg_pp0_iter2_s_reg_477),
    .address1(buf_5_address1),
    .ce1(buf_5_ce1),
    .q1(buf_5_q1)
);

stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_buf_RAM_Abkb #(
    .DataWidth( 8 ),
    .AddressRange( 26065 ),
    .AddressWidth( 15 ))
buf_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_4_address0),
    .ce0(buf_4_ce0),
    .we0(buf_4_we0),
    .d0(ap_phi_reg_pp0_iter2_s_reg_477),
    .address1(buf_4_address1),
    .ce1(buf_4_ce1),
    .q1(buf_4_q1)
);

stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_buf_RAM_Abkb #(
    .DataWidth( 8 ),
    .AddressRange( 26065 ),
    .AddressWidth( 15 ))
buf_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_3_address0),
    .ce0(buf_3_ce0),
    .we0(buf_3_we0),
    .d0(ap_phi_reg_pp0_iter2_s_reg_477),
    .address1(buf_3_address1),
    .ce1(buf_3_ce1),
    .q1(buf_3_q1)
);

stereolbm_axis_cambm_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U296(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_fl_fu_690_p1),
    .din1(32'd1107296256),
    .ce(grp_fu_492_ce),
    .dout(grp_fu_492_p2)
);

stereolbm_axis_cambm_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U297(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_fl_reg_1791_pp0_iter3_reg),
    .din1(32'd1107296256),
    .ce(grp_fu_497_ce),
    .dout(grp_fu_497_p2)
);

stereolbm_axis_cambm_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U298(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_fl_fu_690_p1),
    .din1(conv3_i),
    .ce(grp_fu_502_ce),
    .opcode(5'd5),
    .dout(grp_fu_502_p2)
);

stereolbm_axis_cambm_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U299(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_506_p0),
    .din1(conv4_i),
    .ce(grp_fu_506_ce),
    .opcode(5'd5),
    .dout(grp_fu_506_p2)
);

stereolbm_axis_cambm_mul_8s_10ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 15 ))
mul_8s_10ns_15_1_1_U300(
    .din0(ya0_fu_1315_p3),
    .din1(empty_fu_1325_p1),
    .dout(empty_fu_1325_p2)
);

stereolbm_axis_cambm_mul_8s_10ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 15 ))
mul_8s_10ns_15_1_1_U301(
    .din0(ya1_reg_1957),
    .din1(empty_145_fu_1334_p1),
    .dout(empty_145_fu_1334_p2)
);

stereolbm_axis_cambm_mul_6ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_6ns_5ns_11_1_1_U302(
    .din0(k01_fu_1412_p0),
    .din1(k01_fu_1412_p1),
    .dout(k01_fu_1412_p2)
);

stereolbm_axis_cambm_mul_6ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_6ns_5ns_11_1_1_U303(
    .din0(k10_fu_1428_p0),
    .din1(k10_fu_1428_p1),
    .dout(k10_fu_1428_p2)
);

stereolbm_axis_cambm_mul_5ns_5ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_5ns_5ns_10_1_1_U304(
    .din0(mul_i_i_fu_1440_p0),
    .din1(mul_i_i_fu_1440_p1),
    .dout(mul_i_i_fu_1440_p2)
);

stereolbm_axis_cambm_mul_11ns_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_11ns_8ns_18_1_1_U305(
    .din0(mul_ln439_1_fu_1530_p0),
    .din1(mul_ln439_1_fu_1530_p1),
    .dout(mul_ln439_1_fu_1530_p2)
);

stereolbm_axis_cambm_mul_11ns_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_11ns_8ns_18_1_1_U306(
    .din0(mul_ln439_2_fu_1539_p0),
    .din1(mul_ln439_2_fu_1539_p1),
    .dout(mul_ln439_2_fu_1539_p2)
);

stereolbm_axis_cambm_ama_submuladd_11ns_11ns_8ns_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
ama_submuladd_11ns_11ns_8ns_18ns_18_4_1_U307(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1678_p0),
    .din1(k01_fu_1412_p2),
    .din2(grp_fu_1678_p2),
    .din3(mul_ln439_1_reg_2068),
    .ce(grp_fu_1678_ce),
    .dout(grp_fu_1678_p4)
);

stereolbm_axis_cambm_mac_muladd_10ns_8ns_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_muladd_10ns_8ns_18ns_18_4_1_U308(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1687_p0),
    .din1(grp_fu_1687_p1),
    .din2(mul_ln439_2_reg_2073),
    .ce(grp_fu_1687_ce),
    .dout(grp_fu_1687_p3)
);

stereolbm_axis_cambm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter16_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_682)) begin
        if (((1'd0 == and_ln270_fu_550_p2) & (icmp_ln259_fu_528_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_s_reg_477 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_s_reg_477 <= ap_phi_reg_pp0_iter0_s_reg_477;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_684)) begin
        if (((1'd1 == and_ln270_reg_1723) & (icmp_ln259_reg_1715 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_s_reg_477 <= imgR_in_data_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_s_reg_477 <= ap_phi_reg_pp0_iter1_s_reg_477;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_start_int == 1'b1) & (icmp_ln259_fu_528_p2 == 1'd0))) begin
            j_fu_204 <= j_4_fu_534_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_204 <= 17'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln259_fu_528_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln314_reg_1727 <= add_ln314_fu_566_p2;
        and_ln270_reg_1723 <= and_ln270_fu_550_p2;
        and_ln323_reg_1732 <= and_ln323_fu_572_p2;
        trunc_ln259_reg_1719 <= trunc_ln259_fu_540_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln314_reg_1727_pp0_iter1_reg <= add_ln314_reg_1727;
        and_ln323_reg_1732_pp0_iter1_reg <= and_ln323_reg_1732;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln259_reg_1715 <= icmp_ln259_fu_528_p2;
        icmp_ln347_2_reg_1736_pp0_iter1_reg <= icmp_ln347_2_reg_1736;
        icmp_ln347_5_reg_1741_pp0_iter1_reg <= icmp_ln347_5_reg_1741;
        icmp_ln348_2_reg_1746_pp0_iter1_reg <= icmp_ln348_2_reg_1746;
        icmp_ln348_3_reg_1751_pp0_iter1_reg <= icmp_ln348_3_reg_1751;
        trunc_ln259_reg_1719_pp0_iter1_reg <= trunc_ln259_reg_1719;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter15_reg) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln439_1_reg_2103 <= grp_fu_1687_p3;
        add_ln439_reg_2098 <= grp_fu_1678_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln323_reg_1732_pp0_iter10_reg <= and_ln323_reg_1732_pp0_iter9_reg;
        and_ln323_reg_1732_pp0_iter11_reg <= and_ln323_reg_1732_pp0_iter10_reg;
        and_ln323_reg_1732_pp0_iter12_reg <= and_ln323_reg_1732_pp0_iter11_reg;
        and_ln323_reg_1732_pp0_iter13_reg <= and_ln323_reg_1732_pp0_iter12_reg;
        and_ln323_reg_1732_pp0_iter14_reg <= and_ln323_reg_1732_pp0_iter13_reg;
        and_ln323_reg_1732_pp0_iter15_reg <= and_ln323_reg_1732_pp0_iter14_reg;
        and_ln323_reg_1732_pp0_iter16_reg <= and_ln323_reg_1732_pp0_iter15_reg;
        and_ln323_reg_1732_pp0_iter2_reg <= and_ln323_reg_1732_pp0_iter1_reg;
        and_ln323_reg_1732_pp0_iter3_reg <= and_ln323_reg_1732_pp0_iter2_reg;
        and_ln323_reg_1732_pp0_iter4_reg <= and_ln323_reg_1732_pp0_iter3_reg;
        and_ln323_reg_1732_pp0_iter5_reg <= and_ln323_reg_1732_pp0_iter4_reg;
        and_ln323_reg_1732_pp0_iter6_reg <= and_ln323_reg_1732_pp0_iter5_reg;
        and_ln323_reg_1732_pp0_iter7_reg <= and_ln323_reg_1732_pp0_iter6_reg;
        and_ln323_reg_1732_pp0_iter8_reg <= and_ln323_reg_1732_pp0_iter7_reg;
        and_ln323_reg_1732_pp0_iter9_reg <= and_ln323_reg_1732_pp0_iter8_reg;
        and_ln348_1_reg_1808_pp0_iter10_reg <= and_ln348_1_reg_1808_pp0_iter9_reg;
        and_ln348_1_reg_1808_pp0_iter11_reg <= and_ln348_1_reg_1808_pp0_iter10_reg;
        and_ln348_1_reg_1808_pp0_iter12_reg <= and_ln348_1_reg_1808_pp0_iter11_reg;
        and_ln348_1_reg_1808_pp0_iter13_reg <= and_ln348_1_reg_1808_pp0_iter12_reg;
        and_ln348_1_reg_1808_pp0_iter14_reg <= and_ln348_1_reg_1808_pp0_iter13_reg;
        and_ln348_1_reg_1808_pp0_iter15_reg <= and_ln348_1_reg_1808_pp0_iter14_reg;
        and_ln348_1_reg_1808_pp0_iter16_reg <= and_ln348_1_reg_1808_pp0_iter15_reg;
        and_ln348_1_reg_1808_pp0_iter4_reg <= and_ln348_1_reg_1808;
        and_ln348_1_reg_1808_pp0_iter5_reg <= and_ln348_1_reg_1808_pp0_iter4_reg;
        and_ln348_1_reg_1808_pp0_iter6_reg <= and_ln348_1_reg_1808_pp0_iter5_reg;
        and_ln348_1_reg_1808_pp0_iter7_reg <= and_ln348_1_reg_1808_pp0_iter6_reg;
        and_ln348_1_reg_1808_pp0_iter8_reg <= and_ln348_1_reg_1808_pp0_iter7_reg;
        and_ln348_1_reg_1808_pp0_iter9_reg <= and_ln348_1_reg_1808_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln347_1_reg_1776_pp0_iter10_reg <= icmp_ln347_1_reg_1776_pp0_iter9_reg;
        icmp_ln347_1_reg_1776_pp0_iter11_reg <= icmp_ln347_1_reg_1776_pp0_iter10_reg;
        icmp_ln347_1_reg_1776_pp0_iter12_reg <= icmp_ln347_1_reg_1776_pp0_iter11_reg;
        icmp_ln347_1_reg_1776_pp0_iter13_reg <= icmp_ln347_1_reg_1776_pp0_iter12_reg;
        icmp_ln347_1_reg_1776_pp0_iter14_reg <= icmp_ln347_1_reg_1776_pp0_iter13_reg;
        icmp_ln347_1_reg_1776_pp0_iter15_reg <= icmp_ln347_1_reg_1776_pp0_iter14_reg;
        icmp_ln347_1_reg_1776_pp0_iter2_reg <= icmp_ln347_1_reg_1776;
        icmp_ln347_1_reg_1776_pp0_iter3_reg <= icmp_ln347_1_reg_1776_pp0_iter2_reg;
        icmp_ln347_1_reg_1776_pp0_iter4_reg <= icmp_ln347_1_reg_1776_pp0_iter3_reg;
        icmp_ln347_1_reg_1776_pp0_iter5_reg <= icmp_ln347_1_reg_1776_pp0_iter4_reg;
        icmp_ln347_1_reg_1776_pp0_iter6_reg <= icmp_ln347_1_reg_1776_pp0_iter5_reg;
        icmp_ln347_1_reg_1776_pp0_iter7_reg <= icmp_ln347_1_reg_1776_pp0_iter6_reg;
        icmp_ln347_1_reg_1776_pp0_iter8_reg <= icmp_ln347_1_reg_1776_pp0_iter7_reg;
        icmp_ln347_1_reg_1776_pp0_iter9_reg <= icmp_ln347_1_reg_1776_pp0_iter8_reg;
        icmp_ln347_2_reg_1736_pp0_iter10_reg <= icmp_ln347_2_reg_1736_pp0_iter9_reg;
        icmp_ln347_2_reg_1736_pp0_iter11_reg <= icmp_ln347_2_reg_1736_pp0_iter10_reg;
        icmp_ln347_2_reg_1736_pp0_iter12_reg <= icmp_ln347_2_reg_1736_pp0_iter11_reg;
        icmp_ln347_2_reg_1736_pp0_iter13_reg <= icmp_ln347_2_reg_1736_pp0_iter12_reg;
        icmp_ln347_2_reg_1736_pp0_iter14_reg <= icmp_ln347_2_reg_1736_pp0_iter13_reg;
        icmp_ln347_2_reg_1736_pp0_iter15_reg <= icmp_ln347_2_reg_1736_pp0_iter14_reg;
        icmp_ln347_2_reg_1736_pp0_iter2_reg <= icmp_ln347_2_reg_1736_pp0_iter1_reg;
        icmp_ln347_2_reg_1736_pp0_iter3_reg <= icmp_ln347_2_reg_1736_pp0_iter2_reg;
        icmp_ln347_2_reg_1736_pp0_iter4_reg <= icmp_ln347_2_reg_1736_pp0_iter3_reg;
        icmp_ln347_2_reg_1736_pp0_iter5_reg <= icmp_ln347_2_reg_1736_pp0_iter4_reg;
        icmp_ln347_2_reg_1736_pp0_iter6_reg <= icmp_ln347_2_reg_1736_pp0_iter5_reg;
        icmp_ln347_2_reg_1736_pp0_iter7_reg <= icmp_ln347_2_reg_1736_pp0_iter6_reg;
        icmp_ln347_2_reg_1736_pp0_iter8_reg <= icmp_ln347_2_reg_1736_pp0_iter7_reg;
        icmp_ln347_2_reg_1736_pp0_iter9_reg <= icmp_ln347_2_reg_1736_pp0_iter8_reg;
        icmp_ln347_5_reg_1741_pp0_iter10_reg <= icmp_ln347_5_reg_1741_pp0_iter9_reg;
        icmp_ln347_5_reg_1741_pp0_iter11_reg <= icmp_ln347_5_reg_1741_pp0_iter10_reg;
        icmp_ln347_5_reg_1741_pp0_iter12_reg <= icmp_ln347_5_reg_1741_pp0_iter11_reg;
        icmp_ln347_5_reg_1741_pp0_iter13_reg <= icmp_ln347_5_reg_1741_pp0_iter12_reg;
        icmp_ln347_5_reg_1741_pp0_iter14_reg <= icmp_ln347_5_reg_1741_pp0_iter13_reg;
        icmp_ln347_5_reg_1741_pp0_iter15_reg <= icmp_ln347_5_reg_1741_pp0_iter14_reg;
        icmp_ln347_5_reg_1741_pp0_iter2_reg <= icmp_ln347_5_reg_1741_pp0_iter1_reg;
        icmp_ln347_5_reg_1741_pp0_iter3_reg <= icmp_ln347_5_reg_1741_pp0_iter2_reg;
        icmp_ln347_5_reg_1741_pp0_iter4_reg <= icmp_ln347_5_reg_1741_pp0_iter3_reg;
        icmp_ln347_5_reg_1741_pp0_iter5_reg <= icmp_ln347_5_reg_1741_pp0_iter4_reg;
        icmp_ln347_5_reg_1741_pp0_iter6_reg <= icmp_ln347_5_reg_1741_pp0_iter5_reg;
        icmp_ln347_5_reg_1741_pp0_iter7_reg <= icmp_ln347_5_reg_1741_pp0_iter6_reg;
        icmp_ln347_5_reg_1741_pp0_iter8_reg <= icmp_ln347_5_reg_1741_pp0_iter7_reg;
        icmp_ln347_5_reg_1741_pp0_iter9_reg <= icmp_ln347_5_reg_1741_pp0_iter8_reg;
        icmp_ln347_reg_1771_pp0_iter10_reg <= icmp_ln347_reg_1771_pp0_iter9_reg;
        icmp_ln347_reg_1771_pp0_iter11_reg <= icmp_ln347_reg_1771_pp0_iter10_reg;
        icmp_ln347_reg_1771_pp0_iter12_reg <= icmp_ln347_reg_1771_pp0_iter11_reg;
        icmp_ln347_reg_1771_pp0_iter13_reg <= icmp_ln347_reg_1771_pp0_iter12_reg;
        icmp_ln347_reg_1771_pp0_iter14_reg <= icmp_ln347_reg_1771_pp0_iter13_reg;
        icmp_ln347_reg_1771_pp0_iter15_reg <= icmp_ln347_reg_1771_pp0_iter14_reg;
        icmp_ln347_reg_1771_pp0_iter2_reg <= icmp_ln347_reg_1771;
        icmp_ln347_reg_1771_pp0_iter3_reg <= icmp_ln347_reg_1771_pp0_iter2_reg;
        icmp_ln347_reg_1771_pp0_iter4_reg <= icmp_ln347_reg_1771_pp0_iter3_reg;
        icmp_ln347_reg_1771_pp0_iter5_reg <= icmp_ln347_reg_1771_pp0_iter4_reg;
        icmp_ln347_reg_1771_pp0_iter6_reg <= icmp_ln347_reg_1771_pp0_iter5_reg;
        icmp_ln347_reg_1771_pp0_iter7_reg <= icmp_ln347_reg_1771_pp0_iter6_reg;
        icmp_ln347_reg_1771_pp0_iter8_reg <= icmp_ln347_reg_1771_pp0_iter7_reg;
        icmp_ln347_reg_1771_pp0_iter9_reg <= icmp_ln347_reg_1771_pp0_iter8_reg;
        icmp_ln348_1_reg_1786_pp0_iter2_reg <= icmp_ln348_1_reg_1786;
        icmp_ln348_2_reg_1746_pp0_iter2_reg <= icmp_ln348_2_reg_1746_pp0_iter1_reg;
        icmp_ln348_3_reg_1751_pp0_iter2_reg <= icmp_ln348_3_reg_1751_pp0_iter1_reg;
        icmp_ln348_reg_1781_pp0_iter2_reg <= icmp_ln348_reg_1781;
        iu_reg_1967_pp0_iter12_reg <= iu_reg_1967;
        iv_reg_1901_pp0_iter10_reg <= iv_reg_1901;
        iv_reg_1901_pp0_iter11_reg <= iv_reg_1901_pp0_iter10_reg;
        iv_reg_1901_pp0_iter12_reg <= iv_reg_1901_pp0_iter11_reg;
        result_5_reg_1962_pp0_iter12_reg <= result_5_reg_1962;
        result_5_reg_1962_pp0_iter13_reg <= result_5_reg_1962_pp0_iter12_reg;
        result_5_reg_1962_pp0_iter14_reg <= result_5_reg_1962_pp0_iter13_reg;
        result_5_reg_1962_pp0_iter15_reg <= result_5_reg_1962_pp0_iter14_reg;
        result_5_reg_1962_pp0_iter16_reg <= result_5_reg_1962_pp0_iter15_reg;
        result_reg_1880_pp0_iter10_reg <= result_reg_1880;
        result_reg_1880_pp0_iter11_reg <= result_reg_1880_pp0_iter10_reg;
        result_reg_1880_pp0_iter12_reg <= result_reg_1880_pp0_iter11_reg;
        result_reg_1880_pp0_iter13_reg <= result_reg_1880_pp0_iter12_reg;
        result_reg_1880_pp0_iter14_reg <= result_reg_1880_pp0_iter13_reg;
        result_reg_1880_pp0_iter15_reg <= result_reg_1880_pp0_iter14_reg;
        result_reg_1880_pp0_iter16_reg <= result_reg_1880_pp0_iter15_reg;
        sext_ln335_reg_1896_pp0_iter10_reg <= sext_ln335_reg_1896;
        sext_ln335_reg_1896_pp0_iter11_reg <= sext_ln335_reg_1896_pp0_iter10_reg;
        sext_ln335_reg_1896_pp0_iter12_reg <= sext_ln335_reg_1896_pp0_iter11_reg;
        sext_ln335_reg_1896_pp0_iter13_reg <= sext_ln335_reg_1896_pp0_iter12_reg;
        sext_ln335_reg_1896_pp0_iter14_reg <= sext_ln335_reg_1896_pp0_iter13_reg;
        sext_ln335_reg_1896_pp0_iter15_reg <= sext_ln335_reg_1896_pp0_iter14_reg;
        tmp_s_reg_1803_pp0_iter10_reg <= tmp_s_reg_1803_pp0_iter9_reg;
        tmp_s_reg_1803_pp0_iter11_reg <= tmp_s_reg_1803_pp0_iter10_reg;
        tmp_s_reg_1803_pp0_iter12_reg <= tmp_s_reg_1803_pp0_iter11_reg;
        tmp_s_reg_1803_pp0_iter13_reg <= tmp_s_reg_1803_pp0_iter12_reg;
        tmp_s_reg_1803_pp0_iter14_reg <= tmp_s_reg_1803_pp0_iter13_reg;
        tmp_s_reg_1803_pp0_iter15_reg <= tmp_s_reg_1803_pp0_iter14_reg;
        tmp_s_reg_1803_pp0_iter4_reg <= tmp_s_reg_1803;
        tmp_s_reg_1803_pp0_iter5_reg <= tmp_s_reg_1803_pp0_iter4_reg;
        tmp_s_reg_1803_pp0_iter6_reg <= tmp_s_reg_1803_pp0_iter5_reg;
        tmp_s_reg_1803_pp0_iter7_reg <= tmp_s_reg_1803_pp0_iter6_reg;
        tmp_s_reg_1803_pp0_iter8_reg <= tmp_s_reg_1803_pp0_iter7_reg;
        tmp_s_reg_1803_pp0_iter9_reg <= tmp_s_reg_1803_pp0_iter8_reg;
        tobool438_i_reg_1929_pp0_iter10_reg <= tobool438_i_reg_1929;
        tobool438_i_reg_1929_pp0_iter11_reg <= tobool438_i_reg_1929_pp0_iter10_reg;
        tobool438_i_reg_1929_pp0_iter12_reg <= tobool438_i_reg_1929_pp0_iter11_reg;
        trunc_ln335_2_reg_1890_pp0_iter10_reg <= trunc_ln335_2_reg_1890;
        trunc_ln335_2_reg_1890_pp0_iter11_reg <= trunc_ln335_2_reg_1890_pp0_iter10_reg;
        trunc_ln335_2_reg_1890_pp0_iter12_reg <= trunc_ln335_2_reg_1890_pp0_iter11_reg;
        trunc_ln335_2_reg_1890_pp0_iter13_reg <= trunc_ln335_2_reg_1890_pp0_iter12_reg;
        trunc_ln335_2_reg_1890_pp0_iter14_reg <= trunc_ln335_2_reg_1890_pp0_iter13_reg;
        val_4_reg_1874_pp0_iter10_reg <= val_4_reg_1874;
        val_5_reg_1843_pp0_iter8_reg <= val_5_reg_1843;
        x_fl_reg_1791_pp0_iter3_reg <= x_fl_reg_1791;
        xs_sign_1_reg_1818_pp0_iter7_reg <= xs_sign_1_reg_1818;
        xs_sign_1_reg_1818_pp0_iter8_reg <= xs_sign_1_reg_1818_pp0_iter7_reg;
        xs_sign_reg_1849_pp0_iter10_reg <= xs_sign_reg_1849_pp0_iter9_reg;
        xs_sign_reg_1849_pp0_iter9_reg <= xs_sign_reg_1849;
        y_reg_1885_pp0_iter10_reg <= y_reg_1885;
        y_reg_1885_pp0_iter11_reg <= y_reg_1885_pp0_iter10_reg;
        y_reg_1885_pp0_iter12_reg <= y_reg_1885_pp0_iter11_reg;
        y_reg_1885_pp0_iter13_reg <= y_reg_1885_pp0_iter12_reg;
        y_reg_1885_pp0_iter14_reg <= y_reg_1885_pp0_iter13_reg;
        y_reg_1885_pp0_iter15_reg <= y_reg_1885_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter15_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln347_2_reg_2093 <= and_ln347_2_fu_1602_p2;
        icmp_ln347_4_reg_2088 <= icmp_ln347_4_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln348_1_reg_1808 <= and_ln348_1_fu_709_p2;
        tmp_s_reg_1803 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dc_1_reg_1813 <= grp_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter6_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dc_reg_1838 <= grp_fu_497_p2;
        val_5_reg_1843 <= val_5_fu_830_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter10_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_145_reg_1993 <= empty_145_fu_1334_p2;
        empty_reg_1987 <= empty_fu_1325_p2;
        iu_reg_1967 <= iu_fu_1220_p1;
        result_5_reg_1962 <= result_5_fu_1207_p3;
        select_ln368_1_reg_1981 <= select_ln368_1_fu_1296_p3;
        xa1_reg_1974 <= xa1_fu_1274_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln347_1_reg_1776 <= icmp_ln347_1_fu_647_p2;
        icmp_ln347_reg_1771 <= icmp_ln347_fu_641_p2;
        icmp_ln348_1_reg_1786 <= icmp_ln348_1_fu_673_p2;
        icmp_ln348_reg_1781 <= icmp_ln348_fu_667_p2;
        val_1_reg_1766 <= mapyRMat_data_dout;
        val_reg_1761 <= mapxRMat_data_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_fu_572_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln259_fu_528_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln347_2_reg_1736 <= icmp_ln347_2_fu_588_p2;
        icmp_ln347_5_reg_1741 <= icmp_ln347_5_fu_594_p2;
        icmp_ln348_2_reg_1746 <= icmp_ln348_2_fu_610_p2;
        icmp_ln348_3_reg_1751 <= icmp_ln348_3_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter8_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iv_reg_1901 <= iv_fu_1001_p1;
        result_reg_1880 <= result_fu_964_p3;
        select_ln370_3_reg_1919 <= select_ln370_3_fu_1087_p3;
        select_ln370_reg_1908 <= select_ln370_fu_1057_p3;
        sext_ln335_reg_1896 <= sext_ln335_fu_997_p1;
        tmp_273_reg_1924 <= select_ln370_fu_1057_p3[32'd27];
        tobool438_i_reg_1929 <= tobool438_i_fu_1107_p2;
        trunc_ln335_2_reg_1890 <= {{result_fu_964_p3[11:5]}};
        trunc_ln370_reg_1913 <= trunc_ln370_fu_1065_p1;
        val_4_reg_1874 <= val_4_fu_957_p3;
        y_reg_1885 <= {{result_fu_964_p3[31:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter12_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k01_reg_2033 <= k01_fu_1412_p2;
        k10_reg_2038 <= k10_fu_1428_p2;
        select_ln412_1_reg_2048 <= select_ln412_1_fu_1492_p3;
        select_ln412_2_reg_2053 <= select_ln412_2_fu_1499_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter13_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln439_1_reg_2068 <= mul_ln439_1_fu_1530_p2;
        mul_ln439_2_reg_2073 <= mul_ln439_2_fu_1539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter9_reg) & (xs_sign_reg_1849_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        result_2_reg_1937 <= result_2_fu_1113_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter7_reg) & (xs_sign_1_reg_1818_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        result_3_reg_1869 <= result_3_fu_898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter5_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln18_2_reg_1833 <= select_ln18_2_fu_768_p3;
        tmp_264_reg_1828 <= add_ln346_1_fu_744_p2[32'd8];
        trunc_ln371_1_reg_1823 <= trunc_ln371_1_fu_736_p1;
        xs_sign_1_reg_1818 <= data_1_fu_715_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter7_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln18_reg_1864 <= select_ln18_fu_890_p3;
        tmp_reg_1859 <= add_ln346_fu_866_p2[32'd8];
        trunc_ln371_reg_1854 <= trunc_ln371_fu_858_p1;
        xs_sign_reg_1849 <= data_fu_837_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter11_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sub_i_i682_i_reg_2027 <= sub_i_i682_i_fu_1394_p2;
        tobool428_i_reg_2019 <= tobool428_i_fu_1386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter9_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sub_ln370_4_reg_1952 <= sub_ln370_4_fu_1160_p2;
        tmp_272_reg_1947 <= add_ln370_fu_1124_p2[32'd28];
        trunc_ln370_2_reg_1942 <= trunc_ln370_2_fu_1130_p1;
        ya1_reg_1957 <= ya1_fu_1200_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_fl_reg_1791 <= x_fl_fu_686_p1;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln259_fu_528_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter16_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_3 = 17'd0;
    end else begin
        ap_sig_allocacmp_j_3 = j_fu_204;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_ce0 = 1'b1;
    end else begin
        buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_ce1 = 1'b1;
    end else begin
        buf_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln259_reg_1719_pp0_iter1_reg == 1'd1) & (trunc_ln == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_we0 = 1'b1;
    end else begin
        buf_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_ce0 = 1'b1;
    end else begin
        buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_ce1 = 1'b1;
    end else begin
        buf_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln259_reg_1719_pp0_iter1_reg == 1'd0) & (trunc_ln == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_we0 = 1'b1;
    end else begin
        buf_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_ce0 = 1'b1;
    end else begin
        buf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_ce1 = 1'b1;
    end else begin
        buf_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln259_reg_1719_pp0_iter1_reg == 1'd1) & (trunc_ln == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_we0 = 1'b1;
    end else begin
        buf_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_ce0 = 1'b1;
    end else begin
        buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_ce1 = 1'b1;
    end else begin
        buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln259_reg_1719_pp0_iter1_reg == 1'd0) & (trunc_ln == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_we0 = 1'b1;
    end else begin
        buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1678_ce = 1'b1;
    end else begin
        grp_fu_1678_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1687_ce = 1'b1;
    end else begin
        grp_fu_1687_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_492_ce = 1'b1;
    end else begin
        grp_fu_492_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_497_ce = 1'b1;
    end else begin
        grp_fu_497_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_502_ce = 1'b1;
    end else begin
        grp_fu_502_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_506_ce = 1'b1;
    end else begin
        grp_fu_506_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op80_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        imgR_in_data_blk_n = imgR_in_data_empty_n;
    end else begin
        imgR_in_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op80_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        imgR_in_data_read = 1'b1;
    end else begin
        imgR_in_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln323_reg_1732) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mapxRMat_data_blk_n = mapxRMat_data_empty_n;
    end else begin
        mapxRMat_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln323_reg_1732) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mapxRMat_data_read = 1'b1;
    end else begin
        mapxRMat_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln323_reg_1732) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mapyRMat_data_blk_n = mapyRMat_data_empty_n;
    end else begin
        mapyRMat_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln323_reg_1732) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mapyRMat_data_read = 1'b1;
    end else begin
        mapyRMat_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r1_ce0 = 1'b1;
    end else begin
        r1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r1_ce1 = 1'b1;
    end else begin
        r1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln259_fu_528_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r1_we0 = 1'b1;
    end else begin
        r1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r2_ce0 = 1'b1;
    end else begin
        r2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r2_ce1 = 1'b1;
    end else begin
        r2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln259_fu_528_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r2_we0 = 1'b1;
    end else begin
        r2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter16_reg) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rightRemappedMat_data_blk_n = rightRemappedMat_data_full_n;
    end else begin
        rightRemappedMat_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln323_reg_1732_pp0_iter16_reg) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rightRemappedMat_data_write = 1'b1;
    end else begin
        rightRemappedMat_data_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln314_fu_566_p2 = (mul_ln314 + div235_udiv_i_fu_556_p4);

assign add_ln338_1_fu_1545_p2 = (trunc_ln335_2_reg_1890_pp0_iter14_reg + 7'd1);

assign add_ln346_1_fu_744_p2 = ($signed(zext_ln346_1_fu_740_p1) + $signed(9'd385));

assign add_ln346_fu_866_p2 = ($signed(zext_ln346_fu_862_p1) + $signed(9'd385));

assign add_ln370_fu_1124_p2 = ($signed(sext_ln370_1_fu_1118_p1) + $signed(sext_ln370_2_fu_1121_p1));

assign add_ln439_2_fu_1655_p2 = (add_ln439_1_reg_2103 + add_ln439_reg_2098);

assign and_ln270_fu_550_p2 = (icmp_ln270_fu_544_p2 & cmp111_i);

assign and_ln323_fu_572_p2 = (icmp_ln270_fu_544_p2 & cmp263_i);

assign and_ln347_1_fu_1578_p2 = (tmp_s_reg_1803_pp0_iter15_reg & and_ln347_fu_1572_p2);

assign and_ln347_2_fu_1602_p2 = (icmp_ln347_3_fu_1587_p2 & and_ln347_1_fu_1578_p2);

assign and_ln347_3_fu_1634_p2 = (xor_ln347_fu_1615_p2 & and_ln347_2_reg_2093);

assign and_ln347_4_fu_1639_p2 = (xor_ln348_fu_1628_p2 & icmp_ln347_4_reg_2088);

assign and_ln347_5_fu_1644_p2 = (and_ln348_1_reg_1808_pp0_iter16_reg & and_ln347_4_fu_1639_p2);

assign and_ln347_fu_1572_p2 = (or_ln347_fu_1564_p2 & or_ln347_1_fu_1568_p2);

assign and_ln348_1_fu_709_p2 = (grp_fu_506_p2 & and_ln348_fu_703_p2);

assign and_ln348_fu_703_p2 = (or_ln348_fu_695_p2 & or_ln348_1_fu_699_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = (((1'd1 == and_ln323_reg_1732_pp0_iter16_reg) & (ap_enable_reg_pp0_iter17 == 1'b1) & (rightRemappedMat_data_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op80_read_state2 == 1'b1) & (imgR_in_data_empty_n == 1'b0)) | ((1'd1 == and_ln323_reg_1732) & (mapyRMat_data_empty_n == 1'b0)) | ((mapxRMat_data_empty_n == 1'b0) & (1'd1 == and_ln323_reg_1732)))));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln323_reg_1732_pp0_iter16_reg) & (ap_enable_reg_pp0_iter17 == 1'b1) & (rightRemappedMat_data_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op80_read_state2 == 1'b1) & (imgR_in_data_empty_n == 1'b0)) | ((1'd1 == and_ln323_reg_1732) & (mapyRMat_data_empty_n == 1'b0)) | ((mapxRMat_data_empty_n == 1'b0) & (1'd1 == and_ln323_reg_1732)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln323_reg_1732_pp0_iter16_reg) & (ap_enable_reg_pp0_iter17 == 1'b1) & (rightRemappedMat_data_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op80_read_state2 == 1'b1) & (imgR_in_data_empty_n == 1'b0)) | ((1'd1 == and_ln323_reg_1732) & (mapyRMat_data_empty_n == 1'b0)) | ((mapxRMat_data_empty_n == 1'b0) & (1'd1 == and_ln323_reg_1732)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln323_reg_1732_pp0_iter16_reg) & (ap_enable_reg_pp0_iter17 == 1'b1) & (rightRemappedMat_data_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op80_read_state2 == 1'b1) & (imgR_in_data_empty_n == 1'b0)) | ((1'd1 == and_ln323_reg_1732) & (mapyRMat_data_empty_n == 1'b0)) | ((mapxRMat_data_empty_n == 1'b0) & (1'd1 == and_ln323_reg_1732)))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp0_stage0_iter17 = ((1'd1 == and_ln323_reg_1732_pp0_iter16_reg) & (rightRemappedMat_data_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op80_read_state2 == 1'b1) & (imgR_in_data_empty_n == 1'b0)) | ((1'd1 == and_ln323_reg_1732) & (mapyRMat_data_empty_n == 1'b0)) | ((mapxRMat_data_empty_n == 1'b0) & (1'd1 == and_ln323_reg_1732)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_682 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_684 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_enable_operation_100 = (ap_predicate_op100_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_102 = (ap_predicate_op102_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_104 = (ap_predicate_op104_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_242 = (1'd1 == and_ln323_reg_1732_pp0_iter11_reg);
end

always @ (*) begin
    ap_enable_operation_243 = (1'd1 == and_ln323_reg_1732_pp0_iter11_reg);
end

always @ (*) begin
    ap_enable_operation_244 = (1'd1 == and_ln323_reg_1732_pp0_iter11_reg);
end

always @ (*) begin
    ap_enable_operation_245 = (1'd1 == and_ln323_reg_1732_pp0_iter11_reg);
end

always @ (*) begin
    ap_enable_operation_261 = (1'd1 == and_ln323_reg_1732_pp0_iter12_reg);
end

always @ (*) begin
    ap_enable_operation_262 = (1'd1 == and_ln323_reg_1732_pp0_iter12_reg);
end

always @ (*) begin
    ap_enable_operation_263 = (1'd1 == and_ln323_reg_1732_pp0_iter12_reg);
end

always @ (*) begin
    ap_enable_operation_264 = (1'd1 == and_ln323_reg_1732_pp0_iter12_reg);
end

always @ (*) begin
    ap_enable_operation_288 = (1'd1 == and_ln323_reg_1732_pp0_iter14_reg);
end

always @ (*) begin
    ap_enable_operation_291 = (1'd1 == and_ln323_reg_1732_pp0_iter14_reg);
end

always @ (*) begin
    ap_enable_operation_301 = (1'd1 == and_ln323_reg_1732_pp0_iter15_reg);
end

always @ (*) begin
    ap_enable_operation_304 = (1'd1 == and_ln323_reg_1732_pp0_iter15_reg);
end

always @ (*) begin
    ap_enable_operation_68 = (icmp_ln259_fu_528_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_69 = (icmp_ln259_fu_528_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_98 = (ap_predicate_op98_store_state3 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state13_pp0_iter12_stage0 = ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state14_pp0_iter13_stage0 = ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state16_pp0_iter15_stage0 = ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state17_pp0_iter16_stage0 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_s_reg_477 = 'bx;

always @ (*) begin
    ap_predicate_op100_store_state3 = ((trunc_ln259_reg_1719_pp0_iter1_reg == 1'd1) & (trunc_ln == 1'd0));
end

always @ (*) begin
    ap_predicate_op102_store_state3 = ((trunc_ln259_reg_1719_pp0_iter1_reg == 1'd0) & (trunc_ln == 1'd1));
end

always @ (*) begin
    ap_predicate_op104_store_state3 = ((trunc_ln259_reg_1719_pp0_iter1_reg == 1'd1) & (trunc_ln == 1'd1));
end

always @ (*) begin
    ap_predicate_op80_read_state2 = ((1'd1 == and_ln270_reg_1723) & (icmp_ln259_reg_1715 == 1'd0));
end

always @ (*) begin
    ap_predicate_op98_store_state3 = ((trunc_ln259_reg_1719_pp0_iter1_reg == 1'd0) & (trunc_ln == 1'd0));
end

assign buf_3_address0 = zext_ln314_fu_679_p1;

assign buf_3_address1 = p_cast8_fu_1381_p1;

assign buf_4_address0 = zext_ln314_fu_679_p1;

assign buf_4_address1 = p_cast7_fu_1372_p1;

assign buf_5_address0 = zext_ln314_fu_679_p1;

assign buf_5_address1 = p_cast6_fu_1362_p1;

assign buf_address0 = zext_ln314_fu_679_p1;

assign buf_address1 = p_cast5_fu_1353_p1;

assign cols_cast_i_cast_fu_510_p1 = cols_cast_i;

assign d00_fu_1471_p3 = ((tobool428_i_reg_2019[0:0] == 1'b1) ? buf_4_q1 : buf_3_q1);

assign d01_fu_1478_p3 = ((tobool428_i_reg_2019[0:0] == 1'b1) ? buf_3_q1 : buf_4_q1);

assign d10_3_fu_1457_p3 = ((tobool428_i_reg_2019[0:0] == 1'b1) ? buf_q1 : buf_5_q1);

assign d11_4_fu_1464_p3 = ((tobool428_i_reg_2019[0:0] == 1'b1) ? buf_5_q1 : buf_q1);

assign d_fu_1659_p4 = {{add_ln439_2_fu_1655_p2[17:10]}};

assign data_1_fu_715_p1 = dc_1_reg_1813;

assign data_fu_837_p1 = dc_reg_1838;

assign div235_udiv_i_fu_556_p4 = {{ap_sig_allocacmp_j_3[15:1]}};

assign empty_143_fu_1348_p2 = (empty_reg_1987 + xa0_fu_1343_p2);

assign empty_144_fu_1358_p2 = (empty_reg_1987 + xa1_reg_1974);

assign empty_145_fu_1334_p1 = 15'd401;

assign empty_146_fu_1367_p2 = (empty_145_reg_1993 + xa0_fu_1343_p2);

assign empty_147_fu_1377_p2 = (empty_145_reg_1993 + xa1_reg_1974);

assign empty_fu_1325_p1 = 15'd401;

assign grp_fu_1678_p0 = {{sub_i_i682_i_reg_2027}, {5'd0}};

assign grp_fu_1678_p2 = grp_fu_1678_p20;

assign grp_fu_1678_p20 = select_ln412_fu_1485_p3;

assign grp_fu_1687_p0 = grp_fu_1687_p00;

assign grp_fu_1687_p00 = mul_i_i_fu_1440_p2;

assign grp_fu_1687_p1 = grp_fu_1687_p10;

assign grp_fu_1687_p10 = select_ln412_3_fu_1506_p3;

assign grp_fu_506_p0 = val_reg_1761;

assign icmp_ln259_fu_528_p2 = ((ap_sig_allocacmp_j_3 == add106_i) ? 1'b1 : 1'b0);

assign icmp_ln270_fu_544_p2 = ((ap_sig_allocacmp_j_3 < cols_cast_i_cast_fu_510_p1) ? 1'b1 : 1'b0);

assign icmp_ln347_1_fu_647_p2 = ((trunc_ln347_fu_637_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln347_2_fu_588_p2 = ((tmp_9_fu_578_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln347_3_fu_1587_p2 = ((r1_load_cast_i_fu_1583_p1 == y_reg_1885_pp0_iter15_reg) ? 1'b1 : 1'b0);

assign icmp_ln347_4_fu_1596_p2 = ((r2_load_cast_i_fu_1592_p1 == ynext_fu_1559_p2) ? 1'b1 : 1'b0);

assign icmp_ln347_5_fu_594_p2 = ((trunc_ln347_2 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln347_fu_641_p2 = ((tmp_8_fu_627_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln348_1_fu_673_p2 = ((trunc_ln348_fu_663_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln348_2_fu_610_p2 = ((tmp_2_fu_600_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln348_3_fu_616_p2 = ((trunc_ln348_2 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln348_fu_667_p2 = ((tmp_1_fu_653_p4 != 8'd255) ? 1'b1 : 1'b0);

assign idxprom2582_i_cast_fu_514_p1 = idxprom2582_i;

assign in_range_fu_1649_p2 = (and_ln347_5_fu_1644_p2 & and_ln347_3_fu_1634_p2);

assign iu_cast_i_fu_1409_p1 = iu_reg_1967_pp0_iter12_reg;

assign iu_fu_1220_p1 = result_5_fu_1207_p3[4:0];

assign iv_cast_i_fu_1391_p1 = iv_reg_1901_pp0_iter11_reg;

assign iv_fu_1001_p1 = result_fu_964_p3[4:0];

assign j_4_fu_534_p2 = (ap_sig_allocacmp_j_3 + 17'd1);

assign k01_fu_1412_p0 = k01_fu_1412_p00;

assign k01_fu_1412_p00 = sub_i_i682_i_reg_2027;

assign k01_fu_1412_p1 = k01_fu_1412_p10;

assign k01_fu_1412_p10 = iu_reg_1967_pp0_iter12_reg;

assign k10_fu_1428_p0 = k10_fu_1428_p00;

assign k10_fu_1428_p00 = sub_i_i569_i_fu_1418_p2;

assign k10_fu_1428_p1 = k10_fu_1428_p10;

assign k10_fu_1428_p10 = iv_reg_1901_pp0_iter12_reg;

assign lshr_ln18_1_fu_796_p2 = zext_ln15_1_fu_785_p1 >> zext_ln18_1_fu_792_p1;

assign lshr_ln18_fu_923_p2 = zext_ln15_fu_912_p1 >> zext_ln18_fu_919_p1;

assign lshr_ln370_3_fu_1019_p4 = {{sub_ln370_fu_1013_p2[27:1]}};

assign mantissa_1_fu_776_p4 = {{{{1'd1}, {trunc_ln371_1_reg_1823}}}, {1'd0}};

assign mantissa_fu_903_p4 = {{{{1'd1}, {trunc_ln371_reg_1854}}}, {1'd0}};

assign mul_i_i_fu_1440_p0 = mul_i_i_fu_1440_p00;

assign mul_i_i_fu_1440_p00 = iv_reg_1901_pp0_iter12_reg;

assign mul_i_i_fu_1440_p1 = mul_i_i_fu_1440_p10;

assign mul_i_i_fu_1440_p10 = iu_reg_1967_pp0_iter12_reg;

assign mul_ln439_1_fu_1530_p0 = mul_ln439_1_fu_1530_p00;

assign mul_ln439_1_fu_1530_p00 = k01_reg_2033;

assign mul_ln439_1_fu_1530_p1 = mul_ln439_1_fu_1530_p10;

assign mul_ln439_1_fu_1530_p10 = select_ln412_1_reg_2048;

assign mul_ln439_2_fu_1539_p0 = mul_ln439_2_fu_1539_p00;

assign mul_ln439_2_fu_1539_p00 = k10_reg_2038;

assign mul_ln439_2_fu_1539_p1 = mul_ln439_2_fu_1539_p10;

assign mul_ln439_2_fu_1539_p10 = select_ln412_2_reg_2053;

assign or_ln347_1_fu_1568_p2 = (icmp_ln347_5_reg_1741_pp0_iter15_reg | icmp_ln347_2_reg_1736_pp0_iter15_reg);

assign or_ln347_fu_1564_p2 = (icmp_ln347_reg_1771_pp0_iter15_reg | icmp_ln347_1_reg_1776_pp0_iter15_reg);

assign or_ln348_1_fu_699_p2 = (icmp_ln348_3_reg_1751_pp0_iter2_reg | icmp_ln348_2_reg_1746_pp0_iter2_reg);

assign or_ln348_fu_695_p2 = (icmp_ln348_reg_1781_pp0_iter2_reg | icmp_ln348_1_reg_1786_pp0_iter2_reg);

assign p_and_f3_fu_1304_p3 = {{1'd0}, {trunc_ln370_2_reg_1942}};

assign p_and_f9_fu_1069_p3 = {{1'd0}, {tmp_267_fu_979_p3}};

assign p_and_f_fu_1166_p3 = {{1'd0}, {trunc_ln370_reg_1913}};

assign p_and_t3_fu_1282_p3 = {{1'd0}, {tmp_266_fu_1212_p3}};

assign p_and_t5_fu_1148_p3 = {{1'd0}, {sub_ln370_3_fu_1142_p2}};

assign p_and_t_fu_1182_p3 = {{1'd0}, {sub_ln371_fu_1177_p2}};

assign p_cast5_fu_1353_p1 = empty_143_fu_1348_p2;

assign p_cast6_fu_1362_p1 = empty_144_fu_1358_p2;

assign p_cast7_fu_1372_p1 = empty_146_fu_1367_p2;

assign p_cast8_fu_1381_p1 = empty_147_fu_1377_p2;

assign r1_address0 = idxprom2582_i_cast_fu_514_p1;

assign r1_address1 = zext_ln347_fu_1550_p1;

assign r1_d0 = i;

assign r1_load_cast_i_fu_1583_p1 = r1_q1;

assign r2_address0 = idxprom2582_i_cast_fu_514_p1;

assign r2_address1 = zext_ln347_1_fu_1554_p1;

assign r2_d0 = i;

assign r2_load_cast_i_fu_1592_p1 = r2_q1;

assign result_2_fu_1113_p2 = (32'd0 - val_4_reg_1874);

assign result_3_fu_898_p2 = (32'd0 - val_5_reg_1843);

assign result_5_fu_1207_p3 = ((xs_sign_reg_1849_pp0_iter10_reg[0:0] == 1'b1) ? result_2_reg_1937 : val_4_reg_1874_pp0_iter10_reg);

assign result_fu_964_p3 = ((xs_sign_1_reg_1818_pp0_iter8_reg[0:0] == 1'b1) ? result_3_reg_1869 : val_5_reg_1843_pp0_iter8_reg);

assign rightRemappedMat_data_din = ((in_range_fu_1649_p2[0:0] == 1'b1) ? d_fu_1659_p4 : 8'd0);

assign select_ln18_2_fu_768_p3 = ((tmp_264_fu_750_p3[0:0] == 1'b1) ? sext_ln18_2_fu_764_p1 : add_ln346_1_fu_744_p2);

assign select_ln18_fu_890_p3 = ((tmp_fu_872_p3[0:0] == 1'b1) ? sext_ln18_fu_886_p1 : add_ln346_fu_866_p2);

assign select_ln368_1_fu_1296_p3 = ((tmp_270_fu_1234_p3[0:0] == 1'b1) ? sub_ln368_2_fu_1290_p2 : p_and_t3_fu_1282_p3);

assign select_ln370_3_fu_1087_p3 = ((tmp_271_fu_1005_p3[0:0] == 1'b1) ? sub_ln370_2_fu_1081_p2 : zext_ln370_2_fu_1077_p1);

assign select_ln370_fu_1057_p3 = ((tmp_271_fu_1005_p3[0:0] == 1'b1) ? sub_ln370_1_fu_1033_p2 : zext_ln370_1_fu_1053_p1);

assign select_ln412_1_fu_1492_p3 = ((tobool438_i_reg_1929_pp0_iter12_reg[0:0] == 1'b1) ? d11_4_fu_1464_p3 : d01_fu_1478_p3);

assign select_ln412_2_fu_1499_p3 = ((tobool438_i_reg_1929_pp0_iter12_reg[0:0] == 1'b1) ? d00_fu_1471_p3 : d10_3_fu_1457_p3);

assign select_ln412_3_fu_1506_p3 = ((tobool438_i_reg_1929_pp0_iter12_reg[0:0] == 1'b1) ? d01_fu_1478_p3 : d11_4_fu_1464_p3);

assign select_ln412_fu_1485_p3 = ((tobool438_i_reg_1929_pp0_iter12_reg[0:0] == 1'b1) ? d10_3_fu_1457_p3 : d00_fu_1471_p3);

assign sext_ln18_1_fu_916_p1 = $signed(select_ln18_reg_1864);

assign sext_ln18_2_fu_764_p1 = $signed(sub_ln18_1_fu_758_p2);

assign sext_ln18_3_fu_789_p1 = $signed(select_ln18_2_reg_1833);

assign sext_ln18_fu_886_p1 = $signed(sub_ln18_fu_880_p2);

assign sext_ln335_fu_997_p1 = y_fu_969_p4;

assign sext_ln368_fu_1340_p1 = select_ln368_1_reg_1981;

assign sext_ln370_1_fu_1118_p1 = select_ln370_reg_1908;

assign sext_ln370_2_fu_1121_p1 = select_ln370_3_reg_1919;

assign sext_ln370_fu_1049_p1 = $signed(trunc_ln370_3_fu_1039_p4);

assign shl_ln18_1_fu_802_p2 = zext_ln15_1_fu_785_p1 << zext_ln18_1_fu_792_p1;

assign shl_ln18_fu_929_p2 = zext_ln15_fu_912_p1 << zext_ln18_fu_919_p1;

assign sub_i_i569_i_fu_1418_p2 = ($signed(6'd32) - $signed(iu_cast_i_fu_1409_p1));

assign sub_i_i682_i_fu_1394_p2 = ($signed(6'd32) - $signed(iv_cast_i_fu_1391_p1));

assign sub_ln18_1_fu_758_p2 = (8'd127 - xs_exp_1_fu_726_p4);

assign sub_ln18_fu_880_p2 = (8'd127 - xs_exp_fu_848_p4);

assign sub_ln368_1_fu_1258_p2 = (15'd0 - trunc_ln368_6_fu_1248_p4);

assign sub_ln368_2_fu_1290_p2 = (2'd0 - p_and_t3_fu_1282_p3);

assign sub_ln368_fu_1242_p2 = (16'd0 - trunc_ln1_fu_1224_p4);

assign sub_ln370_1_fu_1033_p2 = (28'd0 - zext_ln370_fu_1029_p1);

assign sub_ln370_2_fu_1081_p2 = (3'd0 - zext_ln370_2_fu_1077_p1);

assign sub_ln370_3_fu_1142_p2 = (6'd0 - trunc_ln370_2_fu_1130_p1);

assign sub_ln370_4_fu_1160_p2 = (8'd0 - zext_ln370_4_fu_1156_p1);

assign sub_ln370_fu_1013_p2 = ($signed(28'd0) - $signed(sext_ln335_fu_997_p1));

assign sub_ln371_1_fu_1194_p2 = (8'd0 - zext_ln371_1_fu_1190_p1);

assign sub_ln371_fu_1177_p2 = (6'd0 - trunc_ln370_reg_1913);

assign tmp_1_fu_653_p4 = {{mapxRMat_data_dout[30:23]}};

assign tmp_262_fu_935_p3 = lshr_ln18_fu_923_p2[32'd24];

assign tmp_264_fu_750_p3 = add_ln346_1_fu_744_p2[32'd8];

assign tmp_265_fu_808_p3 = lshr_ln18_1_fu_796_p2[32'd24];

assign tmp_266_fu_1212_p3 = result_5_fu_1207_p3[32'd5];

assign tmp_267_fu_979_p3 = result_fu_964_p3[32'd5];

assign tmp_268_fu_1608_p3 = result_reg_1880_pp0_iter16_reg[32'd31];

assign tmp_269_fu_1621_p3 = result_5_reg_1962_pp0_iter16_reg[32'd31];

assign tmp_270_fu_1234_p3 = result_5_fu_1207_p3[32'd31];

assign tmp_271_fu_1005_p3 = result_fu_964_p3[32'd31];

assign tmp_2_fu_600_p4 = {{bitcast_ln348[30:23]}};

assign tmp_4_fu_947_p4 = {{shl_ln18_fu_929_p2[55:24]}};

assign tmp_5_fu_820_p4 = {{shl_ln18_1_fu_802_p2[55:24]}};

assign tmp_8_fu_627_p4 = {{mapyRMat_data_dout[30:23]}};

assign tmp_9_fu_578_p4 = {{bitcast_ln347[30:23]}};

assign tmp_fu_872_p3 = add_ln346_fu_866_p2[32'd8];

assign tobool428_i_fu_1386_p2 = ((select_ln368_1_reg_1981 == 2'd0) ? 1'b1 : 1'b0);

assign tobool438_i_fu_1107_p2 = ((trunc_ln370_1_fu_1095_p1 == 2'd0) ? 1'b1 : 1'b0);

assign trunc_ln1_fu_1224_p4 = {{result_5_fu_1207_p3[20:5]}};

assign trunc_ln259_fu_540_p1 = ap_sig_allocacmp_j_3[0:0];

assign trunc_ln347_fu_637_p1 = mapyRMat_data_dout[22:0];

assign trunc_ln348_fu_663_p1 = mapxRMat_data_dout[22:0];

assign trunc_ln368_6_fu_1248_p4 = {{sub_ln368_fu_1242_p2[15:1]}};

assign trunc_ln368_7_fu_1264_p4 = {{result_5_fu_1207_p3[20:6]}};

assign trunc_ln370_1_fu_1095_p1 = select_ln370_3_fu_1087_p3[1:0];

assign trunc_ln370_2_fu_1130_p1 = add_ln370_fu_1124_p2[5:0];

assign trunc_ln370_3_fu_1039_p4 = {{result_fu_964_p3[31:6]}};

assign trunc_ln370_fu_1065_p1 = select_ln370_fu_1057_p3[5:0];

assign trunc_ln371_1_fu_736_p1 = data_1_fu_715_p1[22:0];

assign trunc_ln371_fu_858_p1 = data_fu_837_p1[22:0];

assign val_4_fu_957_p3 = ((tmp_reg_1859[0:0] == 1'b1) ? zext_ln21_fu_943_p1 : tmp_4_fu_947_p4);

assign val_5_fu_830_p3 = ((tmp_264_reg_1828[0:0] == 1'b1) ? zext_ln21_1_fu_816_p1 : tmp_5_fu_820_p4);

assign x_fl_fu_686_p1 = val_reg_1761;

assign xa0_fu_1343_p2 = ($signed(xa1_reg_1974) + $signed(sext_ln368_fu_1340_p1));

assign xa1_fu_1274_p3 = ((tmp_270_fu_1234_p3[0:0] == 1'b1) ? sub_ln368_1_fu_1258_p2 : trunc_ln368_7_fu_1264_p4);

assign xor_ln347_fu_1615_p2 = (tmp_268_fu_1608_p3 ^ 1'd1);

assign xor_ln348_fu_1628_p2 = (tmp_269_fu_1621_p3 ^ 1'd1);

assign xs_exp_1_fu_726_p4 = {{data_1_fu_715_p1[30:23]}};

assign xs_exp_fu_848_p4 = {{data_fu_837_p1[30:23]}};

assign y_fl_fu_690_p1 = val_1_reg_1766;

assign y_fu_969_p4 = {{result_fu_964_p3[31:5]}};

assign ya0_fu_1315_p3 = ((tmp_272_reg_1947[0:0] == 1'b1) ? sub_ln370_4_reg_1952 : zext_ln370_3_fu_1311_p1);

assign ya1_fu_1200_p3 = ((tmp_273_reg_1924[0:0] == 1'b1) ? sub_ln371_1_fu_1194_p2 : zext_ln371_fu_1173_p1);

assign ynext_fu_1559_p2 = ($signed(sext_ln335_reg_1896_pp0_iter15_reg) + $signed(28'd1));

assign zext_ln15_1_fu_785_p1 = mantissa_1_fu_776_p4;

assign zext_ln15_fu_912_p1 = mantissa_fu_903_p4;

assign zext_ln18_1_fu_792_p1 = $unsigned(sext_ln18_3_fu_789_p1);

assign zext_ln18_fu_919_p1 = $unsigned(sext_ln18_1_fu_916_p1);

assign zext_ln21_1_fu_816_p1 = tmp_265_fu_808_p3;

assign zext_ln21_fu_943_p1 = tmp_262_fu_935_p3;

assign zext_ln314_fu_679_p1 = add_ln314_reg_1727_pp0_iter1_reg;

assign zext_ln346_1_fu_740_p1 = xs_exp_1_fu_726_p4;

assign zext_ln346_fu_862_p1 = xs_exp_fu_848_p4;

assign zext_ln347_1_fu_1554_p1 = add_ln338_1_fu_1545_p2;

assign zext_ln347_fu_1550_p1 = trunc_ln335_2_reg_1890_pp0_iter14_reg;

assign zext_ln370_1_fu_1053_p1 = $unsigned(sext_ln370_fu_1049_p1);

assign zext_ln370_2_fu_1077_p1 = p_and_f9_fu_1069_p3;

assign zext_ln370_3_fu_1311_p1 = p_and_f3_fu_1304_p3;

assign zext_ln370_4_fu_1156_p1 = p_and_t5_fu_1148_p3;

assign zext_ln370_fu_1029_p1 = lshr_ln370_3_fu_1019_p4;

assign zext_ln371_1_fu_1190_p1 = p_and_t_fu_1182_p3;

assign zext_ln371_fu_1173_p1 = p_and_f_fu_1166_p3;

endmodule //stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_Pipeline_loop_width
