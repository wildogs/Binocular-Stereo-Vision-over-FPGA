-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stereolbm_axis_cambm is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_Ctrl_AWVALID : IN STD_LOGIC;
    s_axi_Ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_Ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_Ctrl_WVALID : IN STD_LOGIC;
    s_axi_Ctrl_WREADY : OUT STD_LOGIC;
    s_axi_Ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_Ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_Ctrl_ARVALID : IN STD_LOGIC;
    s_axi_Ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_Ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_Ctrl_RVALID : OUT STD_LOGIC;
    s_axi_Ctrl_RREADY : IN STD_LOGIC;
    s_axi_Ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_Ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_Ctrl_BVALID : OUT STD_LOGIC;
    s_axi_Ctrl_BREADY : IN STD_LOGIC;
    s_axi_Ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    vid_inL_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    vid_inL_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inL_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inL_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inL_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inL_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inL_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inR_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    vid_inR_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inR_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inR_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inR_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inR_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_inR_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    vid_out_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    vid_out_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    vid_out_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    vid_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    vid_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    vid_out_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    vid_out_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    vid_inL_TVALID : IN STD_LOGIC;
    vid_inL_TREADY : OUT STD_LOGIC;
    vid_inR_TVALID : IN STD_LOGIC;
    vid_inR_TREADY : OUT STD_LOGIC;
    vid_out_TVALID : OUT STD_LOGIC;
    vid_out_TREADY : IN STD_LOGIC );
end;


architecture behav of stereolbm_axis_cambm is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "stereolbm_axis_cambm_stereolbm_axis_cambm,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.569687,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=187,HLS_SYN_DSP=0,HLS_SYN_FF=63162,HLS_SYN_LUT=82729,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal cameraMA_l_fix_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cameraMA_l_fix_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cameraMA_r_fix_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cameraMA_r_fix_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal distC_l_fix_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal distC_l_fix_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal distC_r_fix_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal distC_r_fix_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal irA_l_fix_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal irA_l_fix_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal irA_r_fix_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal irA_r_fix_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows : STD_LOGIC_VECTOR (31 downto 0);
    signal cols : STD_LOGIC_VECTOR (31 downto 0);
    signal preFilterCap : STD_LOGIC_VECTOR (31 downto 0);
    signal uniquenessRatio : STD_LOGIC_VECTOR (31 downto 0);
    signal textureThreshold : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_cameraMA_l_fix : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_cameraMA_l_fix : STD_LOGIC := '0';
    signal ap_sync_channel_write_cameraMA_l_fix : STD_LOGIC;
    signal ap_channel_done_cameraMA_r_fix : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_cameraMA_r_fix : STD_LOGIC := '0';
    signal ap_sync_channel_write_cameraMA_r_fix : STD_LOGIC;
    signal ap_channel_done_irA_l_fix : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_irA_l_fix : STD_LOGIC := '0';
    signal ap_sync_channel_write_irA_l_fix : STD_LOGIC;
    signal ap_channel_done_irA_r_fix : STD_LOGIC;
    signal Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_irA_r_fix : STD_LOGIC := '0';
    signal ap_sync_channel_write_irA_r_fix : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_distC_l_fix : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_distC_l_fix : STD_LOGIC := '0';
    signal ap_sync_channel_write_distC_l_fix : STD_LOGIC;
    signal ap_channel_done_distC_r_fix : STD_LOGIC;
    signal Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_distC_r_fix : STD_LOGIC := '0';
    signal ap_sync_channel_write_distC_r_fix : STD_LOGIC;
    signal Block_for_end72_proc_U0_ap_start : STD_LOGIC;
    signal Block_for_end72_proc_U0_ap_done : STD_LOGIC;
    signal Block_for_end72_proc_U0_ap_continue : STD_LOGIC;
    signal Block_for_end72_proc_U0_ap_idle : STD_LOGIC;
    signal Block_for_end72_proc_U0_ap_ready : STD_LOGIC;
    signal Block_for_end72_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end72_proc_U0_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_rightRemappedMat_cols : STD_LOGIC;
    signal rightRemappedMat_cols_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_rightRemappedMat_cols : STD_LOGIC := '0';
    signal ap_sync_channel_write_rightRemappedMat_cols : STD_LOGIC;
    signal ap_channel_done_rightRemappedMat_rows : STD_LOGIC;
    signal rightRemappedMat_rows_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_rightRemappedMat_rows : STD_LOGIC := '0';
    signal ap_sync_channel_write_rightRemappedMat_rows : STD_LOGIC;
    signal ap_channel_done_leftRemappedMat_cols : STD_LOGIC;
    signal leftRemappedMat_cols_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_leftRemappedMat_cols : STD_LOGIC := '0';
    signal ap_sync_channel_write_leftRemappedMat_cols : STD_LOGIC;
    signal ap_channel_done_leftRemappedMat_rows : STD_LOGIC;
    signal leftRemappedMat_rows_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_leftRemappedMat_rows : STD_LOGIC := '0';
    signal ap_sync_channel_write_leftRemappedMat_rows : STD_LOGIC;
    signal ap_channel_done_bmState_textureThreshold : STD_LOGIC;
    signal bmState_textureThreshold_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bmState_textureThreshold : STD_LOGIC := '0';
    signal ap_sync_channel_write_bmState_textureThreshold : STD_LOGIC;
    signal ap_channel_done_bmState_uniquenessRatio : STD_LOGIC;
    signal bmState_uniquenessRatio_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bmState_uniquenessRatio : STD_LOGIC := '0';
    signal ap_sync_channel_write_bmState_uniquenessRatio : STD_LOGIC;
    signal ap_channel_done_bmState_preFilterCap : STD_LOGIC;
    signal bmState_preFilterCap_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bmState_preFilterCap : STD_LOGIC := '0';
    signal ap_sync_channel_write_bmState_preFilterCap : STD_LOGIC;
    signal ap_channel_done_imgR_in_cols_c62_channel : STD_LOGIC;
    signal imgR_in_cols_c62_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_imgR_in_cols_c62_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_imgR_in_cols_c62_channel : STD_LOGIC;
    signal ap_channel_done_imgR_in_rows_c61_channel : STD_LOGIC;
    signal imgR_in_rows_c61_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_imgR_in_rows_c61_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_imgR_in_rows_c61_channel : STD_LOGIC;
    signal ap_channel_done_imgL_in_cols_c60_channel : STD_LOGIC;
    signal imgL_in_cols_c60_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_imgL_in_cols_c60_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_imgL_in_cols_c60_channel : STD_LOGIC;
    signal ap_channel_done_imgL_in_rows_c59_channel : STD_LOGIC;
    signal imgL_in_rows_c59_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_imgL_in_rows_c59_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_imgL_in_rows_c59_channel : STD_LOGIC;
    signal ap_channel_done_mapxRMat_cols : STD_LOGIC;
    signal mapxRMat_cols_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_mapxRMat_cols : STD_LOGIC := '0';
    signal ap_sync_channel_write_mapxRMat_cols : STD_LOGIC;
    signal ap_channel_done_mapxRMat_rows : STD_LOGIC;
    signal mapxRMat_rows_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_mapxRMat_rows : STD_LOGIC := '0';
    signal ap_sync_channel_write_mapxRMat_rows : STD_LOGIC;
    signal ap_channel_done_mapxLMat_cols : STD_LOGIC;
    signal mapxLMat_cols_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_mapxLMat_cols : STD_LOGIC := '0';
    signal ap_sync_channel_write_mapxLMat_cols : STD_LOGIC;
    signal ap_channel_done_mapxLMat_rows : STD_LOGIC;
    signal mapxLMat_rows_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_mapxLMat_rows : STD_LOGIC := '0';
    signal ap_sync_channel_write_mapxLMat_rows : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_start : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_done : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_start_out : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_start_write : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_vid_inL_TREADY : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_write : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_write : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_write : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_start : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_done : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_start_out : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_start_write : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_vid_inR_TREADY : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_write : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_write : STD_LOGIC;
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_write : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_start : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_done : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_continue : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_idle : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_ce0 : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_ce0 : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_ce0 : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_din : STD_LOGIC_VECTOR (31 downto 0);
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_write : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_din : STD_LOGIC_VECTOR (31 downto 0);
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_write : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_rows_read : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_cols_read : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_imgL_in_data_read : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_write : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapxLMat_data_read : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapyLMat_data_read : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_start : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_done : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_ready : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_idle : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_continue : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_start : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_done : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_continue : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_idle : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_ce0 : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_ce0 : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_ce0 : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_din : STD_LOGIC_VECTOR (31 downto 0);
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_write : STD_LOGIC;
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_din : STD_LOGIC_VECTOR (31 downto 0);
    signal InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_write : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_rows_read : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_cols_read : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_imgR_in_data_read : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_write : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapxRMat_data_read : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapyRMat_data_read : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_start : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_done : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_ready : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_idle : STD_LOGIC;
    signal remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_continue : STD_LOGIC;
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_start : STD_LOGIC;
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_done : STD_LOGIC;
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_continue : STD_LOGIC;
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_idle : STD_LOGIC;
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready : STD_LOGIC;
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_start_out : STD_LOGIC;
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_start_write : STD_LOGIC;
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_leftRemappedMat_data_read : STD_LOGIC;
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_rightRemappedMat_data_read : STD_LOGIC;
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_din : STD_LOGIC_VECTOR (15 downto 0);
    signal StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_write : STD_LOGIC;
    signal Block_for_end7235_proc_U0_ap_start : STD_LOGIC;
    signal Block_for_end7235_proc_U0_ap_done : STD_LOGIC;
    signal Block_for_end7235_proc_U0_ap_continue : STD_LOGIC;
    signal Block_for_end7235_proc_U0_ap_idle : STD_LOGIC;
    signal Block_for_end7235_proc_U0_ap_ready : STD_LOGIC;
    signal Block_for_end7235_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end7235_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_img_disp8u_cols : STD_LOGIC;
    signal img_disp8u_cols_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_img_disp8u_cols : STD_LOGIC := '0';
    signal ap_sync_channel_write_img_disp8u_cols : STD_LOGIC;
    signal ap_channel_done_img_disp8u_rows : STD_LOGIC;
    signal img_disp8u_rows_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_img_disp8u_rows : STD_LOGIC := '0';
    signal ap_sync_channel_write_img_disp8u_rows : STD_LOGIC;
    signal ConvertShiftAbs_U0_ap_start : STD_LOGIC;
    signal ConvertShiftAbs_U0_ap_done : STD_LOGIC;
    signal ConvertShiftAbs_U0_ap_continue : STD_LOGIC;
    signal ConvertShiftAbs_U0_ap_idle : STD_LOGIC;
    signal ConvertShiftAbs_U0_ap_ready : STD_LOGIC;
    signal ConvertShiftAbs_U0_img_disp16u_data_read : STD_LOGIC;
    signal ConvertShiftAbs_U0_img_disp8u_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal ConvertShiftAbs_U0_img_disp8u_data_write : STD_LOGIC;
    signal Block_for_end7237_proc_U0_ap_start : STD_LOGIC;
    signal Block_for_end7237_proc_U0_ap_done : STD_LOGIC;
    signal Block_for_end7237_proc_U0_ap_continue : STD_LOGIC;
    signal Block_for_end7237_proc_U0_ap_idle : STD_LOGIC;
    signal Block_for_end7237_proc_U0_ap_ready : STD_LOGIC;
    signal Block_for_end7237_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end7237_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_img_disp8u_erode_cols : STD_LOGIC;
    signal img_disp8u_erode_cols_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_img_disp8u_erode_cols : STD_LOGIC := '0';
    signal ap_sync_channel_write_img_disp8u_erode_cols : STD_LOGIC;
    signal ap_channel_done_img_disp8u_erode_rows : STD_LOGIC;
    signal img_disp8u_erode_rows_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_img_disp8u_erode_rows : STD_LOGIC := '0';
    signal ap_sync_channel_write_img_disp8u_erode_rows : STD_LOGIC;
    signal erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start : STD_LOGIC;
    signal erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_done : STD_LOGIC;
    signal erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue : STD_LOGIC;
    signal erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle : STD_LOGIC;
    signal erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready : STD_LOGIC;
    signal erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_data_read : STD_LOGIC;
    signal erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_write : STD_LOGIC;
    signal Block_for_end7239_proc_U0_ap_start : STD_LOGIC;
    signal Block_for_end7239_proc_U0_ap_done : STD_LOGIC;
    signal Block_for_end7239_proc_U0_ap_continue : STD_LOGIC;
    signal Block_for_end7239_proc_U0_ap_idle : STD_LOGIC;
    signal Block_for_end7239_proc_U0_ap_ready : STD_LOGIC;
    signal Block_for_end7239_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_for_end7239_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_img_disp8u_dilate_cols : STD_LOGIC;
    signal img_disp8u_dilate_cols_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_img_disp8u_dilate_cols : STD_LOGIC := '0';
    signal ap_sync_channel_write_img_disp8u_dilate_cols : STD_LOGIC;
    signal ap_channel_done_img_disp8u_dilate_rows : STD_LOGIC;
    signal img_disp8u_dilate_rows_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_img_disp8u_dilate_rows : STD_LOGIC := '0';
    signal ap_sync_channel_write_img_disp8u_dilate_rows : STD_LOGIC;
    signal dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start : STD_LOGIC;
    signal dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_done : STD_LOGIC;
    signal dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue : STD_LOGIC;
    signal dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle : STD_LOGIC;
    signal dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready : STD_LOGIC;
    signal dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_read : STD_LOGIC;
    signal dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_write : STD_LOGIC;
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_start : STD_LOGIC;
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_done : STD_LOGIC;
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_continue : STD_LOGIC;
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_idle : STD_LOGIC;
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_ready : STD_LOGIC;
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_img_disp8u_dilate_data_read : STD_LOGIC;
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TVALID : STD_LOGIC;
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal irA_r_fix_i_full_n : STD_LOGIC;
    signal irA_r_fix_t_empty_n : STD_LOGIC;
    signal irA_l_fix_i_full_n : STD_LOGIC;
    signal irA_l_fix_t_empty_n : STD_LOGIC;
    signal cameraMA_r_fix_i_full_n : STD_LOGIC;
    signal cameraMA_r_fix_t_empty_n : STD_LOGIC;
    signal cameraMA_l_fix_i_full_n : STD_LOGIC;
    signal cameraMA_l_fix_t_empty_n : STD_LOGIC;
    signal distC_r_fix_i_full_n : STD_LOGIC;
    signal distC_r_fix_t_empty_n : STD_LOGIC;
    signal distC_l_fix_i_full_n : STD_LOGIC;
    signal distC_l_fix_t_empty_n : STD_LOGIC;
    signal mapxLMat_rows_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapxLMat_rows_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxLMat_rows_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxLMat_rows_empty_n : STD_LOGIC;
    signal mapxLMat_cols_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapxLMat_cols_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxLMat_cols_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxLMat_cols_empty_n : STD_LOGIC;
    signal mapxRMat_rows_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapxRMat_rows_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxRMat_rows_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxRMat_rows_empty_n : STD_LOGIC;
    signal mapxRMat_cols_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapxRMat_cols_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxRMat_cols_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxRMat_cols_empty_n : STD_LOGIC;
    signal imgL_in_rows_c59_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgL_in_rows_c59_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal imgL_in_rows_c59_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal imgL_in_rows_c59_channel_empty_n : STD_LOGIC;
    signal imgL_in_cols_c60_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgL_in_cols_c60_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal imgL_in_cols_c60_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal imgL_in_cols_c60_channel_empty_n : STD_LOGIC;
    signal imgR_in_rows_c61_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgR_in_rows_c61_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal imgR_in_rows_c61_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal imgR_in_rows_c61_channel_empty_n : STD_LOGIC;
    signal imgR_in_cols_c62_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgR_in_cols_c62_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal imgR_in_cols_c62_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal imgR_in_cols_c62_channel_empty_n : STD_LOGIC;
    signal bmState_preFilterCap_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal bmState_preFilterCap_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal bmState_preFilterCap_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal bmState_preFilterCap_empty_n : STD_LOGIC;
    signal bmState_uniquenessRatio_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal bmState_uniquenessRatio_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal bmState_uniquenessRatio_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal bmState_uniquenessRatio_empty_n : STD_LOGIC;
    signal bmState_textureThreshold_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal bmState_textureThreshold_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal bmState_textureThreshold_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal bmState_textureThreshold_empty_n : STD_LOGIC;
    signal leftRemappedMat_rows_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal leftRemappedMat_rows_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal leftRemappedMat_rows_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal leftRemappedMat_rows_empty_n : STD_LOGIC;
    signal leftRemappedMat_cols_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal leftRemappedMat_cols_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal leftRemappedMat_cols_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal leftRemappedMat_cols_empty_n : STD_LOGIC;
    signal rightRemappedMat_rows_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rightRemappedMat_rows_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal rightRemappedMat_rows_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal rightRemappedMat_rows_empty_n : STD_LOGIC;
    signal rightRemappedMat_cols_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rightRemappedMat_cols_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal rightRemappedMat_cols_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal rightRemappedMat_cols_empty_n : STD_LOGIC;
    signal imgL_in_data_full_n : STD_LOGIC;
    signal imgL_in_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgL_in_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal imgL_in_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal imgL_in_data_empty_n : STD_LOGIC;
    signal imgL_in_rows_c_full_n : STD_LOGIC;
    signal imgL_in_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgL_in_rows_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal imgL_in_rows_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal imgL_in_rows_c_empty_n : STD_LOGIC;
    signal imgL_in_cols_c_full_n : STD_LOGIC;
    signal imgL_in_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgL_in_cols_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal imgL_in_cols_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal imgL_in_cols_c_empty_n : STD_LOGIC;
    signal imgR_in_data_full_n : STD_LOGIC;
    signal imgR_in_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgR_in_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal imgR_in_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal imgR_in_data_empty_n : STD_LOGIC;
    signal imgR_in_rows_c_full_n : STD_LOGIC;
    signal imgR_in_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgR_in_rows_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal imgR_in_rows_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal imgR_in_rows_c_empty_n : STD_LOGIC;
    signal imgR_in_cols_c_full_n : STD_LOGIC;
    signal imgR_in_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgR_in_cols_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal imgR_in_cols_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal imgR_in_cols_c_empty_n : STD_LOGIC;
    signal mapxLMat_data_full_n : STD_LOGIC;
    signal mapxLMat_data_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapxLMat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxLMat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxLMat_data_empty_n : STD_LOGIC;
    signal mapyLMat_data_full_n : STD_LOGIC;
    signal mapyLMat_data_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapyLMat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal mapyLMat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal mapyLMat_data_empty_n : STD_LOGIC;
    signal leftRemappedMat_data_full_n : STD_LOGIC;
    signal leftRemappedMat_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal leftRemappedMat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal leftRemappedMat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal leftRemappedMat_data_empty_n : STD_LOGIC;
    signal mapxRMat_data_full_n : STD_LOGIC;
    signal mapxRMat_data_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapxRMat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxRMat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal mapxRMat_data_empty_n : STD_LOGIC;
    signal mapyRMat_data_full_n : STD_LOGIC;
    signal mapyRMat_data_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapyRMat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal mapyRMat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal mapyRMat_data_empty_n : STD_LOGIC;
    signal rightRemappedMat_data_full_n : STD_LOGIC;
    signal rightRemappedMat_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal rightRemappedMat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal rightRemappedMat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal rightRemappedMat_data_empty_n : STD_LOGIC;
    signal img_disp16u_data_full_n : STD_LOGIC;
    signal img_disp16u_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_disp16u_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_disp16u_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_disp16u_data_empty_n : STD_LOGIC;
    signal img_disp8u_rows_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_disp8u_rows_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_rows_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_rows_empty_n : STD_LOGIC;
    signal img_disp8u_cols_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_disp8u_cols_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_cols_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_cols_empty_n : STD_LOGIC;
    signal img_disp8u_data_full_n : STD_LOGIC;
    signal img_disp8u_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_disp8u_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_disp8u_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_disp8u_data_empty_n : STD_LOGIC;
    signal img_disp8u_erode_rows_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_disp8u_erode_rows_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_erode_rows_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_erode_rows_empty_n : STD_LOGIC;
    signal img_disp8u_erode_cols_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_disp8u_erode_cols_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_erode_cols_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_erode_cols_empty_n : STD_LOGIC;
    signal img_disp8u_erode_data_full_n : STD_LOGIC;
    signal img_disp8u_erode_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_disp8u_erode_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_disp8u_erode_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_disp8u_erode_data_empty_n : STD_LOGIC;
    signal img_disp8u_dilate_rows_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_disp8u_dilate_rows_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_dilate_rows_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_dilate_rows_empty_n : STD_LOGIC;
    signal img_disp8u_dilate_cols_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_disp8u_dilate_cols_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_dilate_cols_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal img_disp8u_dilate_cols_empty_n : STD_LOGIC;
    signal img_disp8u_dilate_data_full_n : STD_LOGIC;
    signal img_disp8u_dilate_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_disp8u_dilate_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_disp8u_dilate_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_disp8u_dilate_data_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Block_for_end72_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_for_end72_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Block_for_end7235_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_for_end7235_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Block_for_end7237_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_for_end7237_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Block_for_end7239_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_for_end7239_proc_U0_ap_ready : STD_LOGIC;
    signal start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_full_n : STD_LOGIC;
    signal start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_empty_n : STD_LOGIC;
    signal start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_full_n : STD_LOGIC;
    signal start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_empty_n : STD_LOGIC;
    signal start_for_ConvertShiftAbs_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ConvertShiftAbs_U0_full_n : STD_LOGIC;
    signal start_for_ConvertShiftAbs_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ConvertShiftAbs_U0_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component stereolbm_axis_cambm_Loop_VITIS_LOOP_46_1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        irA_r_fix_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        irA_r_fix_ce0 : OUT STD_LOGIC;
        irA_r_fix_we0 : OUT STD_LOGIC;
        irA_r_fix_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        irA_l_fix_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        irA_l_fix_ce0 : OUT STD_LOGIC;
        irA_l_fix_we0 : OUT STD_LOGIC;
        irA_l_fix_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cameraMA_r_fix_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cameraMA_r_fix_ce0 : OUT STD_LOGIC;
        cameraMA_r_fix_we0 : OUT STD_LOGIC;
        cameraMA_r_fix_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cameraMA_l_fix_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cameraMA_l_fix_ce0 : OUT STD_LOGIC;
        cameraMA_l_fix_we0 : OUT STD_LOGIC;
        cameraMA_l_fix_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component stereolbm_axis_cambm_Loop_VITIS_LOOP_55_2_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        distC_r_fix_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        distC_r_fix_ce0 : OUT STD_LOGIC;
        distC_r_fix_we0 : OUT STD_LOGIC;
        distC_r_fix_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        distC_l_fix_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        distC_l_fix_ce0 : OUT STD_LOGIC;
        distC_l_fix_we0 : OUT STD_LOGIC;
        distC_l_fix_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component stereolbm_axis_cambm_Block_for_end72_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        preFilterCap : IN STD_LOGIC_VECTOR (31 downto 0);
        uniquenessRatio : IN STD_LOGIC_VECTOR (31 downto 0);
        textureThreshold : IN STD_LOGIC_VECTOR (31 downto 0);
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component stereolbm_axis_cambm_AXIvideo2xfMat_8_0_600_800_1_2_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        vid_inL_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        vid_inL_TVALID : IN STD_LOGIC;
        vid_inL_TREADY : OUT STD_LOGIC;
        vid_inL_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        vid_inL_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        vid_inL_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        vid_inL_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        vid_inL_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        vid_inL_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        imgL_in_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imgL_in_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgL_in_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgL_in_data_full_n : IN STD_LOGIC;
        imgL_in_data_write : OUT STD_LOGIC;
        imgL_in_rows_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgL_in_rows_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgL_in_rows_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgL_in_rows_c_full_n : IN STD_LOGIC;
        imgL_in_rows_c_write : OUT STD_LOGIC;
        imgL_in_cols_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgL_in_cols_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgL_in_cols_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgL_in_cols_c_full_n : IN STD_LOGIC;
        imgL_in_cols_c_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_AXIvideo2xfMat_8_0_600_800_1_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        vid_inR_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        vid_inR_TVALID : IN STD_LOGIC;
        vid_inR_TREADY : OUT STD_LOGIC;
        vid_inR_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        vid_inR_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        vid_inR_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        vid_inR_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        vid_inR_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        vid_inR_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        imgR_in_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imgR_in_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgR_in_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgR_in_data_full_n : IN STD_LOGIC;
        imgR_in_data_write : OUT STD_LOGIC;
        imgR_in_rows_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgR_in_rows_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgR_in_rows_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgR_in_rows_c_full_n : IN STD_LOGIC;
        imgR_in_rows_c_write : OUT STD_LOGIC;
        imgR_in_cols_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgR_in_cols_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgR_in_cols_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgR_in_cols_c_full_n : IN STD_LOGIC;
        imgR_in_cols_c_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cameraMatrix_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cameraMatrix_ce0 : OUT STD_LOGIC;
        cameraMatrix_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        distCoeffs_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        distCoeffs_ce0 : OUT STD_LOGIC;
        distCoeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ir_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ir_ce0 : OUT STD_LOGIC;
        ir_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        mapxLMat_data_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapxLMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        mapxLMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        mapxLMat_data_full_n : IN STD_LOGIC;
        mapxLMat_data_write : OUT STD_LOGIC;
        mapyLMat_data_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapyLMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        mapyLMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        mapyLMat_data_full_n : IN STD_LOGIC;
        mapyLMat_data_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2 IS
    port (
        p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_rows_empty_n : IN STD_LOGIC;
        p_src_mat_rows_read : OUT STD_LOGIC;
        p_src_mat_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_cols_empty_n : IN STD_LOGIC;
        p_src_mat_cols_read : OUT STD_LOGIC;
        imgL_in_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imgL_in_data_empty_n : IN STD_LOGIC;
        imgL_in_data_read : OUT STD_LOGIC;
        leftRemappedMat_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        leftRemappedMat_data_full_n : IN STD_LOGIC;
        leftRemappedMat_data_write : OUT STD_LOGIC;
        mapxLMat_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapxLMat_data_empty_n : IN STD_LOGIC;
        mapxLMat_data_read : OUT STD_LOGIC;
        mapyLMat_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapyLMat_data_empty_n : IN STD_LOGIC;
        mapyLMat_data_read : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cameraMatrix_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cameraMatrix_ce0 : OUT STD_LOGIC;
        cameraMatrix_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        distCoeffs_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        distCoeffs_ce0 : OUT STD_LOGIC;
        distCoeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ir_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ir_ce0 : OUT STD_LOGIC;
        ir_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        mapxRMat_data_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapxRMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        mapxRMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        mapxRMat_data_full_n : IN STD_LOGIC;
        mapxRMat_data_write : OUT STD_LOGIC;
        mapyRMat_data_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapyRMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        mapyRMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        mapyRMat_data_full_n : IN STD_LOGIC;
        mapyRMat_data_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_s IS
    port (
        p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_rows_empty_n : IN STD_LOGIC;
        p_src_mat_rows_read : OUT STD_LOGIC;
        p_src_mat_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_cols_empty_n : IN STD_LOGIC;
        p_src_mat_cols_read : OUT STD_LOGIC;
        imgR_in_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imgR_in_data_empty_n : IN STD_LOGIC;
        imgR_in_data_read : OUT STD_LOGIC;
        rightRemappedMat_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        rightRemappedMat_data_full_n : IN STD_LOGIC;
        rightRemappedMat_data_write : OUT STD_LOGIC;
        mapxRMat_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapxRMat_data_empty_n : IN STD_LOGIC;
        mapxRMat_data_read : OUT STD_LOGIC;
        mapyRMat_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapyRMat_data_empty_n : IN STD_LOGIC;
        mapyRMat_data_read : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRemappedMat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        leftRemappedMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        leftRemappedMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        leftRemappedMat_data_empty_n : IN STD_LOGIC;
        leftRemappedMat_data_read : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
        rightRemappedMat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        rightRemappedMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        rightRemappedMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        rightRemappedMat_data_empty_n : IN STD_LOGIC;
        rightRemappedMat_data_read : OUT STD_LOGIC;
        img_disp16u_data_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_disp16u_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp16u_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp16u_data_full_n : IN STD_LOGIC;
        img_disp16u_data_write : OUT STD_LOGIC;
        p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component stereolbm_axis_cambm_Block_for_end7235_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component stereolbm_axis_cambm_ConvertShiftAbs IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_disp16u_data_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        img_disp16u_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp16u_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp16u_data_empty_n : IN STD_LOGIC;
        img_disp16u_data_read : OUT STD_LOGIC;
        img_disp8u_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_disp8u_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_data_full_n : IN STD_LOGIC;
        img_disp8u_data_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_Block_for_end7237_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component stereolbm_axis_cambm_erode_0_0_600_800_0_3_3_1_1_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        img_disp8u_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_disp8u_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_data_empty_n : IN STD_LOGIC;
        img_disp8u_data_read : OUT STD_LOGIC;
        img_disp8u_erode_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_disp8u_erode_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_erode_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_erode_data_full_n : IN STD_LOGIC;
        img_disp8u_erode_data_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_Block_for_end7239_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component stereolbm_axis_cambm_dilate_0_0_600_800_0_3_3_1_1_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        img_disp8u_erode_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_disp8u_erode_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_erode_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_erode_data_empty_n : IN STD_LOGIC;
        img_disp8u_erode_data_read : OUT STD_LOGIC;
        img_disp8u_dilate_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_disp8u_dilate_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_dilate_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_dilate_data_full_n : IN STD_LOGIC;
        img_disp8u_dilate_data_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_xfMat2AXIvideo_8_0_600_800_1_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        img_disp8u_dilate_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_disp8u_dilate_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_dilate_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp8u_dilate_data_empty_n : IN STD_LOGIC;
        img_disp8u_dilate_data_read : OUT STD_LOGIC;
        vid_out_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        vid_out_TVALID : OUT STD_LOGIC;
        vid_out_TREADY : IN STD_LOGIC;
        vid_out_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        vid_out_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        vid_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        vid_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        vid_out_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        vid_out_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component stereolbm_axis_cambm_cameraMA_l_fix_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_distC_l_fix_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w32_d2_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w32_d4_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w8_d2_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w16_d2_S_x1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w32_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w32_d7_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w32_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_start_for_ConvertShiftAbs_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_Ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        rows : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols : OUT STD_LOGIC_VECTOR (31 downto 0);
        preFilterCap : OUT STD_LOGIC_VECTOR (31 downto 0);
        uniquenessRatio : OUT STD_LOGIC_VECTOR (31 downto 0);
        textureThreshold : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    cameraMA_l_fix_U : component stereolbm_axis_cambm_cameraMA_l_fix_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_address0,
        i_ce0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_ce0,
        i_we0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_we0,
        i_d0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_d0,
        i_q0 => cameraMA_l_fix_i_q0,
        t_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_address0,
        t_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => cameraMA_l_fix_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => cameraMA_l_fix_i_full_n,
        i_write => ap_channel_done_cameraMA_l_fix,
        t_empty_n => cameraMA_l_fix_t_empty_n,
        t_read => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready);

    cameraMA_r_fix_U : component stereolbm_axis_cambm_cameraMA_l_fix_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_address0,
        i_ce0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_ce0,
        i_we0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_we0,
        i_d0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_d0,
        i_q0 => cameraMA_r_fix_i_q0,
        t_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_address0,
        t_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => cameraMA_r_fix_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => cameraMA_r_fix_i_full_n,
        i_write => ap_channel_done_cameraMA_r_fix,
        t_empty_n => cameraMA_r_fix_t_empty_n,
        t_read => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready);

    distC_l_fix_U : component stereolbm_axis_cambm_distC_l_fix_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_address0,
        i_ce0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_ce0,
        i_we0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_we0,
        i_d0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_d0,
        i_q0 => distC_l_fix_i_q0,
        t_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_address0,
        t_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => distC_l_fix_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => distC_l_fix_i_full_n,
        i_write => ap_channel_done_distC_l_fix,
        t_empty_n => distC_l_fix_t_empty_n,
        t_read => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready);

    distC_r_fix_U : component stereolbm_axis_cambm_distC_l_fix_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_address0,
        i_ce0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_ce0,
        i_we0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_we0,
        i_d0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_d0,
        i_q0 => distC_r_fix_i_q0,
        t_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_address0,
        t_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => distC_r_fix_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => distC_r_fix_i_full_n,
        i_write => ap_channel_done_distC_r_fix,
        t_empty_n => distC_r_fix_t_empty_n,
        t_read => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready);

    irA_l_fix_U : component stereolbm_axis_cambm_cameraMA_l_fix_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_address0,
        i_ce0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_ce0,
        i_we0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_we0,
        i_d0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_d0,
        i_q0 => irA_l_fix_i_q0,
        t_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_address0,
        t_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => irA_l_fix_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => irA_l_fix_i_full_n,
        i_write => ap_channel_done_irA_l_fix,
        t_empty_n => irA_l_fix_t_empty_n,
        t_read => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready);

    irA_r_fix_U : component stereolbm_axis_cambm_cameraMA_l_fix_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_address0,
        i_ce0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_ce0,
        i_we0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_we0,
        i_d0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_d0,
        i_q0 => irA_r_fix_i_q0,
        t_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_address0,
        t_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => irA_r_fix_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => irA_r_fix_i_full_n,
        i_write => ap_channel_done_irA_r_fix,
        t_empty_n => irA_r_fix_t_empty_n,
        t_read => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready);

    Ctrl_s_axi_U : component stereolbm_axis_cambm_Ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_Ctrl_AWVALID,
        AWREADY => s_axi_Ctrl_AWREADY,
        AWADDR => s_axi_Ctrl_AWADDR,
        WVALID => s_axi_Ctrl_WVALID,
        WREADY => s_axi_Ctrl_WREADY,
        WDATA => s_axi_Ctrl_WDATA,
        WSTRB => s_axi_Ctrl_WSTRB,
        ARVALID => s_axi_Ctrl_ARVALID,
        ARREADY => s_axi_Ctrl_ARREADY,
        ARADDR => s_axi_Ctrl_ARADDR,
        RVALID => s_axi_Ctrl_RVALID,
        RREADY => s_axi_Ctrl_RREADY,
        RDATA => s_axi_Ctrl_RDATA,
        RRESP => s_axi_Ctrl_RRESP,
        BVALID => s_axi_Ctrl_BVALID,
        BREADY => s_axi_Ctrl_BREADY,
        BRESP => s_axi_Ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        rows => rows,
        cols => cols,
        preFilterCap => preFilterCap,
        uniquenessRatio => uniquenessRatio,
        textureThreshold => textureThreshold,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    Loop_VITIS_LOOP_46_1_proc_U0 : component stereolbm_axis_cambm_Loop_VITIS_LOOP_46_1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_46_1_proc_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_46_1_proc_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_46_1_proc_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_46_1_proc_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_46_1_proc_U0_ap_ready,
        irA_r_fix_address0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_address0,
        irA_r_fix_ce0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_ce0,
        irA_r_fix_we0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_we0,
        irA_r_fix_d0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_d0,
        irA_l_fix_address0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_address0,
        irA_l_fix_ce0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_ce0,
        irA_l_fix_we0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_we0,
        irA_l_fix_d0 => Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_d0,
        cameraMA_r_fix_address0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_address0,
        cameraMA_r_fix_ce0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_ce0,
        cameraMA_r_fix_we0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_we0,
        cameraMA_r_fix_d0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_d0,
        cameraMA_l_fix_address0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_address0,
        cameraMA_l_fix_ce0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_ce0,
        cameraMA_l_fix_we0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_we0,
        cameraMA_l_fix_d0 => Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_d0);

    Loop_VITIS_LOOP_55_2_proc_U0 : component stereolbm_axis_cambm_Loop_VITIS_LOOP_55_2_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_55_2_proc_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_55_2_proc_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_55_2_proc_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_55_2_proc_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_55_2_proc_U0_ap_ready,
        distC_r_fix_address0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_address0,
        distC_r_fix_ce0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_ce0,
        distC_r_fix_we0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_we0,
        distC_r_fix_d0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_d0,
        distC_l_fix_address0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_address0,
        distC_l_fix_ce0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_ce0,
        distC_l_fix_we0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_we0,
        distC_l_fix_d0 => Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_d0);

    Block_for_end72_proc_U0 : component stereolbm_axis_cambm_Block_for_end72_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_for_end72_proc_U0_ap_start,
        ap_done => Block_for_end72_proc_U0_ap_done,
        ap_continue => Block_for_end72_proc_U0_ap_continue,
        ap_idle => Block_for_end72_proc_U0_ap_idle,
        ap_ready => Block_for_end72_proc_U0_ap_ready,
        preFilterCap => preFilterCap,
        uniquenessRatio => uniquenessRatio,
        textureThreshold => textureThreshold,
        rows => rows,
        cols => cols,
        ap_return_0 => Block_for_end72_proc_U0_ap_return_0,
        ap_return_1 => Block_for_end72_proc_U0_ap_return_1,
        ap_return_2 => Block_for_end72_proc_U0_ap_return_2,
        ap_return_3 => Block_for_end72_proc_U0_ap_return_3,
        ap_return_4 => Block_for_end72_proc_U0_ap_return_4,
        ap_return_5 => Block_for_end72_proc_U0_ap_return_5,
        ap_return_6 => Block_for_end72_proc_U0_ap_return_6,
        ap_return_7 => Block_for_end72_proc_U0_ap_return_7,
        ap_return_8 => Block_for_end72_proc_U0_ap_return_8,
        ap_return_9 => Block_for_end72_proc_U0_ap_return_9,
        ap_return_10 => Block_for_end72_proc_U0_ap_return_10,
        ap_return_11 => Block_for_end72_proc_U0_ap_return_11,
        ap_return_12 => Block_for_end72_proc_U0_ap_return_12,
        ap_return_13 => Block_for_end72_proc_U0_ap_return_13,
        ap_return_14 => Block_for_end72_proc_U0_ap_return_14);

    AXIvideo2xfMat_8_0_600_800_1_2_1_U0 : component stereolbm_axis_cambm_AXIvideo2xfMat_8_0_600_800_1_2_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_start,
        start_full_n => start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_full_n,
        ap_done => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_done,
        ap_continue => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_continue,
        ap_idle => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_idle,
        ap_ready => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_ready,
        start_out => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_start_out,
        start_write => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_start_write,
        vid_inL_TDATA => vid_inL_TDATA,
        vid_inL_TVALID => vid_inL_TVALID,
        vid_inL_TREADY => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_vid_inL_TREADY,
        vid_inL_TKEEP => vid_inL_TKEEP,
        vid_inL_TSTRB => vid_inL_TSTRB,
        vid_inL_TUSER => vid_inL_TUSER,
        vid_inL_TLAST => vid_inL_TLAST,
        vid_inL_TID => vid_inL_TID,
        vid_inL_TDEST => vid_inL_TDEST,
        p_read => imgL_in_rows_c59_channel_dout,
        p_read1 => imgL_in_cols_c60_channel_dout,
        imgL_in_data_din => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_din,
        imgL_in_data_num_data_valid => imgL_in_data_num_data_valid,
        imgL_in_data_fifo_cap => imgL_in_data_fifo_cap,
        imgL_in_data_full_n => imgL_in_data_full_n,
        imgL_in_data_write => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_write,
        imgL_in_rows_c_din => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_din,
        imgL_in_rows_c_num_data_valid => imgL_in_rows_c_num_data_valid,
        imgL_in_rows_c_fifo_cap => imgL_in_rows_c_fifo_cap,
        imgL_in_rows_c_full_n => imgL_in_rows_c_full_n,
        imgL_in_rows_c_write => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_write,
        imgL_in_cols_c_din => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_din,
        imgL_in_cols_c_num_data_valid => imgL_in_cols_c_num_data_valid,
        imgL_in_cols_c_fifo_cap => imgL_in_cols_c_fifo_cap,
        imgL_in_cols_c_full_n => imgL_in_cols_c_full_n,
        imgL_in_cols_c_write => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_write);

    AXIvideo2xfMat_8_0_600_800_1_2_U0 : component stereolbm_axis_cambm_AXIvideo2xfMat_8_0_600_800_1_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_start,
        start_full_n => start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_full_n,
        ap_done => AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_done,
        ap_continue => AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_continue,
        ap_idle => AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_idle,
        ap_ready => AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_ready,
        start_out => AXIvideo2xfMat_8_0_600_800_1_2_U0_start_out,
        start_write => AXIvideo2xfMat_8_0_600_800_1_2_U0_start_write,
        vid_inR_TDATA => vid_inR_TDATA,
        vid_inR_TVALID => vid_inR_TVALID,
        vid_inR_TREADY => AXIvideo2xfMat_8_0_600_800_1_2_U0_vid_inR_TREADY,
        vid_inR_TKEEP => vid_inR_TKEEP,
        vid_inR_TSTRB => vid_inR_TSTRB,
        vid_inR_TUSER => vid_inR_TUSER,
        vid_inR_TLAST => vid_inR_TLAST,
        vid_inR_TID => vid_inR_TID,
        vid_inR_TDEST => vid_inR_TDEST,
        p_read => imgR_in_rows_c61_channel_dout,
        p_read1 => imgR_in_cols_c62_channel_dout,
        imgR_in_data_din => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_din,
        imgR_in_data_num_data_valid => imgR_in_data_num_data_valid,
        imgR_in_data_fifo_cap => imgR_in_data_fifo_cap,
        imgR_in_data_full_n => imgR_in_data_full_n,
        imgR_in_data_write => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_write,
        imgR_in_rows_c_din => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_din,
        imgR_in_rows_c_num_data_valid => imgR_in_rows_c_num_data_valid,
        imgR_in_rows_c_fifo_cap => imgR_in_rows_c_fifo_cap,
        imgR_in_rows_c_full_n => imgR_in_rows_c_full_n,
        imgR_in_rows_c_write => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_write,
        imgR_in_cols_c_din => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_din,
        imgR_in_cols_c_num_data_valid => imgR_in_cols_c_num_data_valid,
        imgR_in_cols_c_fifo_cap => imgR_in_cols_c_fifo_cap,
        imgR_in_cols_c_full_n => imgR_in_cols_c_full_n,
        imgR_in_cols_c_write => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_write);

    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0 : component stereolbm_axis_cambm_InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_start,
        ap_done => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_done,
        ap_continue => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_continue,
        ap_idle => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_idle,
        ap_ready => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready,
        cameraMatrix_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_address0,
        cameraMatrix_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_ce0,
        cameraMatrix_q0 => cameraMA_l_fix_t_q0,
        distCoeffs_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_address0,
        distCoeffs_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_ce0,
        distCoeffs_q0 => distC_l_fix_t_q0,
        ir_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_address0,
        ir_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_ce0,
        ir_q0 => irA_l_fix_t_q0,
        p_read => mapxLMat_rows_dout,
        p_read1 => mapxLMat_cols_dout,
        mapxLMat_data_din => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_din,
        mapxLMat_data_num_data_valid => mapxLMat_data_num_data_valid,
        mapxLMat_data_fifo_cap => mapxLMat_data_fifo_cap,
        mapxLMat_data_full_n => mapxLMat_data_full_n,
        mapxLMat_data_write => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_write,
        mapyLMat_data_din => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_din,
        mapyLMat_data_num_data_valid => mapyLMat_data_num_data_valid,
        mapyLMat_data_fifo_cap => mapyLMat_data_fifo_cap,
        mapyLMat_data_full_n => mapyLMat_data_full_n,
        mapyLMat_data_write => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_write);

    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0 : component stereolbm_axis_cambm_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2
    port map (
        p_src_mat_rows_dout => imgL_in_rows_c_dout,
        p_src_mat_rows_empty_n => imgL_in_rows_c_empty_n,
        p_src_mat_rows_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_rows_read,
        p_src_mat_cols_dout => imgL_in_cols_c_dout,
        p_src_mat_cols_empty_n => imgL_in_cols_c_empty_n,
        p_src_mat_cols_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_cols_read,
        imgL_in_data_dout => imgL_in_data_dout,
        imgL_in_data_empty_n => imgL_in_data_empty_n,
        imgL_in_data_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_imgL_in_data_read,
        leftRemappedMat_data_din => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_din,
        leftRemappedMat_data_full_n => leftRemappedMat_data_full_n,
        leftRemappedMat_data_write => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_write,
        mapxLMat_data_dout => mapxLMat_data_dout,
        mapxLMat_data_empty_n => mapxLMat_data_empty_n,
        mapxLMat_data_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapxLMat_data_read,
        mapyLMat_data_dout => mapyLMat_data_dout,
        mapyLMat_data_empty_n => mapyLMat_data_empty_n,
        mapyLMat_data_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapyLMat_data_read,
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_start,
        ap_done => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_done,
        ap_ready => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_ready,
        ap_idle => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_idle,
        ap_continue => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_continue);

    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0 : component stereolbm_axis_cambm_InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_start,
        ap_done => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_done,
        ap_continue => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_continue,
        ap_idle => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_idle,
        ap_ready => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready,
        cameraMatrix_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_address0,
        cameraMatrix_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_ce0,
        cameraMatrix_q0 => cameraMA_r_fix_t_q0,
        distCoeffs_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_address0,
        distCoeffs_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_ce0,
        distCoeffs_q0 => distC_r_fix_t_q0,
        ir_address0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_address0,
        ir_ce0 => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_ce0,
        ir_q0 => irA_r_fix_t_q0,
        p_read => mapxRMat_rows_dout,
        p_read1 => mapxRMat_cols_dout,
        mapxRMat_data_din => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_din,
        mapxRMat_data_num_data_valid => mapxRMat_data_num_data_valid,
        mapxRMat_data_fifo_cap => mapxRMat_data_fifo_cap,
        mapxRMat_data_full_n => mapxRMat_data_full_n,
        mapxRMat_data_write => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_write,
        mapyRMat_data_din => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_din,
        mapyRMat_data_num_data_valid => mapyRMat_data_num_data_valid,
        mapyRMat_data_fifo_cap => mapyRMat_data_fifo_cap,
        mapyRMat_data_full_n => mapyRMat_data_full_n,
        mapyRMat_data_write => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_write);

    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0 : component stereolbm_axis_cambm_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_s
    port map (
        p_src_mat_rows_dout => imgR_in_rows_c_dout,
        p_src_mat_rows_empty_n => imgR_in_rows_c_empty_n,
        p_src_mat_rows_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_rows_read,
        p_src_mat_cols_dout => imgR_in_cols_c_dout,
        p_src_mat_cols_empty_n => imgR_in_cols_c_empty_n,
        p_src_mat_cols_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_cols_read,
        imgR_in_data_dout => imgR_in_data_dout,
        imgR_in_data_empty_n => imgR_in_data_empty_n,
        imgR_in_data_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_imgR_in_data_read,
        rightRemappedMat_data_din => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_din,
        rightRemappedMat_data_full_n => rightRemappedMat_data_full_n,
        rightRemappedMat_data_write => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_write,
        mapxRMat_data_dout => mapxRMat_data_dout,
        mapxRMat_data_empty_n => mapxRMat_data_empty_n,
        mapxRMat_data_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapxRMat_data_read,
        mapyRMat_data_dout => mapyRMat_data_dout,
        mapyRMat_data_empty_n => mapyRMat_data_empty_n,
        mapyRMat_data_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapyRMat_data_read,
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_start,
        ap_done => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_done,
        ap_ready => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_ready,
        ap_idle => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_idle,
        ap_continue => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_continue);

    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0 : component stereolbm_axis_cambm_StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_start,
        start_full_n => start_for_ConvertShiftAbs_U0_full_n,
        ap_done => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_done,
        ap_continue => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_continue,
        ap_idle => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_idle,
        ap_ready => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready,
        start_out => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_start_out,
        start_write => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_start_write,
        p_read => leftRemappedMat_rows_dout,
        p_read1 => leftRemappedMat_cols_dout,
        leftRemappedMat_data_dout => leftRemappedMat_data_dout,
        leftRemappedMat_data_num_data_valid => leftRemappedMat_data_num_data_valid,
        leftRemappedMat_data_fifo_cap => leftRemappedMat_data_fifo_cap,
        leftRemappedMat_data_empty_n => leftRemappedMat_data_empty_n,
        leftRemappedMat_data_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_leftRemappedMat_data_read,
        p_read2 => rightRemappedMat_rows_dout,
        p_read3 => rightRemappedMat_cols_dout,
        rightRemappedMat_data_dout => rightRemappedMat_data_dout,
        rightRemappedMat_data_num_data_valid => rightRemappedMat_data_num_data_valid,
        rightRemappedMat_data_fifo_cap => rightRemappedMat_data_fifo_cap,
        rightRemappedMat_data_empty_n => rightRemappedMat_data_empty_n,
        rightRemappedMat_data_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_rightRemappedMat_data_read,
        img_disp16u_data_din => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_din,
        img_disp16u_data_num_data_valid => img_disp16u_data_num_data_valid,
        img_disp16u_data_fifo_cap => img_disp16u_data_fifo_cap,
        img_disp16u_data_full_n => img_disp16u_data_full_n,
        img_disp16u_data_write => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_write,
        p_read4 => bmState_preFilterCap_dout,
        p_read5 => bmState_textureThreshold_dout,
        p_read6 => bmState_uniquenessRatio_dout);

    Block_for_end7235_proc_U0 : component stereolbm_axis_cambm_Block_for_end7235_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_for_end7235_proc_U0_ap_start,
        ap_done => Block_for_end7235_proc_U0_ap_done,
        ap_continue => Block_for_end7235_proc_U0_ap_continue,
        ap_idle => Block_for_end7235_proc_U0_ap_idle,
        ap_ready => Block_for_end7235_proc_U0_ap_ready,
        rows => rows,
        cols => cols,
        ap_return_0 => Block_for_end7235_proc_U0_ap_return_0,
        ap_return_1 => Block_for_end7235_proc_U0_ap_return_1);

    ConvertShiftAbs_U0 : component stereolbm_axis_cambm_ConvertShiftAbs
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ConvertShiftAbs_U0_ap_start,
        ap_done => ConvertShiftAbs_U0_ap_done,
        ap_continue => ConvertShiftAbs_U0_ap_continue,
        ap_idle => ConvertShiftAbs_U0_ap_idle,
        ap_ready => ConvertShiftAbs_U0_ap_ready,
        img_disp16u_data_dout => img_disp16u_data_dout,
        img_disp16u_data_num_data_valid => img_disp16u_data_num_data_valid,
        img_disp16u_data_fifo_cap => img_disp16u_data_fifo_cap,
        img_disp16u_data_empty_n => img_disp16u_data_empty_n,
        img_disp16u_data_read => ConvertShiftAbs_U0_img_disp16u_data_read,
        img_disp8u_data_din => ConvertShiftAbs_U0_img_disp8u_data_din,
        img_disp8u_data_num_data_valid => img_disp8u_data_num_data_valid,
        img_disp8u_data_fifo_cap => img_disp8u_data_fifo_cap,
        img_disp8u_data_full_n => img_disp8u_data_full_n,
        img_disp8u_data_write => ConvertShiftAbs_U0_img_disp8u_data_write);

    Block_for_end7237_proc_U0 : component stereolbm_axis_cambm_Block_for_end7237_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_for_end7237_proc_U0_ap_start,
        ap_done => Block_for_end7237_proc_U0_ap_done,
        ap_continue => Block_for_end7237_proc_U0_ap_continue,
        ap_idle => Block_for_end7237_proc_U0_ap_idle,
        ap_ready => Block_for_end7237_proc_U0_ap_ready,
        rows => rows,
        cols => cols,
        ap_return_0 => Block_for_end7237_proc_U0_ap_return_0,
        ap_return_1 => Block_for_end7237_proc_U0_ap_return_1);

    erode_0_0_600_800_0_3_3_1_1_2_2_U0 : component stereolbm_axis_cambm_erode_0_0_600_800_0_3_3_1_1_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start,
        ap_done => erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_done,
        ap_continue => erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue,
        ap_idle => erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle,
        ap_ready => erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready,
        p_read => img_disp8u_rows_dout,
        p_read1 => img_disp8u_cols_dout,
        img_disp8u_data_dout => img_disp8u_data_dout,
        img_disp8u_data_num_data_valid => img_disp8u_data_num_data_valid,
        img_disp8u_data_fifo_cap => img_disp8u_data_fifo_cap,
        img_disp8u_data_empty_n => img_disp8u_data_empty_n,
        img_disp8u_data_read => erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_data_read,
        img_disp8u_erode_data_din => erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_din,
        img_disp8u_erode_data_num_data_valid => img_disp8u_erode_data_num_data_valid,
        img_disp8u_erode_data_fifo_cap => img_disp8u_erode_data_fifo_cap,
        img_disp8u_erode_data_full_n => img_disp8u_erode_data_full_n,
        img_disp8u_erode_data_write => erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_write);

    Block_for_end7239_proc_U0 : component stereolbm_axis_cambm_Block_for_end7239_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_for_end7239_proc_U0_ap_start,
        ap_done => Block_for_end7239_proc_U0_ap_done,
        ap_continue => Block_for_end7239_proc_U0_ap_continue,
        ap_idle => Block_for_end7239_proc_U0_ap_idle,
        ap_ready => Block_for_end7239_proc_U0_ap_ready,
        rows => rows,
        cols => cols,
        ap_return_0 => Block_for_end7239_proc_U0_ap_return_0,
        ap_return_1 => Block_for_end7239_proc_U0_ap_return_1);

    dilate_0_0_600_800_0_3_3_1_1_2_2_U0 : component stereolbm_axis_cambm_dilate_0_0_600_800_0_3_3_1_1_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start,
        ap_done => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_done,
        ap_continue => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue,
        ap_idle => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle,
        ap_ready => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready,
        p_read => img_disp8u_erode_rows_dout,
        p_read1 => img_disp8u_erode_cols_dout,
        img_disp8u_erode_data_dout => img_disp8u_erode_data_dout,
        img_disp8u_erode_data_num_data_valid => img_disp8u_erode_data_num_data_valid,
        img_disp8u_erode_data_fifo_cap => img_disp8u_erode_data_fifo_cap,
        img_disp8u_erode_data_empty_n => img_disp8u_erode_data_empty_n,
        img_disp8u_erode_data_read => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_read,
        img_disp8u_dilate_data_din => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_din,
        img_disp8u_dilate_data_num_data_valid => img_disp8u_dilate_data_num_data_valid,
        img_disp8u_dilate_data_fifo_cap => img_disp8u_dilate_data_fifo_cap,
        img_disp8u_dilate_data_full_n => img_disp8u_dilate_data_full_n,
        img_disp8u_dilate_data_write => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_write);

    xfMat2AXIvideo_8_0_600_800_1_2_U0 : component stereolbm_axis_cambm_xfMat2AXIvideo_8_0_600_800_1_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_start,
        ap_done => xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_done,
        ap_continue => xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_continue,
        ap_idle => xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_idle,
        ap_ready => xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_ready,
        p_read => img_disp8u_dilate_rows_dout,
        p_read1 => img_disp8u_dilate_cols_dout,
        img_disp8u_dilate_data_dout => img_disp8u_dilate_data_dout,
        img_disp8u_dilate_data_num_data_valid => img_disp8u_dilate_data_num_data_valid,
        img_disp8u_dilate_data_fifo_cap => img_disp8u_dilate_data_fifo_cap,
        img_disp8u_dilate_data_empty_n => img_disp8u_dilate_data_empty_n,
        img_disp8u_dilate_data_read => xfMat2AXIvideo_8_0_600_800_1_2_U0_img_disp8u_dilate_data_read,
        vid_out_TDATA => xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDATA,
        vid_out_TVALID => xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TVALID,
        vid_out_TREADY => vid_out_TREADY,
        vid_out_TKEEP => xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TKEEP,
        vid_out_TSTRB => xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TSTRB,
        vid_out_TUSER => xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TUSER,
        vid_out_TLAST => xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TLAST,
        vid_out_TID => xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TID,
        vid_out_TDEST => xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDEST);

    mapxLMat_rows_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_0,
        if_full_n => mapxLMat_rows_full_n,
        if_write => ap_channel_done_mapxLMat_rows,
        if_dout => mapxLMat_rows_dout,
        if_num_data_valid => mapxLMat_rows_num_data_valid,
        if_fifo_cap => mapxLMat_rows_fifo_cap,
        if_empty_n => mapxLMat_rows_empty_n,
        if_read => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready);

    mapxLMat_cols_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_1,
        if_full_n => mapxLMat_cols_full_n,
        if_write => ap_channel_done_mapxLMat_cols,
        if_dout => mapxLMat_cols_dout,
        if_num_data_valid => mapxLMat_cols_num_data_valid,
        if_fifo_cap => mapxLMat_cols_fifo_cap,
        if_empty_n => mapxLMat_cols_empty_n,
        if_read => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready);

    mapxRMat_rows_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_2,
        if_full_n => mapxRMat_rows_full_n,
        if_write => ap_channel_done_mapxRMat_rows,
        if_dout => mapxRMat_rows_dout,
        if_num_data_valid => mapxRMat_rows_num_data_valid,
        if_fifo_cap => mapxRMat_rows_fifo_cap,
        if_empty_n => mapxRMat_rows_empty_n,
        if_read => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready);

    mapxRMat_cols_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_3,
        if_full_n => mapxRMat_cols_full_n,
        if_write => ap_channel_done_mapxRMat_cols,
        if_dout => mapxRMat_cols_dout,
        if_num_data_valid => mapxRMat_cols_num_data_valid,
        if_fifo_cap => mapxRMat_cols_fifo_cap,
        if_empty_n => mapxRMat_cols_empty_n,
        if_read => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready);

    imgL_in_rows_c59_channel_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_4,
        if_full_n => imgL_in_rows_c59_channel_full_n,
        if_write => ap_channel_done_imgL_in_rows_c59_channel,
        if_dout => imgL_in_rows_c59_channel_dout,
        if_num_data_valid => imgL_in_rows_c59_channel_num_data_valid,
        if_fifo_cap => imgL_in_rows_c59_channel_fifo_cap,
        if_empty_n => imgL_in_rows_c59_channel_empty_n,
        if_read => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_ready);

    imgL_in_cols_c60_channel_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_5,
        if_full_n => imgL_in_cols_c60_channel_full_n,
        if_write => ap_channel_done_imgL_in_cols_c60_channel,
        if_dout => imgL_in_cols_c60_channel_dout,
        if_num_data_valid => imgL_in_cols_c60_channel_num_data_valid,
        if_fifo_cap => imgL_in_cols_c60_channel_fifo_cap,
        if_empty_n => imgL_in_cols_c60_channel_empty_n,
        if_read => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_ready);

    imgR_in_rows_c61_channel_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_6,
        if_full_n => imgR_in_rows_c61_channel_full_n,
        if_write => ap_channel_done_imgR_in_rows_c61_channel,
        if_dout => imgR_in_rows_c61_channel_dout,
        if_num_data_valid => imgR_in_rows_c61_channel_num_data_valid,
        if_fifo_cap => imgR_in_rows_c61_channel_fifo_cap,
        if_empty_n => imgR_in_rows_c61_channel_empty_n,
        if_read => AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_ready);

    imgR_in_cols_c62_channel_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_7,
        if_full_n => imgR_in_cols_c62_channel_full_n,
        if_write => ap_channel_done_imgR_in_cols_c62_channel,
        if_dout => imgR_in_cols_c62_channel_dout,
        if_num_data_valid => imgR_in_cols_c62_channel_num_data_valid,
        if_fifo_cap => imgR_in_cols_c62_channel_fifo_cap,
        if_empty_n => imgR_in_cols_c62_channel_empty_n,
        if_read => AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_ready);

    bmState_preFilterCap_U : component stereolbm_axis_cambm_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_8,
        if_full_n => bmState_preFilterCap_full_n,
        if_write => ap_channel_done_bmState_preFilterCap,
        if_dout => bmState_preFilterCap_dout,
        if_num_data_valid => bmState_preFilterCap_num_data_valid,
        if_fifo_cap => bmState_preFilterCap_fifo_cap,
        if_empty_n => bmState_preFilterCap_empty_n,
        if_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready);

    bmState_uniquenessRatio_U : component stereolbm_axis_cambm_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_9,
        if_full_n => bmState_uniquenessRatio_full_n,
        if_write => ap_channel_done_bmState_uniquenessRatio,
        if_dout => bmState_uniquenessRatio_dout,
        if_num_data_valid => bmState_uniquenessRatio_num_data_valid,
        if_fifo_cap => bmState_uniquenessRatio_fifo_cap,
        if_empty_n => bmState_uniquenessRatio_empty_n,
        if_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready);

    bmState_textureThreshold_U : component stereolbm_axis_cambm_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_10,
        if_full_n => bmState_textureThreshold_full_n,
        if_write => ap_channel_done_bmState_textureThreshold,
        if_dout => bmState_textureThreshold_dout,
        if_num_data_valid => bmState_textureThreshold_num_data_valid,
        if_fifo_cap => bmState_textureThreshold_fifo_cap,
        if_empty_n => bmState_textureThreshold_empty_n,
        if_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready);

    leftRemappedMat_rows_U : component stereolbm_axis_cambm_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_11,
        if_full_n => leftRemappedMat_rows_full_n,
        if_write => ap_channel_done_leftRemappedMat_rows,
        if_dout => leftRemappedMat_rows_dout,
        if_num_data_valid => leftRemappedMat_rows_num_data_valid,
        if_fifo_cap => leftRemappedMat_rows_fifo_cap,
        if_empty_n => leftRemappedMat_rows_empty_n,
        if_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready);

    leftRemappedMat_cols_U : component stereolbm_axis_cambm_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_12,
        if_full_n => leftRemappedMat_cols_full_n,
        if_write => ap_channel_done_leftRemappedMat_cols,
        if_dout => leftRemappedMat_cols_dout,
        if_num_data_valid => leftRemappedMat_cols_num_data_valid,
        if_fifo_cap => leftRemappedMat_cols_fifo_cap,
        if_empty_n => leftRemappedMat_cols_empty_n,
        if_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready);

    rightRemappedMat_rows_U : component stereolbm_axis_cambm_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_13,
        if_full_n => rightRemappedMat_rows_full_n,
        if_write => ap_channel_done_rightRemappedMat_rows,
        if_dout => rightRemappedMat_rows_dout,
        if_num_data_valid => rightRemappedMat_rows_num_data_valid,
        if_fifo_cap => rightRemappedMat_rows_fifo_cap,
        if_empty_n => rightRemappedMat_rows_empty_n,
        if_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready);

    rightRemappedMat_cols_U : component stereolbm_axis_cambm_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end72_proc_U0_ap_return_14,
        if_full_n => rightRemappedMat_cols_full_n,
        if_write => ap_channel_done_rightRemappedMat_cols,
        if_dout => rightRemappedMat_cols_dout,
        if_num_data_valid => rightRemappedMat_cols_num_data_valid,
        if_fifo_cap => rightRemappedMat_cols_fifo_cap,
        if_empty_n => rightRemappedMat_cols_empty_n,
        if_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready);

    imgL_in_data_U : component stereolbm_axis_cambm_fifo_w8_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_din,
        if_full_n => imgL_in_data_full_n,
        if_write => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_write,
        if_dout => imgL_in_data_dout,
        if_num_data_valid => imgL_in_data_num_data_valid,
        if_fifo_cap => imgL_in_data_fifo_cap,
        if_empty_n => imgL_in_data_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_imgL_in_data_read);

    imgL_in_rows_c_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_din,
        if_full_n => imgL_in_rows_c_full_n,
        if_write => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_write,
        if_dout => imgL_in_rows_c_dout,
        if_num_data_valid => imgL_in_rows_c_num_data_valid,
        if_fifo_cap => imgL_in_rows_c_fifo_cap,
        if_empty_n => imgL_in_rows_c_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_rows_read);

    imgL_in_cols_c_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_din,
        if_full_n => imgL_in_cols_c_full_n,
        if_write => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_write,
        if_dout => imgL_in_cols_c_dout,
        if_num_data_valid => imgL_in_cols_c_num_data_valid,
        if_fifo_cap => imgL_in_cols_c_fifo_cap,
        if_empty_n => imgL_in_cols_c_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_cols_read);

    imgR_in_data_U : component stereolbm_axis_cambm_fifo_w8_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_din,
        if_full_n => imgR_in_data_full_n,
        if_write => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_write,
        if_dout => imgR_in_data_dout,
        if_num_data_valid => imgR_in_data_num_data_valid,
        if_fifo_cap => imgR_in_data_fifo_cap,
        if_empty_n => imgR_in_data_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_imgR_in_data_read);

    imgR_in_rows_c_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_din,
        if_full_n => imgR_in_rows_c_full_n,
        if_write => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_write,
        if_dout => imgR_in_rows_c_dout,
        if_num_data_valid => imgR_in_rows_c_num_data_valid,
        if_fifo_cap => imgR_in_rows_c_fifo_cap,
        if_empty_n => imgR_in_rows_c_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_rows_read);

    imgR_in_cols_c_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_din,
        if_full_n => imgR_in_cols_c_full_n,
        if_write => AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_write,
        if_dout => imgR_in_cols_c_dout,
        if_num_data_valid => imgR_in_cols_c_num_data_valid,
        if_fifo_cap => imgR_in_cols_c_fifo_cap,
        if_empty_n => imgR_in_cols_c_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_cols_read);

    mapxLMat_data_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_din,
        if_full_n => mapxLMat_data_full_n,
        if_write => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_write,
        if_dout => mapxLMat_data_dout,
        if_num_data_valid => mapxLMat_data_num_data_valid,
        if_fifo_cap => mapxLMat_data_fifo_cap,
        if_empty_n => mapxLMat_data_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapxLMat_data_read);

    mapyLMat_data_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_din,
        if_full_n => mapyLMat_data_full_n,
        if_write => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_write,
        if_dout => mapyLMat_data_dout,
        if_num_data_valid => mapyLMat_data_num_data_valid,
        if_fifo_cap => mapyLMat_data_fifo_cap,
        if_empty_n => mapyLMat_data_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapyLMat_data_read);

    leftRemappedMat_data_U : component stereolbm_axis_cambm_fifo_w8_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_din,
        if_full_n => leftRemappedMat_data_full_n,
        if_write => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_write,
        if_dout => leftRemappedMat_data_dout,
        if_num_data_valid => leftRemappedMat_data_num_data_valid,
        if_fifo_cap => leftRemappedMat_data_fifo_cap,
        if_empty_n => leftRemappedMat_data_empty_n,
        if_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_leftRemappedMat_data_read);

    mapxRMat_data_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_din,
        if_full_n => mapxRMat_data_full_n,
        if_write => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_write,
        if_dout => mapxRMat_data_dout,
        if_num_data_valid => mapxRMat_data_num_data_valid,
        if_fifo_cap => mapxRMat_data_fifo_cap,
        if_empty_n => mapxRMat_data_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapxRMat_data_read);

    mapyRMat_data_U : component stereolbm_axis_cambm_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_din,
        if_full_n => mapyRMat_data_full_n,
        if_write => InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_write,
        if_dout => mapyRMat_data_dout,
        if_num_data_valid => mapyRMat_data_num_data_valid,
        if_fifo_cap => mapyRMat_data_fifo_cap,
        if_empty_n => mapyRMat_data_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapyRMat_data_read);

    rightRemappedMat_data_U : component stereolbm_axis_cambm_fifo_w8_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_din,
        if_full_n => rightRemappedMat_data_full_n,
        if_write => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_write,
        if_dout => rightRemappedMat_data_dout,
        if_num_data_valid => rightRemappedMat_data_num_data_valid,
        if_fifo_cap => rightRemappedMat_data_fifo_cap,
        if_empty_n => rightRemappedMat_data_empty_n,
        if_read => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_rightRemappedMat_data_read);

    img_disp16u_data_U : component stereolbm_axis_cambm_fifo_w16_d2_S_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_din,
        if_full_n => img_disp16u_data_full_n,
        if_write => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_write,
        if_dout => img_disp16u_data_dout,
        if_num_data_valid => img_disp16u_data_num_data_valid,
        if_fifo_cap => img_disp16u_data_fifo_cap,
        if_empty_n => img_disp16u_data_empty_n,
        if_read => ConvertShiftAbs_U0_img_disp16u_data_read);

    img_disp8u_rows_U : component stereolbm_axis_cambm_fifo_w32_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end7235_proc_U0_ap_return_0,
        if_full_n => img_disp8u_rows_full_n,
        if_write => ap_channel_done_img_disp8u_rows,
        if_dout => img_disp8u_rows_dout,
        if_num_data_valid => img_disp8u_rows_num_data_valid,
        if_fifo_cap => img_disp8u_rows_fifo_cap,
        if_empty_n => img_disp8u_rows_empty_n,
        if_read => erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready);

    img_disp8u_cols_U : component stereolbm_axis_cambm_fifo_w32_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end7235_proc_U0_ap_return_1,
        if_full_n => img_disp8u_cols_full_n,
        if_write => ap_channel_done_img_disp8u_cols,
        if_dout => img_disp8u_cols_dout,
        if_num_data_valid => img_disp8u_cols_num_data_valid,
        if_fifo_cap => img_disp8u_cols_fifo_cap,
        if_empty_n => img_disp8u_cols_empty_n,
        if_read => erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready);

    img_disp8u_data_U : component stereolbm_axis_cambm_fifo_w8_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ConvertShiftAbs_U0_img_disp8u_data_din,
        if_full_n => img_disp8u_data_full_n,
        if_write => ConvertShiftAbs_U0_img_disp8u_data_write,
        if_dout => img_disp8u_data_dout,
        if_num_data_valid => img_disp8u_data_num_data_valid,
        if_fifo_cap => img_disp8u_data_fifo_cap,
        if_empty_n => img_disp8u_data_empty_n,
        if_read => erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_data_read);

    img_disp8u_erode_rows_U : component stereolbm_axis_cambm_fifo_w32_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end7237_proc_U0_ap_return_0,
        if_full_n => img_disp8u_erode_rows_full_n,
        if_write => ap_channel_done_img_disp8u_erode_rows,
        if_dout => img_disp8u_erode_rows_dout,
        if_num_data_valid => img_disp8u_erode_rows_num_data_valid,
        if_fifo_cap => img_disp8u_erode_rows_fifo_cap,
        if_empty_n => img_disp8u_erode_rows_empty_n,
        if_read => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready);

    img_disp8u_erode_cols_U : component stereolbm_axis_cambm_fifo_w32_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end7237_proc_U0_ap_return_1,
        if_full_n => img_disp8u_erode_cols_full_n,
        if_write => ap_channel_done_img_disp8u_erode_cols,
        if_dout => img_disp8u_erode_cols_dout,
        if_num_data_valid => img_disp8u_erode_cols_num_data_valid,
        if_fifo_cap => img_disp8u_erode_cols_fifo_cap,
        if_empty_n => img_disp8u_erode_cols_empty_n,
        if_read => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready);

    img_disp8u_erode_data_U : component stereolbm_axis_cambm_fifo_w8_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_din,
        if_full_n => img_disp8u_erode_data_full_n,
        if_write => erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_write,
        if_dout => img_disp8u_erode_data_dout,
        if_num_data_valid => img_disp8u_erode_data_num_data_valid,
        if_fifo_cap => img_disp8u_erode_data_fifo_cap,
        if_empty_n => img_disp8u_erode_data_empty_n,
        if_read => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_read);

    img_disp8u_dilate_rows_U : component stereolbm_axis_cambm_fifo_w32_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end7239_proc_U0_ap_return_0,
        if_full_n => img_disp8u_dilate_rows_full_n,
        if_write => ap_channel_done_img_disp8u_dilate_rows,
        if_dout => img_disp8u_dilate_rows_dout,
        if_num_data_valid => img_disp8u_dilate_rows_num_data_valid,
        if_fifo_cap => img_disp8u_dilate_rows_fifo_cap,
        if_empty_n => img_disp8u_dilate_rows_empty_n,
        if_read => xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_ready);

    img_disp8u_dilate_cols_U : component stereolbm_axis_cambm_fifo_w32_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_for_end7239_proc_U0_ap_return_1,
        if_full_n => img_disp8u_dilate_cols_full_n,
        if_write => ap_channel_done_img_disp8u_dilate_cols,
        if_dout => img_disp8u_dilate_cols_dout,
        if_num_data_valid => img_disp8u_dilate_cols_num_data_valid,
        if_fifo_cap => img_disp8u_dilate_cols_fifo_cap,
        if_empty_n => img_disp8u_dilate_cols_empty_n,
        if_read => xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_ready);

    img_disp8u_dilate_data_U : component stereolbm_axis_cambm_fifo_w8_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_din,
        if_full_n => img_disp8u_dilate_data_full_n,
        if_write => dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_write,
        if_dout => img_disp8u_dilate_data_dout,
        if_num_data_valid => img_disp8u_dilate_data_num_data_valid,
        if_fifo_cap => img_disp8u_dilate_data_fifo_cap,
        if_empty_n => img_disp8u_dilate_data_empty_n,
        if_read => xfMat2AXIvideo_8_0_600_800_1_2_U0_img_disp8u_dilate_data_read);

    start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_U : component stereolbm_axis_cambm_start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_din,
        if_full_n => start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_full_n,
        if_write => AXIvideo2xfMat_8_0_600_800_1_2_1_U0_start_write,
        if_dout => start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_dout,
        if_empty_n => start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_ready);

    start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_U : component stereolbm_axis_cambm_start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_din,
        if_full_n => start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_full_n,
        if_write => AXIvideo2xfMat_8_0_600_800_1_2_U0_start_write,
        if_dout => start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_dout,
        if_empty_n => start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_empty_n,
        if_read => remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_ready);

    start_for_ConvertShiftAbs_U0_U : component stereolbm_axis_cambm_start_for_ConvertShiftAbs_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_ConvertShiftAbs_U0_din,
        if_full_n => start_for_ConvertShiftAbs_U0_full_n,
        if_write => StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_start_write,
        if_dout => start_for_ConvertShiftAbs_U0_dout,
        if_empty_n => start_for_ConvertShiftAbs_U0_empty_n,
        if_read => ConvertShiftAbs_U0_ap_ready);





    ap_sync_reg_Block_for_end7235_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_for_end7235_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_for_end7235_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_for_end7235_proc_U0_ap_ready <= ap_sync_Block_for_end7235_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Block_for_end7237_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_for_end7237_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_for_end7237_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_for_end7237_proc_U0_ap_ready <= ap_sync_Block_for_end7237_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Block_for_end7239_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_for_end7239_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_for_end7239_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_for_end7239_proc_U0_ap_ready <= ap_sync_Block_for_end7239_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Block_for_end72_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_for_end72_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_for_end72_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_for_end72_proc_U0_ap_ready <= ap_sync_Block_for_end72_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready <= ap_sync_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready <= ap_sync_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bmState_preFilterCap_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bmState_preFilterCap <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bmState_preFilterCap <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bmState_preFilterCap <= ap_sync_channel_write_bmState_preFilterCap;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bmState_textureThreshold_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bmState_textureThreshold <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bmState_textureThreshold <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bmState_textureThreshold <= ap_sync_channel_write_bmState_textureThreshold;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bmState_uniquenessRatio_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bmState_uniquenessRatio <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bmState_uniquenessRatio <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bmState_uniquenessRatio <= ap_sync_channel_write_bmState_uniquenessRatio;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_cameraMA_l_fix_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_cameraMA_l_fix <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_46_1_proc_U0_ap_done and Loop_VITIS_LOOP_46_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_cameraMA_l_fix <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_cameraMA_l_fix <= ap_sync_channel_write_cameraMA_l_fix;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_cameraMA_r_fix_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_cameraMA_r_fix <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_46_1_proc_U0_ap_done and Loop_VITIS_LOOP_46_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_cameraMA_r_fix <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_cameraMA_r_fix <= ap_sync_channel_write_cameraMA_r_fix;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_distC_l_fix_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_distC_l_fix <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_55_2_proc_U0_ap_done and Loop_VITIS_LOOP_55_2_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_distC_l_fix <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_distC_l_fix <= ap_sync_channel_write_distC_l_fix;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_distC_r_fix_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_distC_r_fix <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_55_2_proc_U0_ap_done and Loop_VITIS_LOOP_55_2_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_distC_r_fix <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_distC_r_fix <= ap_sync_channel_write_distC_r_fix;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_imgL_in_cols_c60_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_imgL_in_cols_c60_channel <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_imgL_in_cols_c60_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_imgL_in_cols_c60_channel <= ap_sync_channel_write_imgL_in_cols_c60_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_imgL_in_rows_c59_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_imgL_in_rows_c59_channel <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_imgL_in_rows_c59_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_imgL_in_rows_c59_channel <= ap_sync_channel_write_imgL_in_rows_c59_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_imgR_in_cols_c62_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_imgR_in_cols_c62_channel <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_imgR_in_cols_c62_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_imgR_in_cols_c62_channel <= ap_sync_channel_write_imgR_in_cols_c62_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_imgR_in_rows_c61_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_imgR_in_rows_c61_channel <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_imgR_in_rows_c61_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_imgR_in_rows_c61_channel <= ap_sync_channel_write_imgR_in_rows_c61_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_img_disp8u_cols_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_img_disp8u_cols <= ap_const_logic_0;
            else
                if (((Block_for_end7235_proc_U0_ap_done and Block_for_end7235_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_img_disp8u_cols <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_img_disp8u_cols <= ap_sync_channel_write_img_disp8u_cols;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_img_disp8u_dilate_cols_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_img_disp8u_dilate_cols <= ap_const_logic_0;
            else
                if (((Block_for_end7239_proc_U0_ap_done and Block_for_end7239_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_img_disp8u_dilate_cols <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_img_disp8u_dilate_cols <= ap_sync_channel_write_img_disp8u_dilate_cols;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_img_disp8u_dilate_rows_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_img_disp8u_dilate_rows <= ap_const_logic_0;
            else
                if (((Block_for_end7239_proc_U0_ap_done and Block_for_end7239_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_img_disp8u_dilate_rows <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_img_disp8u_dilate_rows <= ap_sync_channel_write_img_disp8u_dilate_rows;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_img_disp8u_erode_cols_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_img_disp8u_erode_cols <= ap_const_logic_0;
            else
                if (((Block_for_end7237_proc_U0_ap_done and Block_for_end7237_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_img_disp8u_erode_cols <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_img_disp8u_erode_cols <= ap_sync_channel_write_img_disp8u_erode_cols;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_img_disp8u_erode_rows_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_img_disp8u_erode_rows <= ap_const_logic_0;
            else
                if (((Block_for_end7237_proc_U0_ap_done and Block_for_end7237_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_img_disp8u_erode_rows <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_img_disp8u_erode_rows <= ap_sync_channel_write_img_disp8u_erode_rows;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_img_disp8u_rows_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_img_disp8u_rows <= ap_const_logic_0;
            else
                if (((Block_for_end7235_proc_U0_ap_done and Block_for_end7235_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_img_disp8u_rows <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_img_disp8u_rows <= ap_sync_channel_write_img_disp8u_rows;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_irA_l_fix_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_irA_l_fix <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_46_1_proc_U0_ap_done and Loop_VITIS_LOOP_46_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_irA_l_fix <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_irA_l_fix <= ap_sync_channel_write_irA_l_fix;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_irA_r_fix_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_irA_r_fix <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_46_1_proc_U0_ap_done and Loop_VITIS_LOOP_46_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_irA_r_fix <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_irA_r_fix <= ap_sync_channel_write_irA_r_fix;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_leftRemappedMat_cols_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_leftRemappedMat_cols <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_leftRemappedMat_cols <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_leftRemappedMat_cols <= ap_sync_channel_write_leftRemappedMat_cols;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_leftRemappedMat_rows_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_leftRemappedMat_rows <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_leftRemappedMat_rows <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_leftRemappedMat_rows <= ap_sync_channel_write_leftRemappedMat_rows;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_mapxLMat_cols_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_mapxLMat_cols <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_mapxLMat_cols <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_mapxLMat_cols <= ap_sync_channel_write_mapxLMat_cols;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_mapxLMat_rows_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_mapxLMat_rows <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_mapxLMat_rows <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_mapxLMat_rows <= ap_sync_channel_write_mapxLMat_rows;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_mapxRMat_cols_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_mapxRMat_cols <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_mapxRMat_cols <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_mapxRMat_cols <= ap_sync_channel_write_mapxRMat_cols;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_mapxRMat_rows_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_mapxRMat_rows <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_mapxRMat_rows <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_mapxRMat_rows <= ap_sync_channel_write_mapxRMat_rows;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_rightRemappedMat_cols_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_rightRemappedMat_cols <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_rightRemappedMat_cols <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_rightRemappedMat_cols <= ap_sync_channel_write_rightRemappedMat_cols;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_rightRemappedMat_rows_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_rightRemappedMat_rows <= ap_const_logic_0;
            else
                if (((Block_for_end72_proc_U0_ap_done and Block_for_end72_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_rightRemappedMat_rows <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_rightRemappedMat_rows <= ap_sync_channel_write_rightRemappedMat_rows;
                end if; 
            end if;
        end if;
    end process;

    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_start <= (imgL_in_rows_c59_channel_empty_n and imgL_in_cols_c60_channel_empty_n);
    AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_start <= (imgR_in_rows_c61_channel_empty_n and imgR_in_cols_c62_channel_empty_n);
    Block_for_end7235_proc_U0_ap_continue <= (ap_sync_channel_write_img_disp8u_rows and ap_sync_channel_write_img_disp8u_cols);
    Block_for_end7235_proc_U0_ap_start <= ((ap_sync_reg_Block_for_end7235_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_for_end7237_proc_U0_ap_continue <= (ap_sync_channel_write_img_disp8u_erode_rows and ap_sync_channel_write_img_disp8u_erode_cols);
    Block_for_end7237_proc_U0_ap_start <= ((ap_sync_reg_Block_for_end7237_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_for_end7239_proc_U0_ap_continue <= (ap_sync_channel_write_img_disp8u_dilate_rows and ap_sync_channel_write_img_disp8u_dilate_cols);
    Block_for_end7239_proc_U0_ap_start <= ((ap_sync_reg_Block_for_end7239_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_for_end72_proc_U0_ap_continue <= (ap_sync_channel_write_rightRemappedMat_rows and ap_sync_channel_write_rightRemappedMat_cols and ap_sync_channel_write_mapxRMat_rows and ap_sync_channel_write_mapxRMat_cols and ap_sync_channel_write_mapxLMat_rows and ap_sync_channel_write_mapxLMat_cols and ap_sync_channel_write_leftRemappedMat_rows and ap_sync_channel_write_leftRemappedMat_cols and ap_sync_channel_write_imgR_in_rows_c61_channel and ap_sync_channel_write_imgR_in_cols_c62_channel and ap_sync_channel_write_imgL_in_rows_c59_channel and ap_sync_channel_write_imgL_in_cols_c60_channel and ap_sync_channel_write_bmState_uniquenessRatio and ap_sync_channel_write_bmState_textureThreshold and ap_sync_channel_write_bmState_preFilterCap);
    Block_for_end72_proc_U0_ap_start <= ((ap_sync_reg_Block_for_end72_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    ConvertShiftAbs_U0_ap_continue <= ap_const_logic_1;
    ConvertShiftAbs_U0_ap_start <= start_for_ConvertShiftAbs_U0_empty_n;
    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_continue <= ap_const_logic_1;
    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_start <= (mapxRMat_rows_empty_n and mapxRMat_cols_empty_n and irA_r_fix_t_empty_n and distC_r_fix_t_empty_n and cameraMA_r_fix_t_empty_n);
    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_continue <= ap_const_logic_1;
    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_start <= (mapxLMat_rows_empty_n and mapxLMat_cols_empty_n and irA_l_fix_t_empty_n and distC_l_fix_t_empty_n and cameraMA_l_fix_t_empty_n);
    Loop_VITIS_LOOP_46_1_proc_U0_ap_continue <= (ap_sync_channel_write_irA_r_fix and ap_sync_channel_write_irA_l_fix and ap_sync_channel_write_cameraMA_r_fix and ap_sync_channel_write_cameraMA_l_fix);
    Loop_VITIS_LOOP_46_1_proc_U0_ap_start <= ((ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_full_n <= cameraMA_l_fix_i_full_n;
    Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_full_n <= cameraMA_r_fix_i_full_n;
    Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_full_n <= irA_l_fix_i_full_n;
    Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_full_n <= irA_r_fix_i_full_n;
    Loop_VITIS_LOOP_55_2_proc_U0_ap_continue <= (ap_sync_channel_write_distC_r_fix and ap_sync_channel_write_distC_l_fix);
    Loop_VITIS_LOOP_55_2_proc_U0_ap_start <= ((ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_full_n <= distC_l_fix_i_full_n;
    Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_full_n <= distC_r_fix_i_full_n;
    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_continue <= ap_const_logic_1;
    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_start <= (rightRemappedMat_rows_empty_n and rightRemappedMat_cols_empty_n and leftRemappedMat_rows_empty_n and leftRemappedMat_cols_empty_n and bmState_uniquenessRatio_empty_n and bmState_textureThreshold_empty_n and bmState_preFilterCap_empty_n);
    ap_channel_done_bmState_preFilterCap <= ((ap_sync_reg_channel_write_bmState_preFilterCap xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_bmState_textureThreshold <= ((ap_sync_reg_channel_write_bmState_textureThreshold xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_bmState_uniquenessRatio <= ((ap_sync_reg_channel_write_bmState_uniquenessRatio xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_cameraMA_l_fix <= ((ap_sync_reg_channel_write_cameraMA_l_fix xor ap_const_logic_1) and Loop_VITIS_LOOP_46_1_proc_U0_ap_done);
    ap_channel_done_cameraMA_r_fix <= ((ap_sync_reg_channel_write_cameraMA_r_fix xor ap_const_logic_1) and Loop_VITIS_LOOP_46_1_proc_U0_ap_done);
    ap_channel_done_distC_l_fix <= ((ap_sync_reg_channel_write_distC_l_fix xor ap_const_logic_1) and Loop_VITIS_LOOP_55_2_proc_U0_ap_done);
    ap_channel_done_distC_r_fix <= ((ap_sync_reg_channel_write_distC_r_fix xor ap_const_logic_1) and Loop_VITIS_LOOP_55_2_proc_U0_ap_done);
    ap_channel_done_imgL_in_cols_c60_channel <= ((ap_sync_reg_channel_write_imgL_in_cols_c60_channel xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_imgL_in_rows_c59_channel <= ((ap_sync_reg_channel_write_imgL_in_rows_c59_channel xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_imgR_in_cols_c62_channel <= ((ap_sync_reg_channel_write_imgR_in_cols_c62_channel xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_imgR_in_rows_c61_channel <= ((ap_sync_reg_channel_write_imgR_in_rows_c61_channel xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_img_disp8u_cols <= ((ap_sync_reg_channel_write_img_disp8u_cols xor ap_const_logic_1) and Block_for_end7235_proc_U0_ap_done);
    ap_channel_done_img_disp8u_dilate_cols <= ((ap_sync_reg_channel_write_img_disp8u_dilate_cols xor ap_const_logic_1) and Block_for_end7239_proc_U0_ap_done);
    ap_channel_done_img_disp8u_dilate_rows <= ((ap_sync_reg_channel_write_img_disp8u_dilate_rows xor ap_const_logic_1) and Block_for_end7239_proc_U0_ap_done);
    ap_channel_done_img_disp8u_erode_cols <= ((ap_sync_reg_channel_write_img_disp8u_erode_cols xor ap_const_logic_1) and Block_for_end7237_proc_U0_ap_done);
    ap_channel_done_img_disp8u_erode_rows <= ((ap_sync_reg_channel_write_img_disp8u_erode_rows xor ap_const_logic_1) and Block_for_end7237_proc_U0_ap_done);
    ap_channel_done_img_disp8u_rows <= ((ap_sync_reg_channel_write_img_disp8u_rows xor ap_const_logic_1) and Block_for_end7235_proc_U0_ap_done);
    ap_channel_done_irA_l_fix <= ((ap_sync_reg_channel_write_irA_l_fix xor ap_const_logic_1) and Loop_VITIS_LOOP_46_1_proc_U0_ap_done);
    ap_channel_done_irA_r_fix <= ((ap_sync_reg_channel_write_irA_r_fix xor ap_const_logic_1) and Loop_VITIS_LOOP_46_1_proc_U0_ap_done);
    ap_channel_done_leftRemappedMat_cols <= ((ap_sync_reg_channel_write_leftRemappedMat_cols xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_leftRemappedMat_rows <= ((ap_sync_reg_channel_write_leftRemappedMat_rows xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_mapxLMat_cols <= ((ap_sync_reg_channel_write_mapxLMat_cols xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_mapxLMat_rows <= ((ap_sync_reg_channel_write_mapxLMat_rows xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_mapxRMat_cols <= ((ap_sync_reg_channel_write_mapxRMat_cols xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_mapxRMat_rows <= ((ap_sync_reg_channel_write_mapxRMat_rows xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_rightRemappedMat_cols <= ((ap_sync_reg_channel_write_rightRemappedMat_cols xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_channel_done_rightRemappedMat_rows <= ((ap_sync_reg_channel_write_rightRemappedMat_rows xor ap_const_logic_1) and Block_for_end72_proc_U0_ap_done);
    ap_done <= xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_done;
    ap_idle <= (xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_idle and remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_idle and remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_idle and (bmState_textureThreshold_empty_n xor ap_const_logic_1) and (bmState_uniquenessRatio_empty_n xor ap_const_logic_1) and (bmState_preFilterCap_empty_n xor ap_const_logic_1) and (imgR_in_cols_c62_channel_empty_n xor ap_const_logic_1) and (imgR_in_rows_c61_channel_empty_n xor ap_const_logic_1) and (imgL_in_cols_c60_channel_empty_n xor ap_const_logic_1) and (imgL_in_rows_c59_channel_empty_n xor ap_const_logic_1) and (mapxRMat_cols_empty_n xor ap_const_logic_1) and (mapxRMat_rows_empty_n xor ap_const_logic_1) and (mapxLMat_cols_empty_n xor ap_const_logic_1) and (mapxLMat_rows_empty_n xor ap_const_logic_1) and (distC_l_fix_t_empty_n xor ap_const_logic_1) and (distC_r_fix_t_empty_n xor ap_const_logic_1) and (cameraMA_l_fix_t_empty_n xor ap_const_logic_1) and (cameraMA_r_fix_t_empty_n xor ap_const_logic_1) and (irA_l_fix_t_empty_n xor ap_const_logic_1) and (irA_r_fix_t_empty_n 
    xor ap_const_logic_1) and (img_disp8u_dilate_cols_empty_n xor ap_const_logic_1) and (img_disp8u_dilate_rows_empty_n xor ap_const_logic_1) and (img_disp8u_erode_cols_empty_n xor ap_const_logic_1) and (img_disp8u_erode_rows_empty_n xor ap_const_logic_1) and (img_disp8u_cols_empty_n xor ap_const_logic_1) and (img_disp8u_rows_empty_n xor ap_const_logic_1) and (rightRemappedMat_cols_empty_n xor ap_const_logic_1) and (rightRemappedMat_rows_empty_n xor ap_const_logic_1) and (leftRemappedMat_cols_empty_n xor ap_const_logic_1) and (leftRemappedMat_rows_empty_n xor ap_const_logic_1) and erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle and dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle and StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_idle and Loop_VITIS_LOOP_55_2_proc_U0_ap_idle and Loop_VITIS_LOOP_46_1_proc_U0_ap_idle and InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_idle and InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_idle and ConvertShiftAbs_U0_ap_idle and Block_for_end72_proc_U0_ap_idle and Block_for_end7239_proc_U0_ap_idle 
    and Block_for_end7237_proc_U0_ap_idle and Block_for_end7235_proc_U0_ap_idle and AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_idle and AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_Block_for_end7235_proc_U0_ap_ready <= (ap_sync_reg_Block_for_end7235_proc_U0_ap_ready or Block_for_end7235_proc_U0_ap_ready);
    ap_sync_Block_for_end7237_proc_U0_ap_ready <= (ap_sync_reg_Block_for_end7237_proc_U0_ap_ready or Block_for_end7237_proc_U0_ap_ready);
    ap_sync_Block_for_end7239_proc_U0_ap_ready <= (ap_sync_reg_Block_for_end7239_proc_U0_ap_ready or Block_for_end7239_proc_U0_ap_ready);
    ap_sync_Block_for_end72_proc_U0_ap_ready <= (ap_sync_reg_Block_for_end72_proc_U0_ap_ready or Block_for_end72_proc_U0_ap_ready);
    ap_sync_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready <= (ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready or Loop_VITIS_LOOP_46_1_proc_U0_ap_ready);
    ap_sync_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready <= (ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready or Loop_VITIS_LOOP_55_2_proc_U0_ap_ready);
    ap_sync_channel_write_bmState_preFilterCap <= ((bmState_preFilterCap_full_n and ap_channel_done_bmState_preFilterCap) or ap_sync_reg_channel_write_bmState_preFilterCap);
    ap_sync_channel_write_bmState_textureThreshold <= ((bmState_textureThreshold_full_n and ap_channel_done_bmState_textureThreshold) or ap_sync_reg_channel_write_bmState_textureThreshold);
    ap_sync_channel_write_bmState_uniquenessRatio <= ((bmState_uniquenessRatio_full_n and ap_channel_done_bmState_uniquenessRatio) or ap_sync_reg_channel_write_bmState_uniquenessRatio);
    ap_sync_channel_write_cameraMA_l_fix <= ((ap_channel_done_cameraMA_l_fix and Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_full_n) or ap_sync_reg_channel_write_cameraMA_l_fix);
    ap_sync_channel_write_cameraMA_r_fix <= ((ap_channel_done_cameraMA_r_fix and Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_full_n) or ap_sync_reg_channel_write_cameraMA_r_fix);
    ap_sync_channel_write_distC_l_fix <= ((ap_channel_done_distC_l_fix and Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_full_n) or ap_sync_reg_channel_write_distC_l_fix);
    ap_sync_channel_write_distC_r_fix <= ((ap_channel_done_distC_r_fix and Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_full_n) or ap_sync_reg_channel_write_distC_r_fix);
    ap_sync_channel_write_imgL_in_cols_c60_channel <= ((imgL_in_cols_c60_channel_full_n and ap_channel_done_imgL_in_cols_c60_channel) or ap_sync_reg_channel_write_imgL_in_cols_c60_channel);
    ap_sync_channel_write_imgL_in_rows_c59_channel <= ((imgL_in_rows_c59_channel_full_n and ap_channel_done_imgL_in_rows_c59_channel) or ap_sync_reg_channel_write_imgL_in_rows_c59_channel);
    ap_sync_channel_write_imgR_in_cols_c62_channel <= ((imgR_in_cols_c62_channel_full_n and ap_channel_done_imgR_in_cols_c62_channel) or ap_sync_reg_channel_write_imgR_in_cols_c62_channel);
    ap_sync_channel_write_imgR_in_rows_c61_channel <= ((imgR_in_rows_c61_channel_full_n and ap_channel_done_imgR_in_rows_c61_channel) or ap_sync_reg_channel_write_imgR_in_rows_c61_channel);
    ap_sync_channel_write_img_disp8u_cols <= ((img_disp8u_cols_full_n and ap_channel_done_img_disp8u_cols) or ap_sync_reg_channel_write_img_disp8u_cols);
    ap_sync_channel_write_img_disp8u_dilate_cols <= ((img_disp8u_dilate_cols_full_n and ap_channel_done_img_disp8u_dilate_cols) or ap_sync_reg_channel_write_img_disp8u_dilate_cols);
    ap_sync_channel_write_img_disp8u_dilate_rows <= ((img_disp8u_dilate_rows_full_n and ap_channel_done_img_disp8u_dilate_rows) or ap_sync_reg_channel_write_img_disp8u_dilate_rows);
    ap_sync_channel_write_img_disp8u_erode_cols <= ((img_disp8u_erode_cols_full_n and ap_channel_done_img_disp8u_erode_cols) or ap_sync_reg_channel_write_img_disp8u_erode_cols);
    ap_sync_channel_write_img_disp8u_erode_rows <= ((img_disp8u_erode_rows_full_n and ap_channel_done_img_disp8u_erode_rows) or ap_sync_reg_channel_write_img_disp8u_erode_rows);
    ap_sync_channel_write_img_disp8u_rows <= ((img_disp8u_rows_full_n and ap_channel_done_img_disp8u_rows) or ap_sync_reg_channel_write_img_disp8u_rows);
    ap_sync_channel_write_irA_l_fix <= ((ap_channel_done_irA_l_fix and Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_full_n) or ap_sync_reg_channel_write_irA_l_fix);
    ap_sync_channel_write_irA_r_fix <= ((ap_channel_done_irA_r_fix and Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_full_n) or ap_sync_reg_channel_write_irA_r_fix);
    ap_sync_channel_write_leftRemappedMat_cols <= ((leftRemappedMat_cols_full_n and ap_channel_done_leftRemappedMat_cols) or ap_sync_reg_channel_write_leftRemappedMat_cols);
    ap_sync_channel_write_leftRemappedMat_rows <= ((leftRemappedMat_rows_full_n and ap_channel_done_leftRemappedMat_rows) or ap_sync_reg_channel_write_leftRemappedMat_rows);
    ap_sync_channel_write_mapxLMat_cols <= ((mapxLMat_cols_full_n and ap_channel_done_mapxLMat_cols) or ap_sync_reg_channel_write_mapxLMat_cols);
    ap_sync_channel_write_mapxLMat_rows <= ((mapxLMat_rows_full_n and ap_channel_done_mapxLMat_rows) or ap_sync_reg_channel_write_mapxLMat_rows);
    ap_sync_channel_write_mapxRMat_cols <= ((mapxRMat_cols_full_n and ap_channel_done_mapxRMat_cols) or ap_sync_reg_channel_write_mapxRMat_cols);
    ap_sync_channel_write_mapxRMat_rows <= ((mapxRMat_rows_full_n and ap_channel_done_mapxRMat_rows) or ap_sync_reg_channel_write_mapxRMat_rows);
    ap_sync_channel_write_rightRemappedMat_cols <= ((rightRemappedMat_cols_full_n and ap_channel_done_rightRemappedMat_cols) or ap_sync_reg_channel_write_rightRemappedMat_cols);
    ap_sync_channel_write_rightRemappedMat_rows <= ((rightRemappedMat_rows_full_n and ap_channel_done_rightRemappedMat_rows) or ap_sync_reg_channel_write_rightRemappedMat_rows);
    ap_sync_ready <= (ap_sync_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready and ap_sync_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready and ap_sync_Block_for_end72_proc_U0_ap_ready and ap_sync_Block_for_end7239_proc_U0_ap_ready and ap_sync_Block_for_end7237_proc_U0_ap_ready and ap_sync_Block_for_end7235_proc_U0_ap_ready);
    dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue <= ap_const_logic_1;
    dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start <= (img_disp8u_erode_rows_empty_n and img_disp8u_erode_cols_empty_n);
    erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue <= ap_const_logic_1;
    erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start <= (img_disp8u_rows_empty_n and img_disp8u_cols_empty_n);
    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_continue <= ap_const_logic_1;
    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_start <= start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_empty_n;
    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_continue <= ap_const_logic_1;
    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_start <= start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_empty_n;
    start_for_ConvertShiftAbs_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    vid_inL_TREADY <= AXIvideo2xfMat_8_0_600_800_1_2_1_U0_vid_inL_TREADY;
    vid_inR_TREADY <= AXIvideo2xfMat_8_0_600_800_1_2_U0_vid_inR_TREADY;
    vid_out_TDATA <= xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDATA;
    vid_out_TDEST <= xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDEST;
    vid_out_TID <= xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TID;
    vid_out_TKEEP <= xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TKEEP;
    vid_out_TLAST <= xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TLAST;
    vid_out_TSTRB <= xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TSTRB;
    vid_out_TUSER <= xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TUSER;
    vid_out_TVALID <= xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TVALID;
    xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_continue <= ap_const_logic_1;
    xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_start <= (img_disp8u_dilate_rows_empty_n and img_disp8u_dilate_cols_empty_n);
end behav;
