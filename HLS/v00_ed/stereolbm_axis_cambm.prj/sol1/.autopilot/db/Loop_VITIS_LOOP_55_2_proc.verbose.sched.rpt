

================================================================
== Vitis HLS Report for 'Loop_VITIS_LOOP_55_2_proc'
================================================================
* Date:           Tue Jun 24 19:14:41 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        stereolbm_axis_cambm.prj
* Solution:       sol1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.758 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       11|       11|  0.110 us|  0.110 us|   11|   11|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_55_2  |        9|        9|         6|          1|          1|     5|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 1, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.23>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.58ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.cond56"   --->   Operation 11 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%i_13 = load i3 %i" [xf_stereolbm_accel.cpp:55]   --->   Operation 12 'load' 'i_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.65ns)   --->   "%icmp_ln55 = icmp_eq  i3 %i_13, i3 5" [xf_stereolbm_accel.cpp:55]   --->   Operation 13 'icmp' 'icmp_ln55' <Predicate = true> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (1.65ns)   --->   "%add_ln55 = add i3 %i_13, i3 1" [xf_stereolbm_accel.cpp:55]   --->   Operation 14 'add' 'add_ln55' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln55 = br i1 %icmp_ln55, void %for.inc70_ifconv, void %for.end72.exitStub" [xf_stereolbm_accel.cpp:55]   --->   Operation 15 'br' 'br_ln55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i3 %i_13" [xf_stereolbm_accel.cpp:55]   --->   Operation 16 'zext' 'zext_ln55' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%distC_l_addr = getelementptr i32 %distC_l, i64 0, i64 %zext_ln55" [xf_stereolbm_accel.cpp:59]   --->   Operation 17 'getelementptr' 'distC_l_addr' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 18 [2/2] (2.32ns)   --->   "%distC_l_load = load i3 %distC_l_addr" [xf_stereolbm_accel.cpp:59]   --->   Operation 18 'load' 'distC_l_load' <Predicate = (!icmp_ln55)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 5> <ROM>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%distC_r_addr = getelementptr i32 %distC_r, i64 0, i64 %zext_ln55" [xf_stereolbm_accel.cpp:60]   --->   Operation 19 'getelementptr' 'distC_r_addr' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 20 [2/2] (2.32ns)   --->   "%distC_r_load = load i3 %distC_r_addr" [xf_stereolbm_accel.cpp:60]   --->   Operation 20 'load' 'distC_r_load' <Predicate = (!icmp_ln55)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 5> <ROM>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln55 = store i3 %add_ln55, i3 %i" [xf_stereolbm_accel.cpp:55]   --->   Operation 21 'store' 'store_ln55' <Predicate = (!icmp_ln55)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 6.75>
ST_2 : Operation 22 [1/2] (2.32ns)   --->   "%distC_l_load = load i3 %distC_l_addr" [xf_stereolbm_accel.cpp:59]   --->   Operation 22 'load' 'distC_l_load' <Predicate = true> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 5> <ROM>
ST_2 : [1/1] (1.58ns)   --->   Input mux for Operation 23 '%pf = fpext i32 %distC_l_load'
ST_2 : Operation 23 [2/2] (2.84ns)   --->   "%pf = fpext i32 %distC_l_load" [xf_stereolbm_accel.cpp:59]   --->   Operation 23 'fpext' 'pf' <Predicate = true> <Delay = 2.84> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 24 [1/2] (2.32ns)   --->   "%distC_r_load = load i3 %distC_r_addr" [xf_stereolbm_accel.cpp:60]   --->   Operation 24 'load' 'distC_r_load' <Predicate = true> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 5> <ROM>
ST_2 : [1/1] (1.58ns)   --->   Input mux for Operation 25 '%pf_1 = fpext i32 %distC_r_load'
ST_2 : Operation 25 [2/2] (2.84ns)   --->   "%pf_1 = fpext i32 %distC_r_load" [xf_stereolbm_accel.cpp:60]   --->   Operation 25 'fpext' 'pf_1' <Predicate = true> <Delay = 2.84> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 3 <SV = 2> <Delay = 4.43>
ST_3 : Operation 26 [1/2] (4.43ns)   --->   "%pf = fpext i32 %distC_l_load" [xf_stereolbm_accel.cpp:59]   --->   Operation 26 'fpext' 'pf' <Predicate = true> <Delay = 4.43> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%bitcast_ln724 = bitcast i64 %pf" [xf_stereolbm_accel.cpp:59]   --->   Operation 27 'bitcast' 'bitcast_ln724' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln59 = trunc i64 %bitcast_ln724" [xf_stereolbm_accel.cpp:59]   --->   Operation 28 'trunc' 'trunc_ln59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %bitcast_ln724, i32 63" [xf_stereolbm_accel.cpp:59]   --->   Operation 29 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_s = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %bitcast_ln724, i32 52, i32 62" [xf_stereolbm_accel.cpp:59]   --->   Operation 30 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln59_1 = trunc i64 %bitcast_ln724" [xf_stereolbm_accel.cpp:59]   --->   Operation 31 'trunc' 'trunc_ln59_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/2] (4.43ns)   --->   "%pf_1 = fpext i32 %distC_r_load" [xf_stereolbm_accel.cpp:60]   --->   Operation 32 'fpext' 'pf_1' <Predicate = true> <Delay = 4.43> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%bitcast_ln724_2 = bitcast i64 %pf_1" [xf_stereolbm_accel.cpp:60]   --->   Operation 33 'bitcast' 'bitcast_ln724_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln60 = trunc i64 %bitcast_ln724_2" [xf_stereolbm_accel.cpp:60]   --->   Operation 34 'trunc' 'trunc_ln60' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_306 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %bitcast_ln724_2, i32 63" [xf_stereolbm_accel.cpp:60]   --->   Operation 35 'bitselect' 'tmp_306' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_15 = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %bitcast_ln724_2, i32 52, i32 62" [xf_stereolbm_accel.cpp:60]   --->   Operation 36 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln60_1 = trunc i64 %bitcast_ln724_2" [xf_stereolbm_accel.cpp:60]   --->   Operation 37 'trunc' 'trunc_ln60_1' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.66>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i11 %tmp_s" [xf_stereolbm_accel.cpp:59]   --->   Operation 38 'zext' 'zext_ln59' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln59_1_cast = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln59_1" [xf_stereolbm_accel.cpp:59]   --->   Operation 39 'bitconcatenate' 'zext_ln59_1_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln59_1 = zext i53 %zext_ln59_1_cast" [xf_stereolbm_accel.cpp:59]   --->   Operation 40 'zext' 'zext_ln59_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (3.23ns)   --->   "%sub_ln59 = sub i54 0, i54 %zext_ln59_1" [xf_stereolbm_accel.cpp:59]   --->   Operation 41 'sub' 'sub_ln59' <Predicate = (tmp)> <Delay = 3.23> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.23> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (0.94ns)   --->   "%select_ln59 = select i1 %tmp, i54 %sub_ln59, i54 %zext_ln59_1" [xf_stereolbm_accel.cpp:59]   --->   Operation 42 'select' 'select_ln59' <Predicate = true> <Delay = 0.94> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (3.49ns)   --->   "%icmp_ln59 = icmp_eq  i63 %trunc_ln59, i63 0" [xf_stereolbm_accel.cpp:59]   --->   Operation 43 'icmp' 'icmp_ln59' <Predicate = true> <Delay = 3.49> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (1.54ns)   --->   "%sub_ln59_1 = sub i12 1075, i12 %zext_ln59" [xf_stereolbm_accel.cpp:59]   --->   Operation 44 'sub' 'sub_ln59_1' <Predicate = true> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (1.54ns)   --->   "%icmp_ln59_1 = icmp_sgt  i12 %sub_ln59_1, i12 20" [xf_stereolbm_accel.cpp:59]   --->   Operation 45 'icmp' 'icmp_ln59_1' <Predicate = true> <Delay = 1.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 46 [1/1] (1.54ns)   --->   "%add_ln59 = add i12 %sub_ln59_1, i12 4076" [xf_stereolbm_accel.cpp:59]   --->   Operation 46 'add' 'add_ln59' <Predicate = true> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (1.54ns)   --->   "%sub_ln59_2 = sub i12 20, i12 %sub_ln59_1" [xf_stereolbm_accel.cpp:59]   --->   Operation 47 'sub' 'sub_ln59_2' <Predicate = true> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.69ns)   --->   "%select_ln59_1 = select i1 %icmp_ln59_1, i12 %add_ln59, i12 %sub_ln59_2" [xf_stereolbm_accel.cpp:59]   --->   Operation 48 'select' 'select_ln59_1' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (1.54ns)   --->   "%icmp_ln59_2 = icmp_eq  i12 %sub_ln59_1, i12 20" [xf_stereolbm_accel.cpp:59]   --->   Operation 49 'icmp' 'icmp_ln59_2' <Predicate = true> <Delay = 1.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln59_2 = trunc i54 %select_ln59" [xf_stereolbm_accel.cpp:59]   --->   Operation 50 'trunc' 'trunc_ln59_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_305 = partselect i7 @_ssdm_op_PartSelect.i7.i12.i32.i32, i12 %select_ln59_1, i32 5, i32 11" [xf_stereolbm_accel.cpp:59]   --->   Operation 51 'partselect' 'tmp_305' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (1.87ns)   --->   "%icmp_ln59_4 = icmp_eq  i7 %tmp_305, i7 0" [xf_stereolbm_accel.cpp:59]   --->   Operation 52 'icmp' 'icmp_ln59_4' <Predicate = true> <Delay = 1.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i11 %tmp_15" [xf_stereolbm_accel.cpp:60]   --->   Operation 53 'zext' 'zext_ln60' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln60_1_cast = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln60_1" [xf_stereolbm_accel.cpp:60]   --->   Operation 54 'bitconcatenate' 'zext_ln60_1_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i53 %zext_ln60_1_cast" [xf_stereolbm_accel.cpp:60]   --->   Operation 55 'zext' 'zext_ln60_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (3.23ns)   --->   "%sub_ln60 = sub i54 0, i54 %zext_ln60_1" [xf_stereolbm_accel.cpp:60]   --->   Operation 56 'sub' 'sub_ln60' <Predicate = (tmp_306)> <Delay = 3.23> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.23> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.94ns)   --->   "%select_ln60 = select i1 %tmp_306, i54 %sub_ln60, i54 %zext_ln60_1" [xf_stereolbm_accel.cpp:60]   --->   Operation 57 'select' 'select_ln60' <Predicate = true> <Delay = 0.94> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (3.49ns)   --->   "%icmp_ln60 = icmp_eq  i63 %trunc_ln60, i63 0" [xf_stereolbm_accel.cpp:60]   --->   Operation 58 'icmp' 'icmp_ln60' <Predicate = true> <Delay = 3.49> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (1.54ns)   --->   "%sub_ln60_1 = sub i12 1075, i12 %zext_ln60" [xf_stereolbm_accel.cpp:60]   --->   Operation 59 'sub' 'sub_ln60_1' <Predicate = true> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (1.54ns)   --->   "%icmp_ln60_1 = icmp_sgt  i12 %sub_ln60_1, i12 20" [xf_stereolbm_accel.cpp:60]   --->   Operation 60 'icmp' 'icmp_ln60_1' <Predicate = true> <Delay = 1.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (1.54ns)   --->   "%add_ln60 = add i12 %sub_ln60_1, i12 4076" [xf_stereolbm_accel.cpp:60]   --->   Operation 61 'add' 'add_ln60' <Predicate = true> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (1.54ns)   --->   "%sub_ln60_2 = sub i12 20, i12 %sub_ln60_1" [xf_stereolbm_accel.cpp:60]   --->   Operation 62 'sub' 'sub_ln60_2' <Predicate = true> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.69ns)   --->   "%select_ln60_1 = select i1 %icmp_ln60_1, i12 %add_ln60, i12 %sub_ln60_2" [xf_stereolbm_accel.cpp:60]   --->   Operation 63 'select' 'select_ln60_1' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (1.54ns)   --->   "%icmp_ln60_2 = icmp_eq  i12 %sub_ln60_1, i12 20" [xf_stereolbm_accel.cpp:60]   --->   Operation 64 'icmp' 'icmp_ln60_2' <Predicate = true> <Delay = 1.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln60_2 = trunc i54 %select_ln60" [xf_stereolbm_accel.cpp:60]   --->   Operation 65 'trunc' 'trunc_ln60_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_308 = partselect i7 @_ssdm_op_PartSelect.i7.i12.i32.i32, i12 %select_ln60_1, i32 5, i32 11" [xf_stereolbm_accel.cpp:60]   --->   Operation 66 'partselect' 'tmp_308' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (1.87ns)   --->   "%icmp_ln60_4 = icmp_eq  i7 %tmp_308, i7 0" [xf_stereolbm_accel.cpp:60]   --->   Operation 67 'icmp' 'icmp_ln60_4' <Predicate = true> <Delay = 1.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.39>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%sext_ln59 = sext i12 %select_ln59_1" [xf_stereolbm_accel.cpp:59]   --->   Operation 68 'sext' 'sext_ln59' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (1.54ns)   --->   "%icmp_ln59_3 = icmp_ult  i12 %select_ln59_1, i12 54" [xf_stereolbm_accel.cpp:59]   --->   Operation 69 'icmp' 'icmp_ln59_3' <Predicate = true> <Delay = 1.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln59_2 = zext i32 %sext_ln59" [xf_stereolbm_accel.cpp:59]   --->   Operation 70 'zext' 'zext_ln59_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (4.61ns)   --->   "%ashr_ln59 = ashr i54 %select_ln59, i54 %zext_ln59_2" [xf_stereolbm_accel.cpp:59]   --->   Operation 71 'ashr' 'ashr_ln59' <Predicate = true> <Delay = 4.61> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.61> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node select_ln59_6)   --->   "%trunc_ln59_3 = trunc i54 %ashr_ln59" [xf_stereolbm_accel.cpp:59]   --->   Operation 72 'trunc' 'trunc_ln59_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node select_ln59_6)   --->   "%bitcast_ln724_1 = bitcast i32 %distC_l_load" [xf_stereolbm_accel.cpp:59]   --->   Operation 73 'bitcast' 'bitcast_ln724_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node select_ln59_6)   --->   "%tmp_304 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %bitcast_ln724_1, i32 31" [xf_stereolbm_accel.cpp:59]   --->   Operation 74 'bitselect' 'tmp_304' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node select_ln59_6)   --->   "%select_ln59_7 = select i1 %tmp_304, i32 4294967295, i32 0" [xf_stereolbm_accel.cpp:59]   --->   Operation 75 'select' 'select_ln59_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node select_ln59_6)   --->   "%select_ln59_2 = select i1 %icmp_ln59_3, i32 %trunc_ln59_3, i32 %select_ln59_7" [xf_stereolbm_accel.cpp:59]   --->   Operation 76 'select' 'select_ln59_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 77 [1/1] (4.42ns)   --->   "%shl_ln59 = shl i32 %trunc_ln59_2, i32 %sext_ln59" [xf_stereolbm_accel.cpp:59]   --->   Operation 77 'shl' 'shl_ln59' <Predicate = (!icmp_ln59 & icmp_ln59_4)> <Delay = 4.42> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node select_ln59_5)   --->   "%select_ln59_3 = select i1 %icmp_ln59_4, i32 %shl_ln59, i32 0" [xf_stereolbm_accel.cpp:59]   --->   Operation 78 'select' 'select_ln59_3' <Predicate = (!icmp_ln59)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln59_5)   --->   "%select_ln59_4 = select i1 %icmp_ln59, i32 0, i32 %select_ln59_3" [xf_stereolbm_accel.cpp:59]   --->   Operation 79 'select' 'select_ln59_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node select_ln59_5)   --->   "%xor_ln59 = xor i1 %icmp_ln59, i1 1" [xf_stereolbm_accel.cpp:59]   --->   Operation 80 'xor' 'xor_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node select_ln59_5)   --->   "%and_ln59 = and i1 %icmp_ln59_2, i1 %xor_ln59" [xf_stereolbm_accel.cpp:59]   --->   Operation 81 'and' 'and_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln59_5 = select i1 %and_ln59, i32 %trunc_ln59_2, i32 %select_ln59_4" [xf_stereolbm_accel.cpp:59]   --->   Operation 82 'select' 'select_ln59_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_1)   --->   "%or_ln59 = or i1 %icmp_ln59, i1 %icmp_ln59_2" [xf_stereolbm_accel.cpp:59]   --->   Operation 83 'or' 'or_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_1)   --->   "%xor_ln59_1 = xor i1 %or_ln59, i1 1" [xf_stereolbm_accel.cpp:59]   --->   Operation 84 'xor' 'xor_ln59_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln59_1 = and i1 %icmp_ln59_1, i1 %xor_ln59_1" [xf_stereolbm_accel.cpp:59]   --->   Operation 85 'and' 'and_ln59_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 86 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln59_6 = select i1 %and_ln59_1, i32 %select_ln59_2, i32 %select_ln59_5" [xf_stereolbm_accel.cpp:59]   --->   Operation 86 'select' 'select_ln59_6' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%sext_ln60 = sext i12 %select_ln60_1" [xf_stereolbm_accel.cpp:60]   --->   Operation 87 'sext' 'sext_ln60' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (1.54ns)   --->   "%icmp_ln60_3 = icmp_ult  i12 %select_ln60_1, i12 54" [xf_stereolbm_accel.cpp:60]   --->   Operation 88 'icmp' 'icmp_ln60_3' <Predicate = true> <Delay = 1.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln60_2 = zext i32 %sext_ln60" [xf_stereolbm_accel.cpp:60]   --->   Operation 89 'zext' 'zext_ln60_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (4.61ns)   --->   "%ashr_ln60 = ashr i54 %select_ln60, i54 %zext_ln60_2" [xf_stereolbm_accel.cpp:60]   --->   Operation 90 'ashr' 'ashr_ln60' <Predicate = true> <Delay = 4.61> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.61> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_6)   --->   "%trunc_ln60_3 = trunc i54 %ashr_ln60" [xf_stereolbm_accel.cpp:60]   --->   Operation 91 'trunc' 'trunc_ln60_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_6)   --->   "%bitcast_ln724_3 = bitcast i32 %distC_r_load" [xf_stereolbm_accel.cpp:60]   --->   Operation 92 'bitcast' 'bitcast_ln724_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_6)   --->   "%tmp_307 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %bitcast_ln724_3, i32 31" [xf_stereolbm_accel.cpp:60]   --->   Operation 93 'bitselect' 'tmp_307' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_6)   --->   "%select_ln60_7 = select i1 %tmp_307, i32 4294967295, i32 0" [xf_stereolbm_accel.cpp:60]   --->   Operation 94 'select' 'select_ln60_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_6)   --->   "%select_ln60_2 = select i1 %icmp_ln60_3, i32 %trunc_ln60_3, i32 %select_ln60_7" [xf_stereolbm_accel.cpp:60]   --->   Operation 95 'select' 'select_ln60_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 96 [1/1] (4.42ns)   --->   "%shl_ln60 = shl i32 %trunc_ln60_2, i32 %sext_ln60" [xf_stereolbm_accel.cpp:60]   --->   Operation 96 'shl' 'shl_ln60' <Predicate = (!icmp_ln60 & icmp_ln60_4)> <Delay = 4.42> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_5)   --->   "%select_ln60_3 = select i1 %icmp_ln60_4, i32 %shl_ln60, i32 0" [xf_stereolbm_accel.cpp:60]   --->   Operation 97 'select' 'select_ln60_3' <Predicate = (!icmp_ln60)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_5)   --->   "%select_ln60_4 = select i1 %icmp_ln60, i32 0, i32 %select_ln60_3" [xf_stereolbm_accel.cpp:60]   --->   Operation 98 'select' 'select_ln60_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_5)   --->   "%xor_ln60 = xor i1 %icmp_ln60, i1 1" [xf_stereolbm_accel.cpp:60]   --->   Operation 99 'xor' 'xor_ln60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_5)   --->   "%and_ln60 = and i1 %icmp_ln60_2, i1 %xor_ln60" [xf_stereolbm_accel.cpp:60]   --->   Operation 100 'and' 'and_ln60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 101 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln60_5 = select i1 %and_ln60, i32 %trunc_ln60_2, i32 %select_ln60_4" [xf_stereolbm_accel.cpp:60]   --->   Operation 101 'select' 'select_ln60_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node and_ln60_1)   --->   "%or_ln60 = or i1 %icmp_ln60, i1 %icmp_ln60_2" [xf_stereolbm_accel.cpp:60]   --->   Operation 102 'or' 'or_ln60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node and_ln60_1)   --->   "%xor_ln60_1 = xor i1 %or_ln60, i1 1" [xf_stereolbm_accel.cpp:60]   --->   Operation 103 'xor' 'xor_ln60_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 104 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln60_1 = and i1 %icmp_ln60_1, i1 %xor_ln60_1" [xf_stereolbm_accel.cpp:60]   --->   Operation 104 'and' 'and_ln60_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 105 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln60_6 = select i1 %and_ln60_1, i32 %select_ln60_2, i32 %select_ln60_5" [xf_stereolbm_accel.cpp:60]   --->   Operation 105 'select' 'select_ln60_6' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 114 'ret' 'ret_ln0' <Predicate = (icmp_ln55)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 2.32>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%specpipeline_ln57 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_84" [xf_stereolbm_accel.cpp:57]   --->   Operation 106 'specpipeline' 'specpipeline_ln57' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 107 [1/1] (0.00ns)   --->   "%speclooptripcount_ln59 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 5, i64 5, i64 5" [xf_stereolbm_accel.cpp:59]   --->   Operation 107 'speclooptripcount' 'speclooptripcount_ln59' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 108 [1/1] (0.00ns)   --->   "%specloopname_ln55 = specloopname void @_ssdm_op_SpecLoopName, void @empty_65" [xf_stereolbm_accel.cpp:55]   --->   Operation 108 'specloopname' 'specloopname_ln55' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 109 [1/1] (0.00ns)   --->   "%distC_l_fix_addr = getelementptr i32 %distC_l_fix, i64 0, i64 %zext_ln55" [xf_stereolbm_accel.cpp:59]   --->   Operation 109 'getelementptr' 'distC_l_fix_addr' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 110 [1/1] (2.32ns)   --->   "%store_ln59 = store i32 %select_ln59_6, i3 %distC_l_fix_addr" [xf_stereolbm_accel.cpp:59]   --->   Operation 110 'store' 'store_ln59' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_6 : Operation 111 [1/1] (0.00ns)   --->   "%distC_r_fix_addr = getelementptr i32 %distC_r_fix, i64 0, i64 %zext_ln55" [xf_stereolbm_accel.cpp:60]   --->   Operation 111 'getelementptr' 'distC_r_fix_addr' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 112 [1/1] (2.32ns)   --->   "%store_ln60 = store i32 %select_ln60_6, i3 %distC_r_fix_addr" [xf_stereolbm_accel.cpp:60]   --->   Operation 112 'store' 'store_ln60' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_6 : Operation 113 [1/1] (0.00ns)   --->   "%br_ln55 = br void %for.cond56" [xf_stereolbm_accel.cpp:55]   --->   Operation 113 'br' 'br_ln55' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.238ns
The critical path consists of the following:
	'alloca' operation ('i') [5]  (0.000 ns)
	'load' operation ('i', xf_stereolbm_accel.cpp:55) on local variable 'i' [9]  (0.000 ns)
	'add' operation ('add_ln55', xf_stereolbm_accel.cpp:55) [11]  (1.650 ns)
	'store' operation ('store_ln55', xf_stereolbm_accel.cpp:55) of variable 'add_ln55', xf_stereolbm_accel.cpp:55 on local variable 'i' [106]  (1.588 ns)

 <State 2>: 6.758ns
The critical path consists of the following:
	'load' operation ('distC_l_load', xf_stereolbm_accel.cpp:59) on array 'distC_l' [19]  (2.322 ns)
	multiplexor before operation 'fpext' with delay (1.588 ns)
'fpext' operation ('pf', xf_stereolbm_accel.cpp:59) [20]  (2.848 ns)

 <State 3>: 4.436ns
The critical path consists of the following:
	'fpext' operation ('pf', xf_stereolbm_accel.cpp:59) [20]  (4.436 ns)

 <State 4>: 5.661ns
The critical path consists of the following:
	'sub' operation ('sub_ln59_1', xf_stereolbm_accel.cpp:59) [32]  (1.547 ns)
	'icmp' operation ('icmp_ln59_1', xf_stereolbm_accel.cpp:59) [33]  (1.547 ns)
	'select' operation ('select_ln59_1', xf_stereolbm_accel.cpp:59) [36]  (0.697 ns)
	'icmp' operation ('icmp_ln59_4', xf_stereolbm_accel.cpp:59) [49]  (1.870 ns)

 <State 5>: 6.391ns
The critical path consists of the following:
	'shl' operation ('shl_ln59', xf_stereolbm_accel.cpp:59) [50]  (4.420 ns)
	'select' operation ('select_ln59_3', xf_stereolbm_accel.cpp:59) [51]  (0.000 ns)
	'select' operation ('select_ln59_4', xf_stereolbm_accel.cpp:59) [52]  (0.000 ns)
	'select' operation ('select_ln59_5', xf_stereolbm_accel.cpp:59) [55]  (0.978 ns)
	'select' operation ('select_ln59_6', xf_stereolbm_accel.cpp:59) [59]  (0.993 ns)

 <State 6>: 2.322ns
The critical path consists of the following:
	'getelementptr' operation ('distC_l_fix_addr', xf_stereolbm_accel.cpp:59) [60]  (0.000 ns)
	'store' operation ('store_ln59', xf_stereolbm_accel.cpp:59) of variable 'select_ln59_6', xf_stereolbm_accel.cpp:59 on array 'distC_l_fix' [61]  (2.322 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
