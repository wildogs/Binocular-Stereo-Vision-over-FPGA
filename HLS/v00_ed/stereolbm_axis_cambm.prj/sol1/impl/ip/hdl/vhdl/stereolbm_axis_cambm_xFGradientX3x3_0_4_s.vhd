-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stereolbm_axis_cambm_xFGradientX3x3_0_4_s is
port (
    ap_ready : OUT STD_LOGIC;
    t0_val : IN STD_LOGIC_VECTOR (7 downto 0);
    t2_val : IN STD_LOGIC_VECTOR (7 downto 0);
    m0_val : IN STD_LOGIC_VECTOR (7 downto 0);
    m2_val : IN STD_LOGIC_VECTOR (7 downto 0);
    b0_val : IN STD_LOGIC_VECTOR (7 downto 0);
    b2_val : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (10 downto 0) );
end;


architecture behav of stereolbm_axis_cambm_xFGradientX3x3_0_4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal M00_fu_54_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal M01_fu_66_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln61_1_fu_82_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln61_fu_78_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal A00_fu_86_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln62_1_fu_100_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln62_fu_96_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal S00_fu_104_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln60_fu_74_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln59_fu_62_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_pix_5_fu_114_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln66_fu_120_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln62_2_fu_110_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_pix_6_fu_124_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln61_2_fu_92_p1 : STD_LOGIC_VECTOR (10 downto 0);


begin



    A00_fu_86_p2 <= std_logic_vector(unsigned(zext_ln61_1_fu_82_p1) + unsigned(zext_ln61_fu_78_p1));
    M00_fu_54_p3 <= (m0_val & ap_const_lv1_0);
    M01_fu_66_p3 <= (m2_val & ap_const_lv1_0);
    S00_fu_104_p2 <= std_logic_vector(unsigned(zext_ln62_1_fu_100_p1) + unsigned(zext_ln62_fu_96_p1));
    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(out_pix_6_fu_124_p2) + unsigned(zext_ln61_2_fu_92_p1));
    out_pix_5_fu_114_p2 <= std_logic_vector(unsigned(zext_ln60_fu_74_p1) - unsigned(zext_ln59_fu_62_p1));
    out_pix_6_fu_124_p2 <= std_logic_vector(signed(sext_ln66_fu_120_p1) - signed(zext_ln62_2_fu_110_p1));
        sext_ln66_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_pix_5_fu_114_p2),11));

    zext_ln59_fu_62_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(M00_fu_54_p3),10));
    zext_ln60_fu_74_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(M01_fu_66_p3),10));
    zext_ln61_1_fu_82_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b2_val),9));
    zext_ln61_2_fu_92_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A00_fu_86_p2),11));
    zext_ln61_fu_78_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t2_val),9));
    zext_ln62_1_fu_100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b0_val),9));
    zext_ln62_2_fu_110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(S00_fu_104_p2),11));
    zext_ln62_fu_96_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t0_val),9));
end behav;
