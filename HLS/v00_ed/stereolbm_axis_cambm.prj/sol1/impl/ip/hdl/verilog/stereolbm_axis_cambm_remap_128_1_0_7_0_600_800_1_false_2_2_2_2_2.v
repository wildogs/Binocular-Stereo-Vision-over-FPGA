// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module stereolbm_axis_cambm_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2 (
        p_src_mat_rows_dout,
        p_src_mat_rows_empty_n,
        p_src_mat_rows_read,
        p_src_mat_cols_dout,
        p_src_mat_cols_empty_n,
        p_src_mat_cols_read,
        imgL_in_data_dout,
        imgL_in_data_empty_n,
        imgL_in_data_read,
        leftRemappedMat_data_din,
        leftRemappedMat_data_full_n,
        leftRemappedMat_data_write,
        mapxLMat_data_dout,
        mapxLMat_data_empty_n,
        mapxLMat_data_read,
        mapyLMat_data_dout,
        mapyLMat_data_empty_n,
        mapyLMat_data_read,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] p_src_mat_rows_dout;
input   p_src_mat_rows_empty_n;
output   p_src_mat_rows_read;
input  [31:0] p_src_mat_cols_dout;
input   p_src_mat_cols_empty_n;
output   p_src_mat_cols_read;
input  [7:0] imgL_in_data_dout;
input   imgL_in_data_empty_n;
output   imgL_in_data_read;
output  [7:0] leftRemappedMat_data_din;
input   leftRemappedMat_data_full_n;
output   leftRemappedMat_data_write;
input  [31:0] mapxLMat_data_dout;
input   mapxLMat_data_empty_n;
output   mapxLMat_data_read;
input  [31:0] mapyLMat_data_dout;
input   mapyLMat_data_empty_n;
output   mapyLMat_data_read;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_start;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_done;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_continue;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_idle;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_ready;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_p_src_mat_rows_read;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_p_src_mat_cols_read;
wire   [15:0] remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_return_0;
wire   [15:0] remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_return_1;
wire    ap_channel_done_cols_loc_channel;
wire    cols_loc_channel_full_n;
reg    ap_sync_reg_channel_write_cols_loc_channel;
wire    ap_sync_channel_write_cols_loc_channel;
wire    ap_channel_done_rows_loc_channel;
wire    rows_loc_channel_full_n;
reg    ap_sync_reg_channel_write_rows_loc_channel;
wire    ap_sync_channel_write_rows_loc_channel;
wire    xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_start;
wire    xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_done;
wire    xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_continue;
wire    xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_idle;
wire    xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_ready;
wire    xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_imgL_in_data_read;
wire   [7:0] xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_leftRemappedMat_data_din;
wire    xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_leftRemappedMat_data_write;
wire    xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_mapxLMat_data_read;
wire    xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_mapyLMat_data_read;
wire   [15:0] rows_loc_channel_dout;
wire   [1:0] rows_loc_channel_num_data_valid;
wire   [1:0] rows_loc_channel_fifo_cap;
wire    rows_loc_channel_empty_n;
wire   [15:0] cols_loc_channel_dout;
wire   [1:0] cols_loc_channel_num_data_valid;
wire   [1:0] cols_loc_channel_fifo_cap;
wire    cols_loc_channel_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_cols_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_rows_loc_channel = 1'b0;
end

stereolbm_axis_cambm_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_start),
    .ap_done(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_done),
    .ap_continue(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_continue),
    .ap_idle(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_idle),
    .ap_ready(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_ready),
    .p_src_mat_rows_dout(p_src_mat_rows_dout),
    .p_src_mat_rows_num_data_valid(2'd0),
    .p_src_mat_rows_fifo_cap(2'd0),
    .p_src_mat_rows_empty_n(p_src_mat_rows_empty_n),
    .p_src_mat_rows_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_p_src_mat_rows_read),
    .p_src_mat_cols_dout(p_src_mat_cols_dout),
    .p_src_mat_cols_num_data_valid(2'd0),
    .p_src_mat_cols_fifo_cap(2'd0),
    .p_src_mat_cols_empty_n(p_src_mat_cols_empty_n),
    .p_src_mat_cols_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_p_src_mat_cols_read),
    .ap_return_0(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_return_0),
    .ap_return_1(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_return_1)
);

stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6 xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_start),
    .ap_done(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_done),
    .ap_continue(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_continue),
    .ap_idle(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_idle),
    .ap_ready(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_ready),
    .imgL_in_data_dout(imgL_in_data_dout),
    .imgL_in_data_num_data_valid(2'd0),
    .imgL_in_data_fifo_cap(2'd0),
    .imgL_in_data_empty_n(imgL_in_data_empty_n),
    .imgL_in_data_read(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_imgL_in_data_read),
    .leftRemappedMat_data_din(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_leftRemappedMat_data_din),
    .leftRemappedMat_data_num_data_valid(2'd0),
    .leftRemappedMat_data_fifo_cap(2'd0),
    .leftRemappedMat_data_full_n(leftRemappedMat_data_full_n),
    .leftRemappedMat_data_write(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_leftRemappedMat_data_write),
    .mapxLMat_data_dout(mapxLMat_data_dout),
    .mapxLMat_data_num_data_valid(2'd0),
    .mapxLMat_data_fifo_cap(2'd0),
    .mapxLMat_data_empty_n(mapxLMat_data_empty_n),
    .mapxLMat_data_read(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_mapxLMat_data_read),
    .mapyLMat_data_dout(mapyLMat_data_dout),
    .mapyLMat_data_num_data_valid(2'd0),
    .mapyLMat_data_fifo_cap(2'd0),
    .mapyLMat_data_empty_n(mapyLMat_data_empty_n),
    .mapyLMat_data_read(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_mapyLMat_data_read),
    .p_read(rows_loc_channel_dout),
    .p_read1(cols_loc_channel_dout)
);

stereolbm_axis_cambm_fifo_w16_d2_S rows_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_return_0),
    .if_full_n(rows_loc_channel_full_n),
    .if_write(ap_channel_done_rows_loc_channel),
    .if_dout(rows_loc_channel_dout),
    .if_num_data_valid(rows_loc_channel_num_data_valid),
    .if_fifo_cap(rows_loc_channel_fifo_cap),
    .if_empty_n(rows_loc_channel_empty_n),
    .if_read(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w16_d2_S cols_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_return_1),
    .if_full_n(cols_loc_channel_full_n),
    .if_write(ap_channel_done_cols_loc_channel),
    .if_dout(cols_loc_channel_dout),
    .if_num_data_valid(cols_loc_channel_num_data_valid),
    .if_fifo_cap(cols_loc_channel_fifo_cap),
    .if_empty_n(cols_loc_channel_empty_n),
    .if_read(xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_cols_loc_channel <= 1'b0;
    end else begin
        if (((remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_done & remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_cols_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_cols_loc_channel <= ap_sync_channel_write_cols_loc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_rows_loc_channel <= 1'b0;
    end else begin
        if (((remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_done & remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_rows_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_rows_loc_channel <= ap_sync_channel_write_rows_loc_channel;
        end
    end
end

assign ap_channel_done_cols_loc_channel = (remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_done & (ap_sync_reg_channel_write_cols_loc_channel ^ 1'b1));

assign ap_channel_done_rows_loc_channel = (remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_done & (ap_sync_reg_channel_write_rows_loc_channel ^ 1'b1));

assign ap_done = xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_done;

assign ap_idle = (xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_idle & remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_idle & (cols_loc_channel_empty_n ^ 1'b1) & (rows_loc_channel_empty_n ^ 1'b1));

assign ap_ready = remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_ready;

assign ap_sync_channel_write_cols_loc_channel = ((cols_loc_channel_full_n & ap_channel_done_cols_loc_channel) | ap_sync_reg_channel_write_cols_loc_channel);

assign ap_sync_channel_write_rows_loc_channel = ((rows_loc_channel_full_n & ap_channel_done_rows_loc_channel) | ap_sync_reg_channel_write_rows_loc_channel);

assign imgL_in_data_read = xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_imgL_in_data_read;

assign leftRemappedMat_data_din = xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_leftRemappedMat_data_din;

assign leftRemappedMat_data_write = xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_leftRemappedMat_data_write;

assign mapxLMat_data_read = xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_mapxLMat_data_read;

assign mapyLMat_data_read = xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_mapyLMat_data_read;

assign p_src_mat_cols_read = remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_p_src_mat_cols_read;

assign p_src_mat_rows_read = remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_p_src_mat_rows_read;

assign remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_continue = (ap_sync_channel_write_rows_loc_channel & ap_sync_channel_write_cols_loc_channel);

assign remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_Block_entry1_proc_U0_ap_start = ap_start;

assign xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_continue = ap_continue;

assign xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_U0_ap_start = (rows_loc_channel_empty_n & cols_loc_channel_empty_n);

endmodule //stereolbm_axis_cambm_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2
