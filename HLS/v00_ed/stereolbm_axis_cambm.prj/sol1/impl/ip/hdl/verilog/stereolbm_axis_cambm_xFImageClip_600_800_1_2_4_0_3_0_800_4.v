// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_sobel_x_data_dout,
        in_sobel_x_data_num_data_valid,
        in_sobel_x_data_fifo_cap,
        in_sobel_x_data_empty_n,
        in_sobel_x_data_read,
        left_clipped_din,
        left_clipped_num_data_valid,
        left_clipped_fifo_cap,
        left_clipped_full_n,
        left_clipped_write,
        sbmstate_preFilterCap_dout,
        sbmstate_preFilterCap_num_data_valid,
        sbmstate_preFilterCap_fifo_cap,
        sbmstate_preFilterCap_empty_n,
        sbmstate_preFilterCap_read,
        height_dout,
        height_num_data_valid,
        height_fifo_cap,
        height_empty_n,
        height_read,
        width_dout,
        width_num_data_valid,
        width_fifo_cap,
        width_empty_n,
        width_read,
        sbmstate_preFilterCap_c_din,
        sbmstate_preFilterCap_c_num_data_valid,
        sbmstate_preFilterCap_c_fifo_cap,
        sbmstate_preFilterCap_c_full_n,
        sbmstate_preFilterCap_c_write,
        height_c20_din,
        height_c20_num_data_valid,
        height_c20_fifo_cap,
        height_c20_full_n,
        height_c20_write,
        width_c25_din,
        width_c25_num_data_valid,
        width_c25_fifo_cap,
        width_c25_full_n,
        width_c25_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] in_sobel_x_data_dout;
input  [1:0] in_sobel_x_data_num_data_valid;
input  [1:0] in_sobel_x_data_fifo_cap;
input   in_sobel_x_data_empty_n;
output   in_sobel_x_data_read;
output  [7:0] left_clipped_din;
input  [1:0] left_clipped_num_data_valid;
input  [1:0] left_clipped_fifo_cap;
input   left_clipped_full_n;
output   left_clipped_write;
input  [31:0] sbmstate_preFilterCap_dout;
input  [2:0] sbmstate_preFilterCap_num_data_valid;
input  [2:0] sbmstate_preFilterCap_fifo_cap;
input   sbmstate_preFilterCap_empty_n;
output   sbmstate_preFilterCap_read;
input  [15:0] height_dout;
input  [2:0] height_num_data_valid;
input  [2:0] height_fifo_cap;
input   height_empty_n;
output   height_read;
input  [15:0] width_dout;
input  [2:0] width_num_data_valid;
input  [2:0] width_fifo_cap;
input   width_empty_n;
output   width_read;
output  [31:0] sbmstate_preFilterCap_c_din;
input  [1:0] sbmstate_preFilterCap_c_num_data_valid;
input  [1:0] sbmstate_preFilterCap_c_fifo_cap;
input   sbmstate_preFilterCap_c_full_n;
output   sbmstate_preFilterCap_c_write;
output  [15:0] height_c20_din;
input  [1:0] height_c20_num_data_valid;
input  [1:0] height_c20_fifo_cap;
input   height_c20_full_n;
output   height_c20_write;
output  [15:0] width_c25_din;
input  [1:0] width_c25_num_data_valid;
input  [1:0] width_c25_fifo_cap;
input   width_c25_full_n;
output   width_c25_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_sobel_x_data_read;
reg left_clipped_write;
reg sbmstate_preFilterCap_read;
reg height_read;
reg width_read;
reg sbmstate_preFilterCap_c_write;
reg height_c20_write;
reg width_c25_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    sbmstate_preFilterCap_blk_n;
reg    height_blk_n;
reg    width_blk_n;
reg    sbmstate_preFilterCap_c_blk_n;
reg    height_c20_blk_n;
reg    width_c25_blk_n;
reg   [15:0] width_read_reg_168;
reg    ap_block_state1;
reg   [15:0] height_read_reg_173;
reg   [31:0] sbmstate_preFilterCap_read_reg_179;
wire   [31:0] sub25_i_fu_122_p2;
reg   [31:0] sub25_i_reg_184;
wire   [7:0] empty_fu_128_p1;
reg   [7:0] empty_reg_189;
reg   [14:0] i_11_reg_194;
wire    ap_CS_fsm_state2;
wire    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start;
wire    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_done;
wire    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_idle;
wire    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_ready;
wire    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_in_sobel_x_data_read;
wire   [7:0] grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_din;
wire    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_write;
reg    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg;
wire   [0:0] icmp_ln623_fu_145_p2;
wire    ap_CS_fsm_state3;
reg   [14:0] i_fu_62;
wire   [14:0] add_ln623_fu_150_p2;
wire   [15:0] zext_ln623_fu_141_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg = 1'b0;
end

stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start),
    .ap_done(grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_done),
    .ap_idle(grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_idle),
    .ap_ready(grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_ready),
    .in_sobel_x_data_dout(in_sobel_x_data_dout),
    .in_sobel_x_data_num_data_valid(2'd0),
    .in_sobel_x_data_fifo_cap(2'd0),
    .in_sobel_x_data_empty_n(in_sobel_x_data_empty_n),
    .in_sobel_x_data_read(grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_in_sobel_x_data_read),
    .left_clipped_din(grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_din),
    .left_clipped_num_data_valid(2'd0),
    .left_clipped_fifo_cap(2'd0),
    .left_clipped_full_n(left_clipped_full_n),
    .left_clipped_write(grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_write),
    .width_load(width_read_reg_168),
    .i(i_11_reg_194),
    .height_load(height_read_reg_173),
    .sub25_i(sub25_i_reg_184),
    .sbmstate_preFilterCap_load(sbmstate_preFilterCap_read_reg_179),
    .cap_cast_i(empty_reg_189)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln623_fu_145_p2 == 1'd0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln623_fu_145_p2 == 1'd1))) begin
            grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg <= 1'b1;
        end else if ((grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_ready == 1'b1)) begin
            grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_62 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln623_fu_145_p2 == 1'd1))) begin
        i_fu_62 <= add_ln623_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_189 <= empty_fu_128_p1;
        height_read_reg_173 <= height_dout;
        sbmstate_preFilterCap_read_reg_179 <= sbmstate_preFilterCap_dout;
        sub25_i_reg_184 <= sub25_i_fu_122_p2;
        width_read_reg_168 <= width_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_11_reg_194 <= i_fu_62;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln623_fu_145_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln623_fu_145_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_blk_n = height_empty_n;
    end else begin
        height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_c20_blk_n = height_c20_full_n;
    end else begin
        height_c20_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_c20_write = 1'b1;
    end else begin
        height_c20_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read = 1'b1;
    end else begin
        height_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_sobel_x_data_read = grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_in_sobel_x_data_read;
    end else begin
        in_sobel_x_data_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        left_clipped_write = grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_write;
    end else begin
        left_clipped_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_preFilterCap_blk_n = sbmstate_preFilterCap_empty_n;
    end else begin
        sbmstate_preFilterCap_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_preFilterCap_c_blk_n = sbmstate_preFilterCap_c_full_n;
    end else begin
        sbmstate_preFilterCap_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_preFilterCap_c_write = 1'b1;
    end else begin
        sbmstate_preFilterCap_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_preFilterCap_read = 1'b1;
    end else begin
        sbmstate_preFilterCap_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_blk_n = width_empty_n;
    end else begin
        width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_c25_blk_n = width_c25_full_n;
    end else begin
        width_c25_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_c25_write = 1'b1;
    end else begin
        width_c25_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_read = 1'b1;
    end else begin
        width_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln623_fu_145_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln623_fu_150_p2 = (i_fu_62 + 15'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (width_c25_full_n == 1'b0) | (height_c20_full_n == 1'b0) | (sbmstate_preFilterCap_c_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (sbmstate_preFilterCap_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign empty_fu_128_p1 = sbmstate_preFilterCap_dout[7:0];

assign grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start = grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg;

assign height_c20_din = height_dout;

assign icmp_ln623_fu_145_p2 = (($signed(zext_ln623_fu_141_p1) < $signed(height_read_reg_173)) ? 1'b1 : 1'b0);

assign left_clipped_din = grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_din;

assign sbmstate_preFilterCap_c_din = sbmstate_preFilterCap_dout;

assign sub25_i_fu_122_p2 = (32'd0 - sbmstate_preFilterCap_dout);

assign width_c25_din = width_dout;

assign zext_ln623_fu_141_p1 = i_fu_62;

endmodule //stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_4
