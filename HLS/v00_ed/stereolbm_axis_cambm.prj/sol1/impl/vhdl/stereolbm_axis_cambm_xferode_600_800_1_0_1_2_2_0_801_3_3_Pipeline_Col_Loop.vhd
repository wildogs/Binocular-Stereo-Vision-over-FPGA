-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stereolbm_axis_cambm_xferode_600_800_1_0_1_2_2_0_801_3_3_Pipeline_Col_Loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_disp8u_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_disp8u_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_disp8u_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_disp8u_data_empty_n : IN STD_LOGIC;
    img_disp8u_data_read : OUT STD_LOGIC;
    img_disp8u_erode_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_disp8u_erode_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_disp8u_erode_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_disp8u_erode_data_full_n : IN STD_LOGIC;
    img_disp8u_erode_data_write : OUT STD_LOGIC;
    img_width : IN STD_LOGIC_VECTOR (15 downto 0);
    buf_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_2_ce0 : OUT STD_LOGIC;
    buf_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_2_ce1 : OUT STD_LOGIC;
    buf_2_we1 : OUT STD_LOGIC;
    buf_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_1_ce0 : OUT STD_LOGIC;
    buf_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_1_ce1 : OUT STD_LOGIC;
    buf_1_we1 : OUT STD_LOGIC;
    buf_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_r_ce0 : OUT STD_LOGIC;
    buf_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_r_ce1 : OUT STD_LOGIC;
    buf_r_we1 : OUT STD_LOGIC;
    buf_r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    trunc_ln265_2 : IN STD_LOGIC_VECTOR (1 downto 0);
    trunc_ln265_1 : IN STD_LOGIC_VECTOR (1 downto 0);
    trunc_ln : IN STD_LOGIC_VECTOR (1 downto 0);
    cmp_i_i142_i : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of stereolbm_axis_cambm_xferode_600_800_1_0_1_2_2_0_801_3_3_Pipeline_Col_Loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln123_reg_641 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln132_reg_645 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i142_i_read_reg_616 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op62_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal icmp_ln216_reg_656 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_656_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln123_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal img_disp8u_data_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal img_disp8u_erode_data_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln_read_reg_620 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_1_reg_635 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln123_reg_641_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln123_reg_641_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln123_reg_641_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln123_reg_641_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln123_reg_641_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln132_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln132_reg_645_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln132_reg_645_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_i99_i_fu_372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i99_i_reg_649 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln216_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_656_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_656_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_656_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_656_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_656_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_cop_fu_386_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_fu_397_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_fu_408_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_13_fu_445_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_13_reg_690 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_extract_0_3_xfExtractPixels_1_1_0_s_fu_295_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_extract_0_3_reg_696 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_15_fu_487_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_15_reg_702 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_med_apply_9_reg_708 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_extract_0_4_xfExtractPixels_1_1_0_s_fu_301_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_extract_0_4_reg_714 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_18_fu_527_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_18_reg_720 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_22_fu_560_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_22_reg_726 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter6_stage0 : STD_LOGIC;
    signal src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_extract_0_3_xfExtractPixels_1_1_0_s_fu_295_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_extract_0_4_xfExtractPixels_1_1_0_s_fu_301_ap_ready : STD_LOGIC;
    signal ap_phi_reg_pp0_iter0_buf_cop_3_reg_256 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_cop_3_reg_256 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_cop_3_reg_256 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_buf_cop_3_reg_256 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_buf_cop_3_reg_256 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_cop_4_reg_267 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_cop_4_reg_267 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_cop_4_reg_267 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_buf_cop_4_reg_267 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_buf_cop_4_reg_267 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_buf_cop_4_reg_267 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_cop_5_reg_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_cop_5_reg_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_cop_5_reg_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_buf_cop_5_reg_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_buf_cop_5_reg_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_buf_cop_5_reg_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_buf_cop_5_reg_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_addr_gep_fu_205_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_1_addr_gep_fu_212_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_2_addr_gep_fu_219_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_fu_80 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_2_fu_355_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_col_1 : STD_LOGIC_VECTOR (12 downto 0);
    signal max_fu_84 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_1_fu_88 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_med_apply_fu_92 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_2_fu_96 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_med_apply_1_fu_100 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_5_fu_104 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln123_fu_345_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln56_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_11_fu_431_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln56_1_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_2_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_14_fu_474_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln56_3_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_4_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_17_fu_515_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln56_5_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_6_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_20_fu_549_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln56_7_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_307 : BOOLEAN;
    signal ap_condition_595 : BOOLEAN;
    signal ap_condition_599 : BOOLEAN;
    signal ap_condition_602 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component stereolbm_axis_cambm_xfExtractPixels_1_1_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        val1_val : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component stereolbm_axis_cambm_mux_3_2_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component stereolbm_axis_cambm_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289 : component stereolbm_axis_cambm_xfExtractPixels_1_1_0_s
    port map (
        ap_ready => src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_ready,
        val1_val => ap_phi_reg_pp0_iter4_buf_cop_3_reg_256,
        ap_return => src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_return);

    src_buf_temp_copy_extract_0_3_xfExtractPixels_1_1_0_s_fu_295 : component stereolbm_axis_cambm_xfExtractPixels_1_1_0_s
    port map (
        ap_ready => src_buf_temp_copy_extract_0_3_xfExtractPixels_1_1_0_s_fu_295_ap_ready,
        val1_val => ap_phi_reg_pp0_iter5_buf_cop_4_reg_267,
        ap_return => src_buf_temp_copy_extract_0_3_xfExtractPixels_1_1_0_s_fu_295_ap_return);

    src_buf_temp_copy_extract_0_4_xfExtractPixels_1_1_0_s_fu_301 : component stereolbm_axis_cambm_xfExtractPixels_1_1_0_s
    port map (
        ap_ready => src_buf_temp_copy_extract_0_4_xfExtractPixels_1_1_0_s_fu_301_ap_ready,
        val1_val => ap_phi_reg_pp0_iter6_buf_cop_5_reg_278,
        ap_return => src_buf_temp_copy_extract_0_4_xfExtractPixels_1_1_0_s_fu_301_ap_return);

    mux_3_2_8_1_1_U592 : component stereolbm_axis_cambm_mux_3_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_r_q0,
        din1 => buf_1_q0,
        din2 => buf_2_q0,
        din3 => trunc_ln265_2,
        dout => buf_cop_fu_386_p5);

    mux_3_2_8_1_1_U593 : component stereolbm_axis_cambm_mux_3_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_r_q0,
        din1 => buf_1_q0,
        din2 => buf_2_q0,
        din3 => trunc_ln265_1,
        dout => buf_cop_1_fu_397_p5);

    mux_3_2_8_1_1_U594 : component stereolbm_axis_cambm_mux_3_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_r_q0,
        din1 => buf_1_q0,
        din2 => buf_2_q0,
        din3 => trunc_ln,
        dout => buf_cop_2_fu_408_p5);

    flow_control_loop_pipe_sequential_init_U : component stereolbm_axis_cambm_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage0)) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_buf_cop_3_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_307)) then
                if (((icmp_ln132_fu_361_p2 = ap_const_lv1_0) and (icmp_ln123_fu_349_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_cop_3_reg_256 <= ap_const_lv8_FF;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_cop_3_reg_256 <= ap_phi_reg_pp0_iter0_buf_cop_3_reg_256;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_cop_4_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_307)) then
                if (((icmp_ln132_fu_361_p2 = ap_const_lv1_0) and (icmp_ln123_fu_349_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_cop_4_reg_267 <= ap_const_lv8_FF;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_cop_4_reg_267 <= ap_phi_reg_pp0_iter0_buf_cop_4_reg_267;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_cop_5_reg_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_307)) then
                if (((icmp_ln132_fu_361_p2 = ap_const_lv1_0) and (icmp_ln123_fu_349_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_cop_5_reg_278 <= ap_const_lv8_FF;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_cop_5_reg_278 <= ap_phi_reg_pp0_iter0_buf_cop_5_reg_278;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_buf_cop_3_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((icmp_ln132_reg_645_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln123_reg_641_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_buf_cop_3_reg_256 <= buf_cop_fu_386_p5;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_buf_cop_3_reg_256 <= ap_phi_reg_pp0_iter3_buf_cop_3_reg_256;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_buf_cop_4_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((icmp_ln132_reg_645_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln123_reg_641_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_buf_cop_4_reg_267 <= buf_cop_1_fu_397_p5;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_buf_cop_4_reg_267 <= ap_phi_reg_pp0_iter3_buf_cop_4_reg_267;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_buf_cop_5_reg_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((icmp_ln132_reg_645_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln123_reg_641_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_buf_cop_5_reg_278 <= buf_cop_2_fu_408_p5;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_buf_cop_5_reg_278 <= ap_phi_reg_pp0_iter3_buf_cop_5_reg_278;
                end if;
            end if; 
        end if;
    end process;

    col_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln123_fu_349_p2 = ap_const_lv1_0))) then 
                    col_fu_80 <= col_2_fu_355_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    col_fu_80 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;

    max_1_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    max_1_fu_88 <= ap_const_lv8_FF;
                elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln123_reg_641_pp0_iter4_reg = ap_const_lv1_0))) then 
                    max_1_fu_88 <= src_buf_temp_med_apply_1_fu_100;
                end if;
            end if; 
        end if;
    end process;

    max_2_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    max_2_fu_96 <= ap_const_lv8_FF;
                elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln123_reg_641_pp0_iter3_reg = ap_const_lv1_0))) then 
                    max_2_fu_96 <= src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_return;
                end if;
            end if; 
        end if;
    end process;

    max_5_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    max_5_fu_104 <= ap_const_lv8_FF;
                elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln123_reg_641_pp0_iter5_reg = ap_const_lv1_0))) then 
                    max_5_fu_104 <= src_buf_temp_copy_extract_0_4_xfExtractPixels_1_1_0_s_fu_301_ap_return;
                end if;
            end if; 
        end if;
    end process;

    max_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    max_fu_84 <= ap_const_lv8_FF;
                elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln123_reg_641_pp0_iter3_reg = ap_const_lv1_0))) then 
                    max_fu_84 <= max_2_fu_96;
                end if;
            end if; 
        end if;
    end process;

    src_buf_temp_med_apply_1_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_temp_med_apply_1_fu_100 <= ap_const_lv8_FF;
                elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln123_reg_641_pp0_iter4_reg = ap_const_lv1_0))) then 
                    src_buf_temp_med_apply_1_fu_100 <= src_buf_temp_copy_extract_0_3_xfExtractPixels_1_1_0_s_fu_295_ap_return;
                end if;
            end if; 
        end if;
    end process;

    src_buf_temp_med_apply_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_temp_med_apply_fu_92 <= ap_const_lv8_FF;
                elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln123_reg_641_pp0_iter5_reg = ap_const_lv1_0))) then 
                    src_buf_temp_med_apply_fu_92 <= max_5_fu_104;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                col_1_reg_635 <= ap_sig_allocacmp_col_1;
                icmp_ln123_reg_641 <= icmp_ln123_fu_349_p2;
                icmp_ln123_reg_641_pp0_iter1_reg <= icmp_ln123_reg_641;
                icmp_ln132_reg_645_pp0_iter1_reg <= icmp_ln132_reg_645;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                icmp_ln123_reg_641_pp0_iter2_reg <= icmp_ln123_reg_641_pp0_iter1_reg;
                icmp_ln123_reg_641_pp0_iter3_reg <= icmp_ln123_reg_641_pp0_iter2_reg;
                icmp_ln123_reg_641_pp0_iter4_reg <= icmp_ln123_reg_641_pp0_iter3_reg;
                icmp_ln123_reg_641_pp0_iter5_reg <= icmp_ln123_reg_641_pp0_iter4_reg;
                icmp_ln132_reg_645_pp0_iter2_reg <= icmp_ln132_reg_645_pp0_iter1_reg;
                icmp_ln216_reg_656_pp0_iter2_reg <= icmp_ln216_reg_656;
                icmp_ln216_reg_656_pp0_iter3_reg <= icmp_ln216_reg_656_pp0_iter2_reg;
                icmp_ln216_reg_656_pp0_iter4_reg <= icmp_ln216_reg_656_pp0_iter3_reg;
                icmp_ln216_reg_656_pp0_iter5_reg <= icmp_ln216_reg_656_pp0_iter4_reg;
                icmp_ln216_reg_656_pp0_iter6_reg <= icmp_ln216_reg_656_pp0_iter5_reg;
                icmp_ln216_reg_656_pp0_iter7_reg <= icmp_ln216_reg_656_pp0_iter6_reg;
                max_22_reg_726 <= max_22_fu_560_p3;
                src_buf_temp_med_apply_9_reg_708 <= max_5_fu_104;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_buf_cop_3_reg_256 <= ap_phi_reg_pp0_iter1_buf_cop_3_reg_256;
                ap_phi_reg_pp0_iter2_buf_cop_4_reg_267 <= ap_phi_reg_pp0_iter1_buf_cop_4_reg_267;
                ap_phi_reg_pp0_iter2_buf_cop_5_reg_278 <= ap_phi_reg_pp0_iter1_buf_cop_5_reg_278;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_buf_cop_3_reg_256 <= ap_phi_reg_pp0_iter2_buf_cop_3_reg_256;
                ap_phi_reg_pp0_iter3_buf_cop_4_reg_267 <= ap_phi_reg_pp0_iter2_buf_cop_4_reg_267;
                ap_phi_reg_pp0_iter3_buf_cop_5_reg_278 <= ap_phi_reg_pp0_iter2_buf_cop_5_reg_278;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_buf_cop_4_reg_267 <= ap_phi_reg_pp0_iter4_buf_cop_4_reg_267;
                ap_phi_reg_pp0_iter5_buf_cop_5_reg_278 <= ap_phi_reg_pp0_iter4_buf_cop_5_reg_278;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter6_buf_cop_5_reg_278 <= ap_phi_reg_pp0_iter5_buf_cop_5_reg_278;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    conv_i99_i_reg_649(12 downto 0) <= conv_i99_i_fu_372_p1(12 downto 0);
                icmp_ln216_reg_656 <= icmp_ln216_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln123_fu_349_p2 = ap_const_lv1_0))) then
                icmp_ln132_reg_645 <= icmp_ln132_fu_361_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln123_reg_641_pp0_iter3_reg = ap_const_lv1_0))) then
                max_13_reg_690 <= max_13_fu_445_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln123_reg_641_pp0_iter4_reg = ap_const_lv1_0))) then
                max_15_reg_702 <= max_15_fu_487_p3;
                src_buf_temp_copy_extract_0_3_reg_696 <= src_buf_temp_copy_extract_0_3_xfExtractPixels_1_1_0_s_fu_295_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln123_reg_641_pp0_iter5_reg = ap_const_lv1_0))) then
                max_18_reg_720 <= max_18_fu_527_p3;
                src_buf_temp_copy_extract_0_4_reg_714 <= src_buf_temp_copy_extract_0_4_xfExtractPixels_1_1_0_s_fu_301_ap_return;
            end if;
        end if;
    end process;
    conv_i99_i_reg_649(63 downto 13) <= "000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, img_disp8u_data_empty_n, ap_predicate_op62_read_state2, img_disp8u_erode_data_full_n, icmp_ln216_reg_656_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln216_reg_656_pp0_iter7_reg = ap_const_lv1_0) and (img_disp8u_erode_data_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_predicate_op62_read_state2 = ap_const_boolean_1) and (img_disp8u_data_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, img_disp8u_data_empty_n, ap_predicate_op62_read_state2, img_disp8u_erode_data_full_n, icmp_ln216_reg_656_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln216_reg_656_pp0_iter7_reg = ap_const_lv1_0) and (img_disp8u_erode_data_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_predicate_op62_read_state2 = ap_const_boolean_1) and (img_disp8u_data_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, img_disp8u_data_empty_n, ap_predicate_op62_read_state2, img_disp8u_erode_data_full_n, icmp_ln216_reg_656_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln216_reg_656_pp0_iter7_reg = ap_const_lv1_0) and (img_disp8u_erode_data_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_predicate_op62_read_state2 = ap_const_boolean_1) and (img_disp8u_data_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(img_disp8u_data_empty_n, ap_predicate_op62_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op62_read_state2 = ap_const_boolean_1) and (img_disp8u_data_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter8_assign_proc : process(img_disp8u_erode_data_full_n, icmp_ln216_reg_656_pp0_iter7_reg)
    begin
                ap_block_state9_pp0_stage0_iter8 <= ((icmp_ln216_reg_656_pp0_iter7_reg = ap_const_lv1_0) and (img_disp8u_erode_data_full_n = ap_const_logic_0));
    end process;


    ap_condition_307_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_307 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_595_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln123_reg_641, icmp_ln132_reg_645, ap_block_pp0_stage0, trunc_ln_read_reg_620)
    begin
                ap_condition_595 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_read_reg_620 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_599_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln123_reg_641, icmp_ln132_reg_645, ap_block_pp0_stage0, trunc_ln_read_reg_620)
    begin
                ap_condition_599 <= (not((trunc_ln_read_reg_620 = ap_const_lv2_0)) and not((trunc_ln_read_reg_620 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_602_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln123_reg_641, icmp_ln132_reg_645, ap_block_pp0_stage0, trunc_ln_read_reg_620)
    begin
                ap_condition_602 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_read_reg_620 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln123_fu_349_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln123_fu_349_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter6_stage0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_subdone, icmp_ln123_reg_641_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln123_reg_641_pp0_iter5_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter6_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter6_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_reg_pp0_iter0_buf_cop_3_reg_256 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_cop_4_reg_267 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_cop_5_reg_278 <= "XXXXXXXX";

    ap_predicate_op62_read_state2_assign_proc : process(icmp_ln123_reg_641, icmp_ln132_reg_645, cmp_i_i142_i)
    begin
                ap_predicate_op62_read_state2 <= ((cmp_i_i142_i = ap_const_lv1_1) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_col_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, col_fu_80, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_col_1 <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_col_1 <= col_fu_80;
        end if; 
    end process;

    buf_1_addr_gep_fu_212_p3 <= conv_i99_i_fu_372_p1(10 - 1 downto 0);
    buf_1_address0 <= conv_i99_i_reg_649(10 - 1 downto 0);

    buf_1_address1_assign_proc : process(cmp_i_i142_i_read_reg_616, cmp_i_i142_i, conv_i99_i_fu_372_p1, buf_1_addr_gep_fu_212_p3, ap_condition_595)
    begin
        if ((ap_const_boolean_1 = ap_condition_595)) then
            if ((cmp_i_i142_i = ap_const_lv1_1)) then 
                buf_1_address1 <= buf_1_addr_gep_fu_212_p3;
            elsif ((cmp_i_i142_i_read_reg_616 = ap_const_lv1_0)) then 
                buf_1_address1 <= conv_i99_i_fu_372_p1(10 - 1 downto 0);
            else 
                buf_1_address1 <= "XXXXXXXXXX";
            end if;
        else 
            buf_1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_1_ce0 <= ap_const_logic_1;
        else 
            buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln123_reg_641, icmp_ln132_reg_645, cmp_i_i142_i_read_reg_616, cmp_i_i142_i, ap_block_pp0_stage0_11001, trunc_ln_read_reg_620)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i = ap_const_lv1_1) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_read_reg_620 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i_read_reg_616 = ap_const_lv1_0) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_read_reg_620 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_ce1 <= ap_const_logic_1;
        else 
            buf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_d1_assign_proc : process(img_disp8u_data_dout, cmp_i_i142_i_read_reg_616, cmp_i_i142_i, ap_condition_595)
    begin
        if ((ap_const_boolean_1 = ap_condition_595)) then
            if ((cmp_i_i142_i = ap_const_lv1_1)) then 
                buf_1_d1 <= img_disp8u_data_dout;
            elsif ((cmp_i_i142_i_read_reg_616 = ap_const_lv1_0)) then 
                buf_1_d1 <= ap_const_lv8_FF;
            else 
                buf_1_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_1_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln123_reg_641, icmp_ln132_reg_645, cmp_i_i142_i_read_reg_616, cmp_i_i142_i, ap_block_pp0_stage0_11001, trunc_ln_read_reg_620)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i = ap_const_lv1_1) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_read_reg_620 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i_read_reg_616 = ap_const_lv1_0) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_read_reg_620 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_we1 <= ap_const_logic_1;
        else 
            buf_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_addr_gep_fu_219_p3 <= conv_i99_i_fu_372_p1(10 - 1 downto 0);
    buf_2_address0 <= conv_i99_i_reg_649(10 - 1 downto 0);

    buf_2_address1_assign_proc : process(cmp_i_i142_i_read_reg_616, cmp_i_i142_i, conv_i99_i_fu_372_p1, buf_2_addr_gep_fu_219_p3, ap_condition_599)
    begin
        if ((ap_const_boolean_1 = ap_condition_599)) then
            if ((cmp_i_i142_i = ap_const_lv1_1)) then 
                buf_2_address1 <= buf_2_addr_gep_fu_219_p3;
            elsif ((cmp_i_i142_i_read_reg_616 = ap_const_lv1_0)) then 
                buf_2_address1 <= conv_i99_i_fu_372_p1(10 - 1 downto 0);
            else 
                buf_2_address1 <= "XXXXXXXXXX";
            end if;
        else 
            buf_2_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_2_ce0 <= ap_const_logic_1;
        else 
            buf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln123_reg_641, icmp_ln132_reg_645, cmp_i_i142_i_read_reg_616, cmp_i_i142_i, ap_block_pp0_stage0_11001, trunc_ln_read_reg_620)
    begin
        if (((not((trunc_ln_read_reg_620 = ap_const_lv2_0)) and not((trunc_ln_read_reg_620 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i = ap_const_lv1_1) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((trunc_ln_read_reg_620 = ap_const_lv2_0)) and not((trunc_ln_read_reg_620 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i_read_reg_616 = ap_const_lv1_0) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_2_ce1 <= ap_const_logic_1;
        else 
            buf_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_d1_assign_proc : process(img_disp8u_data_dout, cmp_i_i142_i_read_reg_616, cmp_i_i142_i, ap_condition_599)
    begin
        if ((ap_const_boolean_1 = ap_condition_599)) then
            if ((cmp_i_i142_i = ap_const_lv1_1)) then 
                buf_2_d1 <= img_disp8u_data_dout;
            elsif ((cmp_i_i142_i_read_reg_616 = ap_const_lv1_0)) then 
                buf_2_d1 <= ap_const_lv8_FF;
            else 
                buf_2_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_2_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln123_reg_641, icmp_ln132_reg_645, cmp_i_i142_i_read_reg_616, cmp_i_i142_i, ap_block_pp0_stage0_11001, trunc_ln_read_reg_620)
    begin
        if (((not((trunc_ln_read_reg_620 = ap_const_lv2_0)) and not((trunc_ln_read_reg_620 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i = ap_const_lv1_1) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((trunc_ln_read_reg_620 = ap_const_lv2_0)) and not((trunc_ln_read_reg_620 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i_read_reg_616 = ap_const_lv1_0) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_2_we1 <= ap_const_logic_1;
        else 
            buf_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_addr_gep_fu_205_p3 <= conv_i99_i_fu_372_p1(10 - 1 downto 0);
    buf_r_address0 <= conv_i99_i_reg_649(10 - 1 downto 0);

    buf_r_address1_assign_proc : process(cmp_i_i142_i_read_reg_616, cmp_i_i142_i, conv_i99_i_fu_372_p1, buf_addr_gep_fu_205_p3, ap_condition_602)
    begin
        if ((ap_const_boolean_1 = ap_condition_602)) then
            if ((cmp_i_i142_i = ap_const_lv1_1)) then 
                buf_r_address1 <= buf_addr_gep_fu_205_p3;
            elsif ((cmp_i_i142_i_read_reg_616 = ap_const_lv1_0)) then 
                buf_r_address1 <= conv_i99_i_fu_372_p1(10 - 1 downto 0);
            else 
                buf_r_address1 <= "XXXXXXXXXX";
            end if;
        else 
            buf_r_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_r_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_r_ce0 <= ap_const_logic_1;
        else 
            buf_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln123_reg_641, icmp_ln132_reg_645, cmp_i_i142_i_read_reg_616, cmp_i_i142_i, ap_block_pp0_stage0_11001, trunc_ln_read_reg_620)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i = ap_const_lv1_1) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_read_reg_620 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i_read_reg_616 = ap_const_lv1_0) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_read_reg_620 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_r_ce1 <= ap_const_logic_1;
        else 
            buf_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_r_d1_assign_proc : process(img_disp8u_data_dout, cmp_i_i142_i_read_reg_616, cmp_i_i142_i, ap_condition_602)
    begin
        if ((ap_const_boolean_1 = ap_condition_602)) then
            if ((cmp_i_i142_i = ap_const_lv1_1)) then 
                buf_r_d1 <= img_disp8u_data_dout;
            elsif ((cmp_i_i142_i_read_reg_616 = ap_const_lv1_0)) then 
                buf_r_d1 <= ap_const_lv8_FF;
            else 
                buf_r_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_r_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_r_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln123_reg_641, icmp_ln132_reg_645, cmp_i_i142_i_read_reg_616, cmp_i_i142_i, ap_block_pp0_stage0_11001, trunc_ln_read_reg_620)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i = ap_const_lv1_1) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_read_reg_620 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i142_i_read_reg_616 = ap_const_lv1_0) and (icmp_ln132_reg_645 = ap_const_lv1_1) and (icmp_ln123_reg_641 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_read_reg_620 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_r_we1 <= ap_const_logic_1;
        else 
            buf_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i142_i_read_reg_616 <= cmp_i_i142_i;
    col_2_fu_355_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_col_1) + unsigned(ap_const_lv13_1));
    conv_i99_i_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_1_reg_635),64));
    icmp_ln123_fu_349_p2 <= "1" when (unsigned(zext_ln123_fu_345_p1) > unsigned(img_width)) else "0";
    icmp_ln132_fu_361_p2 <= "1" when (unsigned(zext_ln123_fu_345_p1) < unsigned(img_width)) else "0";
    icmp_ln216_fu_381_p2 <= "1" when (col_1_reg_635 = ap_const_lv13_0) else "0";
    icmp_ln56_1_fu_439_p2 <= "1" when (unsigned(src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_return) < unsigned(max_11_fu_431_p3)) else "0";
    icmp_ln56_2_fu_469_p2 <= "1" when (unsigned(max_1_fu_88) < unsigned(max_13_reg_690)) else "0";
    icmp_ln56_3_fu_481_p2 <= "1" when (unsigned(src_buf_temp_med_apply_1_fu_100) < unsigned(max_14_fu_474_p3)) else "0";
    icmp_ln56_4_fu_511_p2 <= "1" when (unsigned(src_buf_temp_copy_extract_0_3_reg_696) < unsigned(max_15_reg_702)) else "0";
    icmp_ln56_5_fu_521_p2 <= "1" when (unsigned(src_buf_temp_med_apply_fu_92) < unsigned(max_17_fu_515_p3)) else "0";
    icmp_ln56_6_fu_545_p2 <= "1" when (unsigned(src_buf_temp_med_apply_9_reg_708) < unsigned(max_18_reg_720)) else "0";
    icmp_ln56_7_fu_555_p2 <= "1" when (unsigned(src_buf_temp_copy_extract_0_4_reg_714) < unsigned(max_20_fu_549_p3)) else "0";
    icmp_ln56_fu_425_p2 <= "1" when (unsigned(max_2_fu_96) < unsigned(max_fu_84)) else "0";

    img_disp8u_data_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, img_disp8u_data_empty_n, ap_predicate_op62_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op62_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            img_disp8u_data_blk_n <= img_disp8u_data_empty_n;
        else 
            img_disp8u_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_disp8u_data_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op62_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op62_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            img_disp8u_data_read <= ap_const_logic_1;
        else 
            img_disp8u_data_read <= ap_const_logic_0;
        end if; 
    end process;


    img_disp8u_erode_data_blk_n_assign_proc : process(ap_enable_reg_pp0_iter8, img_disp8u_erode_data_full_n, icmp_ln216_reg_656_pp0_iter7_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln216_reg_656_pp0_iter7_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            img_disp8u_erode_data_blk_n <= img_disp8u_erode_data_full_n;
        else 
            img_disp8u_erode_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_disp8u_erode_data_din <= max_22_reg_726;

    img_disp8u_erode_data_write_assign_proc : process(ap_enable_reg_pp0_iter8, icmp_ln216_reg_656_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln216_reg_656_pp0_iter7_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            img_disp8u_erode_data_write <= ap_const_logic_1;
        else 
            img_disp8u_erode_data_write <= ap_const_logic_0;
        end if; 
    end process;

    max_11_fu_431_p3 <= 
        max_2_fu_96 when (icmp_ln56_fu_425_p2(0) = '1') else 
        max_fu_84;
    max_13_fu_445_p3 <= 
        src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_return when (icmp_ln56_1_fu_439_p2(0) = '1') else 
        max_11_fu_431_p3;
    max_14_fu_474_p3 <= 
        max_1_fu_88 when (icmp_ln56_2_fu_469_p2(0) = '1') else 
        max_13_reg_690;
    max_15_fu_487_p3 <= 
        src_buf_temp_med_apply_1_fu_100 when (icmp_ln56_3_fu_481_p2(0) = '1') else 
        max_14_fu_474_p3;
    max_17_fu_515_p3 <= 
        src_buf_temp_copy_extract_0_3_reg_696 when (icmp_ln56_4_fu_511_p2(0) = '1') else 
        max_15_reg_702;
    max_18_fu_527_p3 <= 
        src_buf_temp_med_apply_fu_92 when (icmp_ln56_5_fu_521_p2(0) = '1') else 
        max_17_fu_515_p3;
    max_20_fu_549_p3 <= 
        src_buf_temp_med_apply_9_reg_708 when (icmp_ln56_6_fu_545_p2(0) = '1') else 
        max_18_reg_720;
    max_22_fu_560_p3 <= 
        src_buf_temp_copy_extract_0_4_reg_714 when (icmp_ln56_7_fu_555_p2(0) = '1') else 
        max_20_fu_549_p3;
    trunc_ln_read_reg_620 <= trunc_ln;
    zext_ln123_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_col_1),16));
end behav;
