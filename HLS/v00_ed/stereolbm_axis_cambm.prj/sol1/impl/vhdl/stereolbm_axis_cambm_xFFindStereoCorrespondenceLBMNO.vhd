-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stereolbm_axis_cambm_xFFindStereoCorrespondenceLBMNO is
port (
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    leftRemappedMat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    leftRemappedMat_data_empty_n : IN STD_LOGIC;
    leftRemappedMat_data_read : OUT STD_LOGIC;
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
    rightRemappedMat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    rightRemappedMat_data_empty_n : IN STD_LOGIC;
    rightRemappedMat_data_read : OUT STD_LOGIC;
    img_disp16u_data_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_disp16u_data_full_n : IN STD_LOGIC;
    img_disp16u_data_write : OUT STD_LOGIC;
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
    height : IN STD_LOGIC_VECTOR (15 downto 0);
    width : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read4_ap_vld : IN STD_LOGIC;
    p_read5_ap_vld : IN STD_LOGIC;
    p_read6_ap_vld : IN STD_LOGIC;
    height_ap_vld : IN STD_LOGIC;
    width_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    p_read_ap_vld : IN STD_LOGIC;
    p_read1_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    p_read2_ap_vld : IN STD_LOGIC;
    p_read3_ap_vld : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of stereolbm_axis_cambm_xFFindStereoCorrespondenceLBMNO is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal entry_proc_U0_ap_start : STD_LOGIC;
    signal entry_proc_U0_start_full_n : STD_LOGIC;
    signal entry_proc_U0_ap_done : STD_LOGIC;
    signal entry_proc_U0_ap_continue : STD_LOGIC;
    signal entry_proc_U0_ap_idle : STD_LOGIC;
    signal entry_proc_U0_ap_ready : STD_LOGIC;
    signal entry_proc_U0_start_out : STD_LOGIC;
    signal entry_proc_U0_start_write : STD_LOGIC;
    signal entry_proc_U0_sbmstate_preFilterCap_c18_din : STD_LOGIC_VECTOR (31 downto 0);
    signal entry_proc_U0_sbmstate_preFilterCap_c18_write : STD_LOGIC;
    signal entry_proc_U0_sbmstate_preFilterCap_c19_din : STD_LOGIC_VECTOR (31 downto 0);
    signal entry_proc_U0_sbmstate_preFilterCap_c19_write : STD_LOGIC;
    signal entry_proc_U0_sbmstate_textureThreshold_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal entry_proc_U0_sbmstate_textureThreshold_c_write : STD_LOGIC;
    signal entry_proc_U0_sbmstate_uniquenessRatio_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal entry_proc_U0_sbmstate_uniquenessRatio_c_write : STD_LOGIC;
    signal entry_proc_U0_height_c21_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_height_c21_write : STD_LOGIC;
    signal entry_proc_U0_height_c22_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_height_c22_write : STD_LOGIC;
    signal entry_proc_U0_height_c23_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_height_c23_write : STD_LOGIC;
    signal entry_proc_U0_height_c24_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_height_c24_write : STD_LOGIC;
    signal entry_proc_U0_width_c26_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_width_c26_write : STD_LOGIC;
    signal entry_proc_U0_width_c27_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_width_c27_write : STD_LOGIC;
    signal entry_proc_U0_width_c28_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_width_c28_write : STD_LOGIC;
    signal entry_proc_U0_width_c29_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_width_c29_write : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_start : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_done : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_continue : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_idle : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_leftRemappedMat_data_read : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_x_i3_data_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_x_i3_data_write : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_y_i4_data_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_y_i4_data_write : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_start : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_done : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_continue : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_idle : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_ready : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_in_sobel_x_data_read : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_left_clipped_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_left_clipped_write : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_sbmstate_preFilterCap_read : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_height_read : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_width_read : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_sbmstate_preFilterCap_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_sbmstate_preFilterCap_c_write : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_height_c20_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_height_c20_write : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_width_c25_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_width_c25_write : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_start : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_done : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_continue : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_idle : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_ready : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_in_sobel_y_i4_data_read : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_height_read : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_width_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_start : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_done : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_continue : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_idle : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_rightRemappedMat_data_read : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_x_i_data_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_x_i_data_write : STD_LOGIC;
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_y_i_data_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_y_i_data_write : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_start : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_done : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_continue : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_idle : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_ready : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_in_sobel_x_data_1_read : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_right_clipped_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_right_clipped_write : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_sbmstate_preFilterCap_read : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_height_read : STD_LOGIC;
    signal xFImageClip_600_800_1_2_4_0_3_0_800_U0_width_read : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_start : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_done : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_continue : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_idle : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_ready : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_U0_in_sobel_y_i_data_read : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_U0_height_read : STD_LOGIC;
    signal xFReadOutStream_600_800_1_2_4_0_3_800_U0_width_read : STD_LOGIC;
    signal xFSADBlockMatching_U0_ap_start : STD_LOGIC;
    signal xFSADBlockMatching_U0_ap_done : STD_LOGIC;
    signal xFSADBlockMatching_U0_ap_continue : STD_LOGIC;
    signal xFSADBlockMatching_U0_ap_idle : STD_LOGIC;
    signal xFSADBlockMatching_U0_ap_ready : STD_LOGIC;
    signal xFSADBlockMatching_U0_start_out : STD_LOGIC;
    signal xFSADBlockMatching_U0_start_write : STD_LOGIC;
    signal xFSADBlockMatching_U0_left_clipped_read : STD_LOGIC;
    signal xFSADBlockMatching_U0_right_clipped_read : STD_LOGIC;
    signal xFSADBlockMatching_U0_p_disp_strm_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSADBlockMatching_U0_p_disp_strm_write : STD_LOGIC;
    signal xFSADBlockMatching_U0_state_preFilterCap_read : STD_LOGIC;
    signal xFSADBlockMatching_U0_state_textureThreshold_read : STD_LOGIC;
    signal xFSADBlockMatching_U0_state_uniquenessRatio_read : STD_LOGIC;
    signal xFSADBlockMatching_U0_height_read : STD_LOGIC;
    signal xFSADBlockMatching_U0_width_read : STD_LOGIC;
    signal xFSADBlockMatching_U0_height_c_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSADBlockMatching_U0_height_c_write : STD_LOGIC;
    signal xFSADBlockMatching_U0_width_c_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSADBlockMatching_U0_width_c_write : STD_LOGIC;
    signal xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_start : STD_LOGIC;
    signal xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_done : STD_LOGIC;
    signal xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_continue : STD_LOGIC;
    signal xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_idle : STD_LOGIC;
    signal xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_ready : STD_LOGIC;
    signal xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_width_read : STD_LOGIC;
    signal xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_height_read : STD_LOGIC;
    signal xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_p_disp_strm_read : STD_LOGIC;
    signal xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_img_disp16u_data_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_img_disp16u_data_write : STD_LOGIC;
    signal sbmstate_preFilterCap_c18_full_n : STD_LOGIC;
    signal sbmstate_preFilterCap_c18_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal sbmstate_preFilterCap_c18_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal sbmstate_preFilterCap_c18_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal sbmstate_preFilterCap_c18_empty_n : STD_LOGIC;
    signal sbmstate_preFilterCap_c19_full_n : STD_LOGIC;
    signal sbmstate_preFilterCap_c19_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal sbmstate_preFilterCap_c19_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal sbmstate_preFilterCap_c19_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal sbmstate_preFilterCap_c19_empty_n : STD_LOGIC;
    signal sbmstate_textureThreshold_c_full_n : STD_LOGIC;
    signal sbmstate_textureThreshold_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal sbmstate_textureThreshold_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal sbmstate_textureThreshold_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal sbmstate_textureThreshold_c_empty_n : STD_LOGIC;
    signal sbmstate_uniquenessRatio_c_full_n : STD_LOGIC;
    signal sbmstate_uniquenessRatio_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal sbmstate_uniquenessRatio_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal sbmstate_uniquenessRatio_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal sbmstate_uniquenessRatio_c_empty_n : STD_LOGIC;
    signal height_c21_full_n : STD_LOGIC;
    signal height_c21_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal height_c21_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal height_c21_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal height_c21_empty_n : STD_LOGIC;
    signal height_c22_full_n : STD_LOGIC;
    signal height_c22_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal height_c22_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal height_c22_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal height_c22_empty_n : STD_LOGIC;
    signal height_c23_full_n : STD_LOGIC;
    signal height_c23_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal height_c23_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal height_c23_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal height_c23_empty_n : STD_LOGIC;
    signal height_c24_full_n : STD_LOGIC;
    signal height_c24_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal height_c24_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal height_c24_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal height_c24_empty_n : STD_LOGIC;
    signal width_c26_full_n : STD_LOGIC;
    signal width_c26_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal width_c26_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal width_c26_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal width_c26_empty_n : STD_LOGIC;
    signal width_c27_full_n : STD_LOGIC;
    signal width_c27_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal width_c27_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal width_c27_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal width_c27_empty_n : STD_LOGIC;
    signal width_c28_full_n : STD_LOGIC;
    signal width_c28_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal width_c28_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal width_c28_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal width_c28_empty_n : STD_LOGIC;
    signal width_c29_full_n : STD_LOGIC;
    signal width_c29_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal width_c29_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal width_c29_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal width_c29_empty_n : STD_LOGIC;
    signal in_sobel_x_data_full_n : STD_LOGIC;
    signal in_sobel_x_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal in_sobel_x_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal in_sobel_x_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal in_sobel_x_data_empty_n : STD_LOGIC;
    signal in_sobel_y_data_full_n : STD_LOGIC;
    signal in_sobel_y_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal in_sobel_y_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal in_sobel_y_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal in_sobel_y_data_empty_n : STD_LOGIC;
    signal left_clipped_full_n : STD_LOGIC;
    signal left_clipped_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal left_clipped_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal left_clipped_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal left_clipped_empty_n : STD_LOGIC;
    signal sbmstate_preFilterCap_c_full_n : STD_LOGIC;
    signal sbmstate_preFilterCap_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal sbmstate_preFilterCap_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal sbmstate_preFilterCap_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal sbmstate_preFilterCap_c_empty_n : STD_LOGIC;
    signal height_c20_full_n : STD_LOGIC;
    signal height_c20_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal height_c20_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal height_c20_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal height_c20_empty_n : STD_LOGIC;
    signal width_c25_full_n : STD_LOGIC;
    signal width_c25_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal width_c25_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal width_c25_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal width_c25_empty_n : STD_LOGIC;
    signal in_sobel_x_data_1_full_n : STD_LOGIC;
    signal in_sobel_x_data_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal in_sobel_x_data_1_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal in_sobel_x_data_1_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal in_sobel_x_data_1_empty_n : STD_LOGIC;
    signal in_sobel_y_data_1_full_n : STD_LOGIC;
    signal in_sobel_y_data_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal in_sobel_y_data_1_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal in_sobel_y_data_1_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal in_sobel_y_data_1_empty_n : STD_LOGIC;
    signal right_clipped_full_n : STD_LOGIC;
    signal right_clipped_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal right_clipped_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal right_clipped_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal right_clipped_empty_n : STD_LOGIC;
    signal p_disp_strm_full_n : STD_LOGIC;
    signal p_disp_strm_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal p_disp_strm_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal p_disp_strm_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal p_disp_strm_empty_n : STD_LOGIC;
    signal height_c_full_n : STD_LOGIC;
    signal height_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal height_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal height_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal height_c_empty_n : STD_LOGIC;
    signal width_c_full_n : STD_LOGIC;
    signal width_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal width_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal width_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal width_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_entry_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_entry_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready : STD_LOGIC;
    signal start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_full_n : STD_LOGIC;
    signal start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_empty_n : STD_LOGIC;
    signal start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_full_n : STD_LOGIC;
    signal start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_empty_n : STD_LOGIC;
    signal start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_full_n : STD_LOGIC;
    signal start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_empty_n : STD_LOGIC;
    signal start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_full_n : STD_LOGIC;
    signal start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_empty_n : STD_LOGIC;
    signal start_for_xFSADBlockMatching_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSADBlockMatching_U0_full_n : STD_LOGIC;
    signal start_for_xFSADBlockMatching_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSADBlockMatching_U0_empty_n : STD_LOGIC;
    signal start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_full_n : STD_LOGIC;
    signal start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component stereolbm_axis_cambm_entry_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_preFilterCap_c18_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_preFilterCap_c18_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_preFilterCap_c18_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_preFilterCap_c18_full_n : IN STD_LOGIC;
        sbmstate_preFilterCap_c18_write : OUT STD_LOGIC;
        sbmstate_preFilterCap_c19_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_preFilterCap_c19_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_preFilterCap_c19_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_preFilterCap_c19_full_n : IN STD_LOGIC;
        sbmstate_preFilterCap_c19_write : OUT STD_LOGIC;
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_textureThreshold_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_textureThreshold_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_textureThreshold_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_textureThreshold_c_full_n : IN STD_LOGIC;
        sbmstate_textureThreshold_c_write : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_uniquenessRatio_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_uniquenessRatio_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_uniquenessRatio_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_uniquenessRatio_c_full_n : IN STD_LOGIC;
        sbmstate_uniquenessRatio_c_write : OUT STD_LOGIC;
        height : IN STD_LOGIC_VECTOR (15 downto 0);
        height_c21_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        height_c21_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_c21_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_c21_full_n : IN STD_LOGIC;
        height_c21_write : OUT STD_LOGIC;
        height_c22_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        height_c22_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_c22_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_c22_full_n : IN STD_LOGIC;
        height_c22_write : OUT STD_LOGIC;
        height_c23_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        height_c23_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_c23_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_c23_full_n : IN STD_LOGIC;
        height_c23_write : OUT STD_LOGIC;
        height_c24_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        height_c24_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_c24_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_c24_full_n : IN STD_LOGIC;
        height_c24_write : OUT STD_LOGIC;
        width : IN STD_LOGIC_VECTOR (15 downto 0);
        width_c26_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        width_c26_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_c26_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_c26_full_n : IN STD_LOGIC;
        width_c26_write : OUT STD_LOGIC;
        width_c27_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        width_c27_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_c27_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_c27_full_n : IN STD_LOGIC;
        width_c27_write : OUT STD_LOGIC;
        width_c28_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        width_c28_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_c28_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_c28_full_n : IN STD_LOGIC;
        width_c28_write : OUT STD_LOGIC;
        width_c29_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        width_c29_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_c29_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_c29_full_n : IN STD_LOGIC;
        width_c29_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_Sobel_0_3_0_3_600_800_1_false_2_2_2_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        leftRemappedMat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        leftRemappedMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        leftRemappedMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        leftRemappedMat_data_empty_n : IN STD_LOGIC;
        leftRemappedMat_data_read : OUT STD_LOGIC;
        in_sobel_x_i3_data_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        in_sobel_x_i3_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_x_i3_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_x_i3_data_full_n : IN STD_LOGIC;
        in_sobel_x_i3_data_write : OUT STD_LOGIC;
        in_sobel_y_i4_data_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        in_sobel_y_i4_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_y_i4_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_y_i4_data_full_n : IN STD_LOGIC;
        in_sobel_y_i4_data_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_sobel_x_data_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_sobel_x_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_x_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_x_data_empty_n : IN STD_LOGIC;
        in_sobel_x_data_read : OUT STD_LOGIC;
        left_clipped_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        left_clipped_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        left_clipped_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        left_clipped_full_n : IN STD_LOGIC;
        left_clipped_write : OUT STD_LOGIC;
        sbmstate_preFilterCap_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_preFilterCap_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_preFilterCap_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_preFilterCap_empty_n : IN STD_LOGIC;
        sbmstate_preFilterCap_read : OUT STD_LOGIC;
        height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        height_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_empty_n : IN STD_LOGIC;
        height_read : OUT STD_LOGIC;
        width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        width_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_empty_n : IN STD_LOGIC;
        width_read : OUT STD_LOGIC;
        sbmstate_preFilterCap_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_preFilterCap_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sbmstate_preFilterCap_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sbmstate_preFilterCap_c_full_n : IN STD_LOGIC;
        sbmstate_preFilterCap_c_write : OUT STD_LOGIC;
        height_c20_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        height_c20_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        height_c20_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        height_c20_full_n : IN STD_LOGIC;
        height_c20_write : OUT STD_LOGIC;
        width_c25_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        width_c25_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        width_c25_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        width_c25_full_n : IN STD_LOGIC;
        width_c25_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_xFReadOutStream_600_800_1_2_4_0_3_800_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_sobel_y_i4_data_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_sobel_y_i4_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_y_i4_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_y_i4_data_empty_n : IN STD_LOGIC;
        in_sobel_y_i4_data_read : OUT STD_LOGIC;
        height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        height_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_empty_n : IN STD_LOGIC;
        height_read : OUT STD_LOGIC;
        width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        width_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_empty_n : IN STD_LOGIC;
        width_read : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_Sobel_0_3_0_3_600_800_1_false_2_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        rightRemappedMat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        rightRemappedMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        rightRemappedMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        rightRemappedMat_data_empty_n : IN STD_LOGIC;
        rightRemappedMat_data_read : OUT STD_LOGIC;
        in_sobel_x_i_data_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        in_sobel_x_i_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_x_i_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_x_i_data_full_n : IN STD_LOGIC;
        in_sobel_x_i_data_write : OUT STD_LOGIC;
        in_sobel_y_i_data_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        in_sobel_y_i_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_y_i_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_y_i_data_full_n : IN STD_LOGIC;
        in_sobel_y_i_data_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_sobel_x_data_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_sobel_x_data_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_x_data_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_x_data_1_empty_n : IN STD_LOGIC;
        in_sobel_x_data_1_read : OUT STD_LOGIC;
        right_clipped_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        right_clipped_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        right_clipped_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        right_clipped_full_n : IN STD_LOGIC;
        right_clipped_write : OUT STD_LOGIC;
        sbmstate_preFilterCap_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_preFilterCap_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_preFilterCap_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        sbmstate_preFilterCap_empty_n : IN STD_LOGIC;
        sbmstate_preFilterCap_read : OUT STD_LOGIC;
        height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        height_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_empty_n : IN STD_LOGIC;
        height_read : OUT STD_LOGIC;
        width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        width_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_empty_n : IN STD_LOGIC;
        width_read : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_xFReadOutStream_600_800_1_2_4_0_3_800_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_sobel_y_i_data_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_sobel_y_i_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_y_i_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_y_i_data_empty_n : IN STD_LOGIC;
        in_sobel_y_i_data_read : OUT STD_LOGIC;
        height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        height_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_empty_n : IN STD_LOGIC;
        height_read : OUT STD_LOGIC;
        width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        width_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_empty_n : IN STD_LOGIC;
        width_read : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_xFSADBlockMatching IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        left_clipped_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        left_clipped_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        left_clipped_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        left_clipped_empty_n : IN STD_LOGIC;
        left_clipped_read : OUT STD_LOGIC;
        right_clipped_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        right_clipped_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        right_clipped_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        right_clipped_empty_n : IN STD_LOGIC;
        right_clipped_read : OUT STD_LOGIC;
        p_disp_strm_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_disp_strm_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_disp_strm_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_disp_strm_full_n : IN STD_LOGIC;
        p_disp_strm_write : OUT STD_LOGIC;
        state_preFilterCap_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        state_preFilterCap_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        state_preFilterCap_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        state_preFilterCap_empty_n : IN STD_LOGIC;
        state_preFilterCap_read : OUT STD_LOGIC;
        state_textureThreshold_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        state_textureThreshold_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        state_textureThreshold_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        state_textureThreshold_empty_n : IN STD_LOGIC;
        state_textureThreshold_read : OUT STD_LOGIC;
        state_uniquenessRatio_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        state_uniquenessRatio_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        state_uniquenessRatio_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        state_uniquenessRatio_empty_n : IN STD_LOGIC;
        state_uniquenessRatio_read : OUT STD_LOGIC;
        height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        height_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        height_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        height_empty_n : IN STD_LOGIC;
        height_read : OUT STD_LOGIC;
        width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        width_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        width_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        width_empty_n : IN STD_LOGIC;
        width_read : OUT STD_LOGIC;
        height_c_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        height_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        height_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        height_c_full_n : IN STD_LOGIC;
        height_c_write : OUT STD_LOGIC;
        width_c_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        width_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        width_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        width_c_full_n : IN STD_LOGIC;
        width_c_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        width_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        width_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        width_empty_n : IN STD_LOGIC;
        width_read : OUT STD_LOGIC;
        height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        height_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        height_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        height_empty_n : IN STD_LOGIC;
        height_read : OUT STD_LOGIC;
        p_disp_strm_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_disp_strm_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_disp_strm_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_disp_strm_empty_n : IN STD_LOGIC;
        p_disp_strm_read : OUT STD_LOGIC;
        img_disp16u_data_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_disp16u_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp16u_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_disp16u_data_full_n : IN STD_LOGIC;
        img_disp16u_data_write : OUT STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w32_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w32_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w16_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w16_d2_S_x0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_start_for_xFSADBlockMatching_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component stereolbm_axis_cambm_start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    entry_proc_U0 : component stereolbm_axis_cambm_entry_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => entry_proc_U0_ap_start,
        start_full_n => entry_proc_U0_start_full_n,
        ap_done => entry_proc_U0_ap_done,
        ap_continue => entry_proc_U0_ap_continue,
        ap_idle => entry_proc_U0_ap_idle,
        ap_ready => entry_proc_U0_ap_ready,
        start_out => entry_proc_U0_start_out,
        start_write => entry_proc_U0_start_write,
        p_read => p_read4,
        sbmstate_preFilterCap_c18_din => entry_proc_U0_sbmstate_preFilterCap_c18_din,
        sbmstate_preFilterCap_c18_num_data_valid => sbmstate_preFilterCap_c18_num_data_valid,
        sbmstate_preFilterCap_c18_fifo_cap => sbmstate_preFilterCap_c18_fifo_cap,
        sbmstate_preFilterCap_c18_full_n => sbmstate_preFilterCap_c18_full_n,
        sbmstate_preFilterCap_c18_write => entry_proc_U0_sbmstate_preFilterCap_c18_write,
        sbmstate_preFilterCap_c19_din => entry_proc_U0_sbmstate_preFilterCap_c19_din,
        sbmstate_preFilterCap_c19_num_data_valid => sbmstate_preFilterCap_c19_num_data_valid,
        sbmstate_preFilterCap_c19_fifo_cap => sbmstate_preFilterCap_c19_fifo_cap,
        sbmstate_preFilterCap_c19_full_n => sbmstate_preFilterCap_c19_full_n,
        sbmstate_preFilterCap_c19_write => entry_proc_U0_sbmstate_preFilterCap_c19_write,
        p_read1 => p_read5,
        sbmstate_textureThreshold_c_din => entry_proc_U0_sbmstate_textureThreshold_c_din,
        sbmstate_textureThreshold_c_num_data_valid => sbmstate_textureThreshold_c_num_data_valid,
        sbmstate_textureThreshold_c_fifo_cap => sbmstate_textureThreshold_c_fifo_cap,
        sbmstate_textureThreshold_c_full_n => sbmstate_textureThreshold_c_full_n,
        sbmstate_textureThreshold_c_write => entry_proc_U0_sbmstate_textureThreshold_c_write,
        p_read2 => p_read6,
        sbmstate_uniquenessRatio_c_din => entry_proc_U0_sbmstate_uniquenessRatio_c_din,
        sbmstate_uniquenessRatio_c_num_data_valid => sbmstate_uniquenessRatio_c_num_data_valid,
        sbmstate_uniquenessRatio_c_fifo_cap => sbmstate_uniquenessRatio_c_fifo_cap,
        sbmstate_uniquenessRatio_c_full_n => sbmstate_uniquenessRatio_c_full_n,
        sbmstate_uniquenessRatio_c_write => entry_proc_U0_sbmstate_uniquenessRatio_c_write,
        height => height,
        height_c21_din => entry_proc_U0_height_c21_din,
        height_c21_num_data_valid => height_c21_num_data_valid,
        height_c21_fifo_cap => height_c21_fifo_cap,
        height_c21_full_n => height_c21_full_n,
        height_c21_write => entry_proc_U0_height_c21_write,
        height_c22_din => entry_proc_U0_height_c22_din,
        height_c22_num_data_valid => height_c22_num_data_valid,
        height_c22_fifo_cap => height_c22_fifo_cap,
        height_c22_full_n => height_c22_full_n,
        height_c22_write => entry_proc_U0_height_c22_write,
        height_c23_din => entry_proc_U0_height_c23_din,
        height_c23_num_data_valid => height_c23_num_data_valid,
        height_c23_fifo_cap => height_c23_fifo_cap,
        height_c23_full_n => height_c23_full_n,
        height_c23_write => entry_proc_U0_height_c23_write,
        height_c24_din => entry_proc_U0_height_c24_din,
        height_c24_num_data_valid => height_c24_num_data_valid,
        height_c24_fifo_cap => height_c24_fifo_cap,
        height_c24_full_n => height_c24_full_n,
        height_c24_write => entry_proc_U0_height_c24_write,
        width => width,
        width_c26_din => entry_proc_U0_width_c26_din,
        width_c26_num_data_valid => width_c26_num_data_valid,
        width_c26_fifo_cap => width_c26_fifo_cap,
        width_c26_full_n => width_c26_full_n,
        width_c26_write => entry_proc_U0_width_c26_write,
        width_c27_din => entry_proc_U0_width_c27_din,
        width_c27_num_data_valid => width_c27_num_data_valid,
        width_c27_fifo_cap => width_c27_fifo_cap,
        width_c27_full_n => width_c27_full_n,
        width_c27_write => entry_proc_U0_width_c27_write,
        width_c28_din => entry_proc_U0_width_c28_din,
        width_c28_num_data_valid => width_c28_num_data_valid,
        width_c28_fifo_cap => width_c28_fifo_cap,
        width_c28_full_n => width_c28_full_n,
        width_c28_write => entry_proc_U0_width_c28_write,
        width_c29_din => entry_proc_U0_width_c29_din,
        width_c29_num_data_valid => width_c29_num_data_valid,
        width_c29_fifo_cap => width_c29_fifo_cap,
        width_c29_full_n => width_c29_full_n,
        width_c29_write => entry_proc_U0_width_c29_write);

    Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0 : component stereolbm_axis_cambm_Sobel_0_3_0_3_600_800_1_false_2_2_2_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_start,
        ap_done => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_done,
        ap_continue => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_continue,
        ap_idle => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_idle,
        ap_ready => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready,
        p_read => p_read,
        p_read1 => p_read1,
        leftRemappedMat_data_dout => leftRemappedMat_data_dout,
        leftRemappedMat_data_num_data_valid => ap_const_lv2_0,
        leftRemappedMat_data_fifo_cap => ap_const_lv2_0,
        leftRemappedMat_data_empty_n => leftRemappedMat_data_empty_n,
        leftRemappedMat_data_read => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_leftRemappedMat_data_read,
        in_sobel_x_i3_data_din => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_x_i3_data_din,
        in_sobel_x_i3_data_num_data_valid => in_sobel_x_data_num_data_valid,
        in_sobel_x_i3_data_fifo_cap => in_sobel_x_data_fifo_cap,
        in_sobel_x_i3_data_full_n => in_sobel_x_data_full_n,
        in_sobel_x_i3_data_write => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_x_i3_data_write,
        in_sobel_y_i4_data_din => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_y_i4_data_din,
        in_sobel_y_i4_data_num_data_valid => in_sobel_y_data_num_data_valid,
        in_sobel_y_i4_data_fifo_cap => in_sobel_y_data_fifo_cap,
        in_sobel_y_i4_data_full_n => in_sobel_y_data_full_n,
        in_sobel_y_i4_data_write => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_y_i4_data_write);

    xFImageClip_600_800_1_2_4_0_3_0_800_4_U0 : component stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_start,
        ap_done => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_done,
        ap_continue => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_continue,
        ap_idle => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_idle,
        ap_ready => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_ready,
        in_sobel_x_data_dout => in_sobel_x_data_dout,
        in_sobel_x_data_num_data_valid => in_sobel_x_data_num_data_valid,
        in_sobel_x_data_fifo_cap => in_sobel_x_data_fifo_cap,
        in_sobel_x_data_empty_n => in_sobel_x_data_empty_n,
        in_sobel_x_data_read => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_in_sobel_x_data_read,
        left_clipped_din => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_left_clipped_din,
        left_clipped_num_data_valid => left_clipped_num_data_valid,
        left_clipped_fifo_cap => left_clipped_fifo_cap,
        left_clipped_full_n => left_clipped_full_n,
        left_clipped_write => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_left_clipped_write,
        sbmstate_preFilterCap_dout => sbmstate_preFilterCap_c19_dout,
        sbmstate_preFilterCap_num_data_valid => sbmstate_preFilterCap_c19_num_data_valid,
        sbmstate_preFilterCap_fifo_cap => sbmstate_preFilterCap_c19_fifo_cap,
        sbmstate_preFilterCap_empty_n => sbmstate_preFilterCap_c19_empty_n,
        sbmstate_preFilterCap_read => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_sbmstate_preFilterCap_read,
        height_dout => height_c24_dout,
        height_num_data_valid => height_c24_num_data_valid,
        height_fifo_cap => height_c24_fifo_cap,
        height_empty_n => height_c24_empty_n,
        height_read => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_height_read,
        width_dout => width_c29_dout,
        width_num_data_valid => width_c29_num_data_valid,
        width_fifo_cap => width_c29_fifo_cap,
        width_empty_n => width_c29_empty_n,
        width_read => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_width_read,
        sbmstate_preFilterCap_c_din => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_sbmstate_preFilterCap_c_din,
        sbmstate_preFilterCap_c_num_data_valid => sbmstate_preFilterCap_c_num_data_valid,
        sbmstate_preFilterCap_c_fifo_cap => sbmstate_preFilterCap_c_fifo_cap,
        sbmstate_preFilterCap_c_full_n => sbmstate_preFilterCap_c_full_n,
        sbmstate_preFilterCap_c_write => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_sbmstate_preFilterCap_c_write,
        height_c20_din => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_height_c20_din,
        height_c20_num_data_valid => height_c20_num_data_valid,
        height_c20_fifo_cap => height_c20_fifo_cap,
        height_c20_full_n => height_c20_full_n,
        height_c20_write => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_height_c20_write,
        width_c25_din => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_width_c25_din,
        width_c25_num_data_valid => width_c25_num_data_valid,
        width_c25_fifo_cap => width_c25_fifo_cap,
        width_c25_full_n => width_c25_full_n,
        width_c25_write => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_width_c25_write);

    xFReadOutStream_600_800_1_2_4_0_3_800_5_U0 : component stereolbm_axis_cambm_xFReadOutStream_600_800_1_2_4_0_3_800_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_start,
        ap_done => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_done,
        ap_continue => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_continue,
        ap_idle => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_idle,
        ap_ready => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_ready,
        in_sobel_y_i4_data_dout => in_sobel_y_data_dout,
        in_sobel_y_i4_data_num_data_valid => in_sobel_y_data_num_data_valid,
        in_sobel_y_i4_data_fifo_cap => in_sobel_y_data_fifo_cap,
        in_sobel_y_i4_data_empty_n => in_sobel_y_data_empty_n,
        in_sobel_y_i4_data_read => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_in_sobel_y_i4_data_read,
        height_dout => height_c23_dout,
        height_num_data_valid => height_c23_num_data_valid,
        height_fifo_cap => height_c23_fifo_cap,
        height_empty_n => height_c23_empty_n,
        height_read => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_height_read,
        width_dout => width_c28_dout,
        width_num_data_valid => width_c28_num_data_valid,
        width_fifo_cap => width_c28_fifo_cap,
        width_empty_n => width_c28_empty_n,
        width_read => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_width_read);

    Sobel_0_3_0_3_600_800_1_false_2_2_2_U0 : component stereolbm_axis_cambm_Sobel_0_3_0_3_600_800_1_false_2_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_start,
        ap_done => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_done,
        ap_continue => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_continue,
        ap_idle => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_idle,
        ap_ready => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready,
        p_read => p_read2,
        p_read1 => p_read3,
        rightRemappedMat_data_dout => rightRemappedMat_data_dout,
        rightRemappedMat_data_num_data_valid => ap_const_lv2_0,
        rightRemappedMat_data_fifo_cap => ap_const_lv2_0,
        rightRemappedMat_data_empty_n => rightRemappedMat_data_empty_n,
        rightRemappedMat_data_read => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_rightRemappedMat_data_read,
        in_sobel_x_i_data_din => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_x_i_data_din,
        in_sobel_x_i_data_num_data_valid => in_sobel_x_data_1_num_data_valid,
        in_sobel_x_i_data_fifo_cap => in_sobel_x_data_1_fifo_cap,
        in_sobel_x_i_data_full_n => in_sobel_x_data_1_full_n,
        in_sobel_x_i_data_write => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_x_i_data_write,
        in_sobel_y_i_data_din => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_y_i_data_din,
        in_sobel_y_i_data_num_data_valid => in_sobel_y_data_1_num_data_valid,
        in_sobel_y_i_data_fifo_cap => in_sobel_y_data_1_fifo_cap,
        in_sobel_y_i_data_full_n => in_sobel_y_data_1_full_n,
        in_sobel_y_i_data_write => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_y_i_data_write);

    xFImageClip_600_800_1_2_4_0_3_0_800_U0 : component stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_start,
        ap_done => xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_done,
        ap_continue => xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_continue,
        ap_idle => xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_idle,
        ap_ready => xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_ready,
        in_sobel_x_data_1_dout => in_sobel_x_data_1_dout,
        in_sobel_x_data_1_num_data_valid => in_sobel_x_data_1_num_data_valid,
        in_sobel_x_data_1_fifo_cap => in_sobel_x_data_1_fifo_cap,
        in_sobel_x_data_1_empty_n => in_sobel_x_data_1_empty_n,
        in_sobel_x_data_1_read => xFImageClip_600_800_1_2_4_0_3_0_800_U0_in_sobel_x_data_1_read,
        right_clipped_din => xFImageClip_600_800_1_2_4_0_3_0_800_U0_right_clipped_din,
        right_clipped_num_data_valid => right_clipped_num_data_valid,
        right_clipped_fifo_cap => right_clipped_fifo_cap,
        right_clipped_full_n => right_clipped_full_n,
        right_clipped_write => xFImageClip_600_800_1_2_4_0_3_0_800_U0_right_clipped_write,
        sbmstate_preFilterCap_dout => sbmstate_preFilterCap_c18_dout,
        sbmstate_preFilterCap_num_data_valid => sbmstate_preFilterCap_c18_num_data_valid,
        sbmstate_preFilterCap_fifo_cap => sbmstate_preFilterCap_c18_fifo_cap,
        sbmstate_preFilterCap_empty_n => sbmstate_preFilterCap_c18_empty_n,
        sbmstate_preFilterCap_read => xFImageClip_600_800_1_2_4_0_3_0_800_U0_sbmstate_preFilterCap_read,
        height_dout => height_c22_dout,
        height_num_data_valid => height_c22_num_data_valid,
        height_fifo_cap => height_c22_fifo_cap,
        height_empty_n => height_c22_empty_n,
        height_read => xFImageClip_600_800_1_2_4_0_3_0_800_U0_height_read,
        width_dout => width_c27_dout,
        width_num_data_valid => width_c27_num_data_valid,
        width_fifo_cap => width_c27_fifo_cap,
        width_empty_n => width_c27_empty_n,
        width_read => xFImageClip_600_800_1_2_4_0_3_0_800_U0_width_read);

    xFReadOutStream_600_800_1_2_4_0_3_800_U0 : component stereolbm_axis_cambm_xFReadOutStream_600_800_1_2_4_0_3_800_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_start,
        ap_done => xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_done,
        ap_continue => xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_continue,
        ap_idle => xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_idle,
        ap_ready => xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_ready,
        in_sobel_y_i_data_dout => in_sobel_y_data_1_dout,
        in_sobel_y_i_data_num_data_valid => in_sobel_y_data_1_num_data_valid,
        in_sobel_y_i_data_fifo_cap => in_sobel_y_data_1_fifo_cap,
        in_sobel_y_i_data_empty_n => in_sobel_y_data_1_empty_n,
        in_sobel_y_i_data_read => xFReadOutStream_600_800_1_2_4_0_3_800_U0_in_sobel_y_i_data_read,
        height_dout => height_c21_dout,
        height_num_data_valid => height_c21_num_data_valid,
        height_fifo_cap => height_c21_fifo_cap,
        height_empty_n => height_c21_empty_n,
        height_read => xFReadOutStream_600_800_1_2_4_0_3_800_U0_height_read,
        width_dout => width_c26_dout,
        width_num_data_valid => width_c26_num_data_valid,
        width_fifo_cap => width_c26_fifo_cap,
        width_empty_n => width_c26_empty_n,
        width_read => xFReadOutStream_600_800_1_2_4_0_3_800_U0_width_read);

    xFSADBlockMatching_U0 : component stereolbm_axis_cambm_xFSADBlockMatching
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFSADBlockMatching_U0_ap_start,
        start_full_n => start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_full_n,
        ap_done => xFSADBlockMatching_U0_ap_done,
        ap_continue => xFSADBlockMatching_U0_ap_continue,
        ap_idle => xFSADBlockMatching_U0_ap_idle,
        ap_ready => xFSADBlockMatching_U0_ap_ready,
        start_out => xFSADBlockMatching_U0_start_out,
        start_write => xFSADBlockMatching_U0_start_write,
        left_clipped_dout => left_clipped_dout,
        left_clipped_num_data_valid => left_clipped_num_data_valid,
        left_clipped_fifo_cap => left_clipped_fifo_cap,
        left_clipped_empty_n => left_clipped_empty_n,
        left_clipped_read => xFSADBlockMatching_U0_left_clipped_read,
        right_clipped_dout => right_clipped_dout,
        right_clipped_num_data_valid => right_clipped_num_data_valid,
        right_clipped_fifo_cap => right_clipped_fifo_cap,
        right_clipped_empty_n => right_clipped_empty_n,
        right_clipped_read => xFSADBlockMatching_U0_right_clipped_read,
        p_disp_strm_din => xFSADBlockMatching_U0_p_disp_strm_din,
        p_disp_strm_num_data_valid => p_disp_strm_num_data_valid,
        p_disp_strm_fifo_cap => p_disp_strm_fifo_cap,
        p_disp_strm_full_n => p_disp_strm_full_n,
        p_disp_strm_write => xFSADBlockMatching_U0_p_disp_strm_write,
        state_preFilterCap_dout => sbmstate_preFilterCap_c_dout,
        state_preFilterCap_num_data_valid => sbmstate_preFilterCap_c_num_data_valid,
        state_preFilterCap_fifo_cap => sbmstate_preFilterCap_c_fifo_cap,
        state_preFilterCap_empty_n => sbmstate_preFilterCap_c_empty_n,
        state_preFilterCap_read => xFSADBlockMatching_U0_state_preFilterCap_read,
        state_textureThreshold_dout => sbmstate_textureThreshold_c_dout,
        state_textureThreshold_num_data_valid => sbmstate_textureThreshold_c_num_data_valid,
        state_textureThreshold_fifo_cap => sbmstate_textureThreshold_c_fifo_cap,
        state_textureThreshold_empty_n => sbmstate_textureThreshold_c_empty_n,
        state_textureThreshold_read => xFSADBlockMatching_U0_state_textureThreshold_read,
        state_uniquenessRatio_dout => sbmstate_uniquenessRatio_c_dout,
        state_uniquenessRatio_num_data_valid => sbmstate_uniquenessRatio_c_num_data_valid,
        state_uniquenessRatio_fifo_cap => sbmstate_uniquenessRatio_c_fifo_cap,
        state_uniquenessRatio_empty_n => sbmstate_uniquenessRatio_c_empty_n,
        state_uniquenessRatio_read => xFSADBlockMatching_U0_state_uniquenessRatio_read,
        height_dout => height_c20_dout,
        height_num_data_valid => height_c20_num_data_valid,
        height_fifo_cap => height_c20_fifo_cap,
        height_empty_n => height_c20_empty_n,
        height_read => xFSADBlockMatching_U0_height_read,
        width_dout => width_c25_dout,
        width_num_data_valid => width_c25_num_data_valid,
        width_fifo_cap => width_c25_fifo_cap,
        width_empty_n => width_c25_empty_n,
        width_read => xFSADBlockMatching_U0_width_read,
        height_c_din => xFSADBlockMatching_U0_height_c_din,
        height_c_num_data_valid => height_c_num_data_valid,
        height_c_fifo_cap => height_c_fifo_cap,
        height_c_full_n => height_c_full_n,
        height_c_write => xFSADBlockMatching_U0_height_c_write,
        width_c_din => xFSADBlockMatching_U0_width_c_din,
        width_c_num_data_valid => width_c_num_data_valid,
        width_c_fifo_cap => width_c_fifo_cap,
        width_c_full_n => width_c_full_n,
        width_c_write => xFSADBlockMatching_U0_width_c_write);

    xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0 : component stereolbm_axis_cambm_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_start,
        ap_done => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_done,
        ap_continue => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_continue,
        ap_idle => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_idle,
        ap_ready => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_ready,
        width_dout => width_c_dout,
        width_num_data_valid => width_c_num_data_valid,
        width_fifo_cap => width_c_fifo_cap,
        width_empty_n => width_c_empty_n,
        width_read => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_width_read,
        height_dout => height_c_dout,
        height_num_data_valid => height_c_num_data_valid,
        height_fifo_cap => height_c_fifo_cap,
        height_empty_n => height_c_empty_n,
        height_read => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_height_read,
        p_disp_strm_dout => p_disp_strm_dout,
        p_disp_strm_num_data_valid => p_disp_strm_num_data_valid,
        p_disp_strm_fifo_cap => p_disp_strm_fifo_cap,
        p_disp_strm_empty_n => p_disp_strm_empty_n,
        p_disp_strm_read => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_p_disp_strm_read,
        img_disp16u_data_din => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_img_disp16u_data_din,
        img_disp16u_data_num_data_valid => ap_const_lv2_0,
        img_disp16u_data_fifo_cap => ap_const_lv2_0,
        img_disp16u_data_full_n => img_disp16u_data_full_n,
        img_disp16u_data_write => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_img_disp16u_data_write);

    sbmstate_preFilterCap_c18_U : component stereolbm_axis_cambm_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_sbmstate_preFilterCap_c18_din,
        if_full_n => sbmstate_preFilterCap_c18_full_n,
        if_write => entry_proc_U0_sbmstate_preFilterCap_c18_write,
        if_dout => sbmstate_preFilterCap_c18_dout,
        if_num_data_valid => sbmstate_preFilterCap_c18_num_data_valid,
        if_fifo_cap => sbmstate_preFilterCap_c18_fifo_cap,
        if_empty_n => sbmstate_preFilterCap_c18_empty_n,
        if_read => xFImageClip_600_800_1_2_4_0_3_0_800_U0_sbmstate_preFilterCap_read);

    sbmstate_preFilterCap_c19_U : component stereolbm_axis_cambm_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_sbmstate_preFilterCap_c19_din,
        if_full_n => sbmstate_preFilterCap_c19_full_n,
        if_write => entry_proc_U0_sbmstate_preFilterCap_c19_write,
        if_dout => sbmstate_preFilterCap_c19_dout,
        if_num_data_valid => sbmstate_preFilterCap_c19_num_data_valid,
        if_fifo_cap => sbmstate_preFilterCap_c19_fifo_cap,
        if_empty_n => sbmstate_preFilterCap_c19_empty_n,
        if_read => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_sbmstate_preFilterCap_read);

    sbmstate_textureThreshold_c_U : component stereolbm_axis_cambm_fifo_w32_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_sbmstate_textureThreshold_c_din,
        if_full_n => sbmstate_textureThreshold_c_full_n,
        if_write => entry_proc_U0_sbmstate_textureThreshold_c_write,
        if_dout => sbmstate_textureThreshold_c_dout,
        if_num_data_valid => sbmstate_textureThreshold_c_num_data_valid,
        if_fifo_cap => sbmstate_textureThreshold_c_fifo_cap,
        if_empty_n => sbmstate_textureThreshold_c_empty_n,
        if_read => xFSADBlockMatching_U0_state_textureThreshold_read);

    sbmstate_uniquenessRatio_c_U : component stereolbm_axis_cambm_fifo_w32_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_sbmstate_uniquenessRatio_c_din,
        if_full_n => sbmstate_uniquenessRatio_c_full_n,
        if_write => entry_proc_U0_sbmstate_uniquenessRatio_c_write,
        if_dout => sbmstate_uniquenessRatio_c_dout,
        if_num_data_valid => sbmstate_uniquenessRatio_c_num_data_valid,
        if_fifo_cap => sbmstate_uniquenessRatio_c_fifo_cap,
        if_empty_n => sbmstate_uniquenessRatio_c_empty_n,
        if_read => xFSADBlockMatching_U0_state_uniquenessRatio_read);

    height_c21_U : component stereolbm_axis_cambm_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_height_c21_din,
        if_full_n => height_c21_full_n,
        if_write => entry_proc_U0_height_c21_write,
        if_dout => height_c21_dout,
        if_num_data_valid => height_c21_num_data_valid,
        if_fifo_cap => height_c21_fifo_cap,
        if_empty_n => height_c21_empty_n,
        if_read => xFReadOutStream_600_800_1_2_4_0_3_800_U0_height_read);

    height_c22_U : component stereolbm_axis_cambm_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_height_c22_din,
        if_full_n => height_c22_full_n,
        if_write => entry_proc_U0_height_c22_write,
        if_dout => height_c22_dout,
        if_num_data_valid => height_c22_num_data_valid,
        if_fifo_cap => height_c22_fifo_cap,
        if_empty_n => height_c22_empty_n,
        if_read => xFImageClip_600_800_1_2_4_0_3_0_800_U0_height_read);

    height_c23_U : component stereolbm_axis_cambm_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_height_c23_din,
        if_full_n => height_c23_full_n,
        if_write => entry_proc_U0_height_c23_write,
        if_dout => height_c23_dout,
        if_num_data_valid => height_c23_num_data_valid,
        if_fifo_cap => height_c23_fifo_cap,
        if_empty_n => height_c23_empty_n,
        if_read => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_height_read);

    height_c24_U : component stereolbm_axis_cambm_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_height_c24_din,
        if_full_n => height_c24_full_n,
        if_write => entry_proc_U0_height_c24_write,
        if_dout => height_c24_dout,
        if_num_data_valid => height_c24_num_data_valid,
        if_fifo_cap => height_c24_fifo_cap,
        if_empty_n => height_c24_empty_n,
        if_read => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_height_read);

    width_c26_U : component stereolbm_axis_cambm_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_width_c26_din,
        if_full_n => width_c26_full_n,
        if_write => entry_proc_U0_width_c26_write,
        if_dout => width_c26_dout,
        if_num_data_valid => width_c26_num_data_valid,
        if_fifo_cap => width_c26_fifo_cap,
        if_empty_n => width_c26_empty_n,
        if_read => xFReadOutStream_600_800_1_2_4_0_3_800_U0_width_read);

    width_c27_U : component stereolbm_axis_cambm_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_width_c27_din,
        if_full_n => width_c27_full_n,
        if_write => entry_proc_U0_width_c27_write,
        if_dout => width_c27_dout,
        if_num_data_valid => width_c27_num_data_valid,
        if_fifo_cap => width_c27_fifo_cap,
        if_empty_n => width_c27_empty_n,
        if_read => xFImageClip_600_800_1_2_4_0_3_0_800_U0_width_read);

    width_c28_U : component stereolbm_axis_cambm_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_width_c28_din,
        if_full_n => width_c28_full_n,
        if_write => entry_proc_U0_width_c28_write,
        if_dout => width_c28_dout,
        if_num_data_valid => width_c28_num_data_valid,
        if_fifo_cap => width_c28_fifo_cap,
        if_empty_n => width_c28_empty_n,
        if_read => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_width_read);

    width_c29_U : component stereolbm_axis_cambm_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_width_c29_din,
        if_full_n => width_c29_full_n,
        if_write => entry_proc_U0_width_c29_write,
        if_dout => width_c29_dout,
        if_num_data_valid => width_c29_num_data_valid,
        if_fifo_cap => width_c29_fifo_cap,
        if_empty_n => width_c29_empty_n,
        if_read => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_width_read);

    in_sobel_x_data_U : component stereolbm_axis_cambm_fifo_w16_d2_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_x_i3_data_din,
        if_full_n => in_sobel_x_data_full_n,
        if_write => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_x_i3_data_write,
        if_dout => in_sobel_x_data_dout,
        if_num_data_valid => in_sobel_x_data_num_data_valid,
        if_fifo_cap => in_sobel_x_data_fifo_cap,
        if_empty_n => in_sobel_x_data_empty_n,
        if_read => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_in_sobel_x_data_read);

    in_sobel_y_data_U : component stereolbm_axis_cambm_fifo_w16_d2_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_y_i4_data_din,
        if_full_n => in_sobel_y_data_full_n,
        if_write => Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_in_sobel_y_i4_data_write,
        if_dout => in_sobel_y_data_dout,
        if_num_data_valid => in_sobel_y_data_num_data_valid,
        if_fifo_cap => in_sobel_y_data_fifo_cap,
        if_empty_n => in_sobel_y_data_empty_n,
        if_read => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_in_sobel_y_i4_data_read);

    left_clipped_U : component stereolbm_axis_cambm_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_left_clipped_din,
        if_full_n => left_clipped_full_n,
        if_write => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_left_clipped_write,
        if_dout => left_clipped_dout,
        if_num_data_valid => left_clipped_num_data_valid,
        if_fifo_cap => left_clipped_fifo_cap,
        if_empty_n => left_clipped_empty_n,
        if_read => xFSADBlockMatching_U0_left_clipped_read);

    sbmstate_preFilterCap_c_U : component stereolbm_axis_cambm_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_sbmstate_preFilterCap_c_din,
        if_full_n => sbmstate_preFilterCap_c_full_n,
        if_write => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_sbmstate_preFilterCap_c_write,
        if_dout => sbmstate_preFilterCap_c_dout,
        if_num_data_valid => sbmstate_preFilterCap_c_num_data_valid,
        if_fifo_cap => sbmstate_preFilterCap_c_fifo_cap,
        if_empty_n => sbmstate_preFilterCap_c_empty_n,
        if_read => xFSADBlockMatching_U0_state_preFilterCap_read);

    height_c20_U : component stereolbm_axis_cambm_fifo_w16_d2_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_height_c20_din,
        if_full_n => height_c20_full_n,
        if_write => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_height_c20_write,
        if_dout => height_c20_dout,
        if_num_data_valid => height_c20_num_data_valid,
        if_fifo_cap => height_c20_fifo_cap,
        if_empty_n => height_c20_empty_n,
        if_read => xFSADBlockMatching_U0_height_read);

    width_c25_U : component stereolbm_axis_cambm_fifo_w16_d2_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_width_c25_din,
        if_full_n => width_c25_full_n,
        if_write => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_width_c25_write,
        if_dout => width_c25_dout,
        if_num_data_valid => width_c25_num_data_valid,
        if_fifo_cap => width_c25_fifo_cap,
        if_empty_n => width_c25_empty_n,
        if_read => xFSADBlockMatching_U0_width_read);

    in_sobel_x_data_1_U : component stereolbm_axis_cambm_fifo_w16_d2_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_x_i_data_din,
        if_full_n => in_sobel_x_data_1_full_n,
        if_write => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_x_i_data_write,
        if_dout => in_sobel_x_data_1_dout,
        if_num_data_valid => in_sobel_x_data_1_num_data_valid,
        if_fifo_cap => in_sobel_x_data_1_fifo_cap,
        if_empty_n => in_sobel_x_data_1_empty_n,
        if_read => xFImageClip_600_800_1_2_4_0_3_0_800_U0_in_sobel_x_data_1_read);

    in_sobel_y_data_1_U : component stereolbm_axis_cambm_fifo_w16_d2_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_y_i_data_din,
        if_full_n => in_sobel_y_data_1_full_n,
        if_write => Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_in_sobel_y_i_data_write,
        if_dout => in_sobel_y_data_1_dout,
        if_num_data_valid => in_sobel_y_data_1_num_data_valid,
        if_fifo_cap => in_sobel_y_data_1_fifo_cap,
        if_empty_n => in_sobel_y_data_1_empty_n,
        if_read => xFReadOutStream_600_800_1_2_4_0_3_800_U0_in_sobel_y_i_data_read);

    right_clipped_U : component stereolbm_axis_cambm_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFImageClip_600_800_1_2_4_0_3_0_800_U0_right_clipped_din,
        if_full_n => right_clipped_full_n,
        if_write => xFImageClip_600_800_1_2_4_0_3_0_800_U0_right_clipped_write,
        if_dout => right_clipped_dout,
        if_num_data_valid => right_clipped_num_data_valid,
        if_fifo_cap => right_clipped_fifo_cap,
        if_empty_n => right_clipped_empty_n,
        if_read => xFSADBlockMatching_U0_right_clipped_read);

    p_disp_strm_U : component stereolbm_axis_cambm_fifo_w16_d2_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSADBlockMatching_U0_p_disp_strm_din,
        if_full_n => p_disp_strm_full_n,
        if_write => xFSADBlockMatching_U0_p_disp_strm_write,
        if_dout => p_disp_strm_dout,
        if_num_data_valid => p_disp_strm_num_data_valid,
        if_fifo_cap => p_disp_strm_fifo_cap,
        if_empty_n => p_disp_strm_empty_n,
        if_read => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_p_disp_strm_read);

    height_c_U : component stereolbm_axis_cambm_fifo_w16_d2_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSADBlockMatching_U0_height_c_din,
        if_full_n => height_c_full_n,
        if_write => xFSADBlockMatching_U0_height_c_write,
        if_dout => height_c_dout,
        if_num_data_valid => height_c_num_data_valid,
        if_fifo_cap => height_c_fifo_cap,
        if_empty_n => height_c_empty_n,
        if_read => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_height_read);

    width_c_U : component stereolbm_axis_cambm_fifo_w16_d2_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSADBlockMatching_U0_width_c_din,
        if_full_n => width_c_full_n,
        if_write => xFSADBlockMatching_U0_width_c_write,
        if_dout => width_c_dout,
        if_num_data_valid => width_c_num_data_valid,
        if_fifo_cap => width_c_fifo_cap,
        if_empty_n => width_c_empty_n,
        if_read => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_width_read);

    start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_U : component stereolbm_axis_cambm_start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_din,
        if_full_n => start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_full_n,
        if_write => entry_proc_U0_start_write,
        if_dout => start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_dout,
        if_empty_n => start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_empty_n,
        if_read => xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_ready);

    start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_U : component stereolbm_axis_cambm_start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_din,
        if_full_n => start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_full_n,
        if_write => entry_proc_U0_start_write,
        if_dout => start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_dout,
        if_empty_n => start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_empty_n,
        if_read => xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_ready);

    start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_U : component stereolbm_axis_cambm_start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_din,
        if_full_n => start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_full_n,
        if_write => entry_proc_U0_start_write,
        if_dout => start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_dout,
        if_empty_n => start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_empty_n,
        if_read => xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_ready);

    start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_U : component stereolbm_axis_cambm_start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_din,
        if_full_n => start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_full_n,
        if_write => entry_proc_U0_start_write,
        if_dout => start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_dout,
        if_empty_n => start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_empty_n,
        if_read => xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_ready);

    start_for_xFSADBlockMatching_U0_U : component stereolbm_axis_cambm_start_for_xFSADBlockMatching_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFSADBlockMatching_U0_din,
        if_full_n => start_for_xFSADBlockMatching_U0_full_n,
        if_write => entry_proc_U0_start_write,
        if_dout => start_for_xFSADBlockMatching_U0_dout,
        if_empty_n => start_for_xFSADBlockMatching_U0_empty_n,
        if_read => xFSADBlockMatching_U0_ap_ready);

    start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_U : component stereolbm_axis_cambm_start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_din,
        if_full_n => start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_full_n,
        if_write => xFSADBlockMatching_U0_start_write,
        if_dout => start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_dout,
        if_empty_n => start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_empty_n,
        if_read => xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_ready);





    ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready <= ap_sync_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready <= ap_sync_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_entry_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_continue <= ap_const_logic_1;
    Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_start <= ((ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_continue <= ap_const_logic_1;
    Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_start <= ((ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready xor ap_const_logic_1) and ap_start);
    ap_done <= ap_sync_done;
    ap_idle <= (xFSADBlockMatching_U0_ap_idle and xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_idle and xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_idle and xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_idle and xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_idle and xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_idle and entry_proc_U0_ap_idle and Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_idle and Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready <= (ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready or Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready);
    ap_sync_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready <= (ap_sync_reg_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready or Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready);
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_done and xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_done and xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_done);
    ap_sync_entry_proc_U0_ap_ready <= (entry_proc_U0_ap_ready or ap_sync_reg_entry_proc_U0_ap_ready);
    ap_sync_ready <= (ap_sync_entry_proc_U0_ap_ready and ap_sync_Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_ap_ready and ap_sync_Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_ap_ready);
    entry_proc_U0_ap_continue <= ap_const_logic_1;
    entry_proc_U0_ap_start <= ((ap_sync_reg_entry_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    entry_proc_U0_start_full_n <= (start_for_xFSADBlockMatching_U0_full_n and start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_full_n and start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_full_n and start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_full_n and start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_full_n);
    img_disp16u_data_din <= xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_img_disp16u_data_din;
    img_disp16u_data_write <= xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_img_disp16u_data_write;
    leftRemappedMat_data_read <= Sobel_0_3_0_3_600_800_1_false_2_2_2_3_U0_leftRemappedMat_data_read;
    rightRemappedMat_data_read <= Sobel_0_3_0_3_600_800_1_false_2_2_2_U0_rightRemappedMat_data_read;
    start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFSADBlockMatching_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_continue <= ap_sync_continue;
    xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_ap_start <= start_for_xFFindStereoCorrespondenceLBMNO_Loop_VITIS_LOOP_816_1_proc13_U0_empty_n;
    xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_continue <= ap_const_logic_1;
    xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_ap_start <= start_for_xFImageClip_600_800_1_2_4_0_3_0_800_4_U0_empty_n;
    xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_continue <= ap_const_logic_1;
    xFImageClip_600_800_1_2_4_0_3_0_800_U0_ap_start <= start_for_xFImageClip_600_800_1_2_4_0_3_0_800_U0_empty_n;
    xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_continue <= ap_sync_continue;
    xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_ap_start <= start_for_xFReadOutStream_600_800_1_2_4_0_3_800_5_U0_empty_n;
    xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_continue <= ap_sync_continue;
    xFReadOutStream_600_800_1_2_4_0_3_800_U0_ap_start <= start_for_xFReadOutStream_600_800_1_2_4_0_3_800_U0_empty_n;
    xFSADBlockMatching_U0_ap_continue <= ap_const_logic_1;
    xFSADBlockMatching_U0_ap_start <= start_for_xFSADBlockMatching_U0_empty_n;
end behav;
