-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_sobel_x_data_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_sobel_x_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    in_sobel_x_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    in_sobel_x_data_empty_n : IN STD_LOGIC;
    in_sobel_x_data_read : OUT STD_LOGIC;
    left_clipped_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    left_clipped_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    left_clipped_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    left_clipped_full_n : IN STD_LOGIC;
    left_clipped_write : OUT STD_LOGIC;
    sbmstate_preFilterCap_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    sbmstate_preFilterCap_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    sbmstate_preFilterCap_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    sbmstate_preFilterCap_empty_n : IN STD_LOGIC;
    sbmstate_preFilterCap_read : OUT STD_LOGIC;
    height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    height_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    height_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    height_empty_n : IN STD_LOGIC;
    height_read : OUT STD_LOGIC;
    width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    width_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    width_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    width_empty_n : IN STD_LOGIC;
    width_read : OUT STD_LOGIC;
    sbmstate_preFilterCap_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sbmstate_preFilterCap_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    sbmstate_preFilterCap_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    sbmstate_preFilterCap_c_full_n : IN STD_LOGIC;
    sbmstate_preFilterCap_c_write : OUT STD_LOGIC;
    height_c20_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    height_c20_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    height_c20_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    height_c20_full_n : IN STD_LOGIC;
    height_c20_write : OUT STD_LOGIC;
    width_c25_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    width_c25_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    width_c25_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    width_c25_full_n : IN STD_LOGIC;
    width_c25_write : OUT STD_LOGIC );
end;


architecture behav of stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sbmstate_preFilterCap_blk_n : STD_LOGIC;
    signal height_blk_n : STD_LOGIC;
    signal width_blk_n : STD_LOGIC;
    signal sbmstate_preFilterCap_c_blk_n : STD_LOGIC;
    signal height_c20_blk_n : STD_LOGIC;
    signal width_c25_blk_n : STD_LOGIC;
    signal width_read_reg_168 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal height_read_reg_173 : STD_LOGIC_VECTOR (15 downto 0);
    signal sbmstate_preFilterCap_read_reg_179 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub25_i_fu_122_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub25_i_reg_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_128_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_reg_189 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_11_reg_194 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start : STD_LOGIC;
    signal grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_done : STD_LOGIC;
    signal grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_idle : STD_LOGIC;
    signal grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_ready : STD_LOGIC;
    signal grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_in_sobel_x_data_read : STD_LOGIC;
    signal grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_write : STD_LOGIC;
    signal grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln623_fu_145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_fu_62 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln623_fu_150_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln623_fu_141_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_sobel_x_data_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_sobel_x_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_x_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        in_sobel_x_data_empty_n : IN STD_LOGIC;
        in_sobel_x_data_read : OUT STD_LOGIC;
        left_clipped_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        left_clipped_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        left_clipped_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        left_clipped_full_n : IN STD_LOGIC;
        left_clipped_write : OUT STD_LOGIC;
        width_load : IN STD_LOGIC_VECTOR (15 downto 0);
        i : IN STD_LOGIC_VECTOR (14 downto 0);
        height_load : IN STD_LOGIC_VECTOR (15 downto 0);
        sub25_i : IN STD_LOGIC_VECTOR (31 downto 0);
        sbmstate_preFilterCap_load : IN STD_LOGIC_VECTOR (31 downto 0);
        cap_cast_i : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108 : component stereolbm_axis_cambm_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start,
        ap_done => grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_done,
        ap_idle => grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_idle,
        ap_ready => grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_ready,
        in_sobel_x_data_dout => in_sobel_x_data_dout,
        in_sobel_x_data_num_data_valid => ap_const_lv2_0,
        in_sobel_x_data_fifo_cap => ap_const_lv2_0,
        in_sobel_x_data_empty_n => in_sobel_x_data_empty_n,
        in_sobel_x_data_read => grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_in_sobel_x_data_read,
        left_clipped_din => grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_din,
        left_clipped_num_data_valid => ap_const_lv2_0,
        left_clipped_fifo_cap => ap_const_lv2_0,
        left_clipped_full_n => left_clipped_full_n,
        left_clipped_write => grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_write,
        width_load => width_read_reg_168,
        i => i_11_reg_194,
        height_load => height_read_reg_173,
        sub25_i => sub25_i_reg_184,
        sbmstate_preFilterCap_load => sbmstate_preFilterCap_read_reg_179,
        cap_cast_i => empty_reg_189);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln623_fu_145_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln623_fu_145_p2 = ap_const_lv1_1))) then 
                    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_ready = ap_const_logic_1)) then 
                    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_62_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_62 <= ap_const_lv15_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln623_fu_145_p2 = ap_const_lv1_1))) then 
                i_fu_62 <= add_ln623_fu_150_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                empty_reg_189 <= empty_fu_128_p1;
                height_read_reg_173 <= height_dout;
                sbmstate_preFilterCap_read_reg_179 <= sbmstate_preFilterCap_dout;
                sub25_i_reg_184 <= sub25_i_fu_122_p2;
                width_read_reg_168 <= width_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_11_reg_194 <= i_fu_62;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, sbmstate_preFilterCap_empty_n, height_empty_n, width_empty_n, sbmstate_preFilterCap_c_full_n, height_c20_full_n, width_c25_full_n, ap_CS_fsm_state2, grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_done, icmp_ln623_fu_145_p2, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln623_fu_145_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln623_fu_150_p2 <= std_logic_vector(unsigned(i_fu_62) + unsigned(ap_const_lv15_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, sbmstate_preFilterCap_empty_n, height_empty_n, width_empty_n, sbmstate_preFilterCap_c_full_n, height_c20_full_n, width_c25_full_n)
    begin
        if (((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_done)
    begin
        if ((grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, sbmstate_preFilterCap_empty_n, height_empty_n, width_empty_n, sbmstate_preFilterCap_c_full_n, height_c20_full_n, width_c25_full_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln623_fu_145_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln623_fu_145_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln623_fu_145_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln623_fu_145_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_128_p1 <= sbmstate_preFilterCap_dout(8 - 1 downto 0);
    grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start <= grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_ap_start_reg;

    height_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_blk_n <= height_empty_n;
        else 
            height_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    height_c20_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_c20_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_c20_blk_n <= height_c20_full_n;
        else 
            height_c20_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    height_c20_din <= height_dout;

    height_c20_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, sbmstate_preFilterCap_empty_n, height_empty_n, width_empty_n, sbmstate_preFilterCap_c_full_n, height_c20_full_n, width_c25_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_c20_write <= ap_const_logic_1;
        else 
            height_c20_write <= ap_const_logic_0;
        end if; 
    end process;


    height_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, sbmstate_preFilterCap_empty_n, height_empty_n, width_empty_n, sbmstate_preFilterCap_c_full_n, height_c20_full_n, width_c25_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_read <= ap_const_logic_1;
        else 
            height_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln623_fu_145_p2 <= "1" when (signed(zext_ln623_fu_141_p1) < signed(height_read_reg_173)) else "0";

    in_sobel_x_data_read_assign_proc : process(grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_in_sobel_x_data_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_sobel_x_data_read <= grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_in_sobel_x_data_read;
        else 
            in_sobel_x_data_read <= ap_const_logic_0;
        end if; 
    end process;

    left_clipped_din <= grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_din;

    left_clipped_write_assign_proc : process(grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            left_clipped_write <= grp_xFImageClip_600_800_1_2_4_0_3_0_800_4_Pipeline_loop_col_clip_fu_108_left_clipped_write;
        else 
            left_clipped_write <= ap_const_logic_0;
        end if; 
    end process;


    sbmstate_preFilterCap_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, sbmstate_preFilterCap_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            sbmstate_preFilterCap_blk_n <= sbmstate_preFilterCap_empty_n;
        else 
            sbmstate_preFilterCap_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sbmstate_preFilterCap_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, sbmstate_preFilterCap_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            sbmstate_preFilterCap_c_blk_n <= sbmstate_preFilterCap_c_full_n;
        else 
            sbmstate_preFilterCap_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sbmstate_preFilterCap_c_din <= sbmstate_preFilterCap_dout;

    sbmstate_preFilterCap_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, sbmstate_preFilterCap_empty_n, height_empty_n, width_empty_n, sbmstate_preFilterCap_c_full_n, height_c20_full_n, width_c25_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            sbmstate_preFilterCap_c_write <= ap_const_logic_1;
        else 
            sbmstate_preFilterCap_c_write <= ap_const_logic_0;
        end if; 
    end process;


    sbmstate_preFilterCap_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, sbmstate_preFilterCap_empty_n, height_empty_n, width_empty_n, sbmstate_preFilterCap_c_full_n, height_c20_full_n, width_c25_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            sbmstate_preFilterCap_read <= ap_const_logic_1;
        else 
            sbmstate_preFilterCap_read <= ap_const_logic_0;
        end if; 
    end process;

    sub25_i_fu_122_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sbmstate_preFilterCap_dout));

    width_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_blk_n <= width_empty_n;
        else 
            width_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    width_c25_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_c25_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_c25_blk_n <= width_c25_full_n;
        else 
            width_c25_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    width_c25_din <= width_dout;

    width_c25_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, sbmstate_preFilterCap_empty_n, height_empty_n, width_empty_n, sbmstate_preFilterCap_c_full_n, height_c20_full_n, width_c25_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_c25_write <= ap_const_logic_1;
        else 
            width_c25_write <= ap_const_logic_0;
        end if; 
    end process;


    width_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, sbmstate_preFilterCap_empty_n, height_empty_n, width_empty_n, sbmstate_preFilterCap_c_full_n, height_c20_full_n, width_c25_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (width_c25_full_n = ap_const_logic_0) or (height_c20_full_n = ap_const_logic_0) or (sbmstate_preFilterCap_c_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (sbmstate_preFilterCap_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_read <= ap_const_logic_1;
        else 
            width_read <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln623_fu_141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_62),16));
end behav;
