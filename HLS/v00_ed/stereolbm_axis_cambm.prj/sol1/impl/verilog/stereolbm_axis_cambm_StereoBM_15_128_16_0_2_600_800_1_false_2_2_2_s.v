// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module stereolbm_axis_cambm_StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_read,
        p_read1,
        leftRemappedMat_data_dout,
        leftRemappedMat_data_num_data_valid,
        leftRemappedMat_data_fifo_cap,
        leftRemappedMat_data_empty_n,
        leftRemappedMat_data_read,
        p_read2,
        p_read3,
        rightRemappedMat_data_dout,
        rightRemappedMat_data_num_data_valid,
        rightRemappedMat_data_fifo_cap,
        rightRemappedMat_data_empty_n,
        rightRemappedMat_data_read,
        img_disp16u_data_din,
        img_disp16u_data_num_data_valid,
        img_disp16u_data_fifo_cap,
        img_disp16u_data_full_n,
        img_disp16u_data_write,
        p_read4,
        p_read5,
        p_read6
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [7:0] leftRemappedMat_data_dout;
input  [1:0] leftRemappedMat_data_num_data_valid;
input  [1:0] leftRemappedMat_data_fifo_cap;
input   leftRemappedMat_data_empty_n;
output   leftRemappedMat_data_read;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [7:0] rightRemappedMat_data_dout;
input  [1:0] rightRemappedMat_data_num_data_valid;
input  [1:0] rightRemappedMat_data_fifo_cap;
input   rightRemappedMat_data_empty_n;
output   rightRemappedMat_data_read;
output  [15:0] img_disp16u_data_din;
input  [1:0] img_disp16u_data_num_data_valid;
input  [1:0] img_disp16u_data_fifo_cap;
input   img_disp16u_data_full_n;
output   img_disp16u_data_write;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;

reg ap_done;
reg ap_idle;
reg start_write;
reg leftRemappedMat_data_read;
reg rightRemappedMat_data_read;
reg img_disp16u_data_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    ap_block_state1;
wire   [15:0] empty_fu_98_p1;
reg   [15:0] empty_reg_135;
wire   [15:0] empty_329_fu_103_p1;
reg   [15:0] empty_329_reg_140;
wire   [15:0] width_fu_108_p1;
reg   [15:0] width_reg_145;
wire   [15:0] height_fu_114_p1;
reg   [15:0] height_reg_151;
wire    grp_xFFindStereoCorrespondenceLBMNO_fu_76_leftRemappedMat_data_read;
wire    grp_xFFindStereoCorrespondenceLBMNO_fu_76_rightRemappedMat_data_read;
wire   [15:0] grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_din;
wire    grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_write;
wire    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start;
wire    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done;
wire    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready;
wire    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_idle;
reg    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_continue;
reg    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg;
reg    ap_block_state1_ignore_call14;
wire    ap_CS_fsm_state2;
wire    ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready;
wire    ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done;
reg    ap_block_state2_on_subcall_done;
reg    ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready;
reg    ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready = 1'b0;
#0 ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done = 1'b0;
end

stereolbm_axis_cambm_xFFindStereoCorrespondenceLBMNO grp_xFFindStereoCorrespondenceLBMNO_fu_76(
    .p_read(height_reg_151),
    .p_read1(width_reg_145),
    .leftRemappedMat_data_dout(leftRemappedMat_data_dout),
    .leftRemappedMat_data_empty_n(leftRemappedMat_data_empty_n),
    .leftRemappedMat_data_read(grp_xFFindStereoCorrespondenceLBMNO_fu_76_leftRemappedMat_data_read),
    .p_read2(empty_329_reg_140),
    .p_read3(empty_reg_135),
    .rightRemappedMat_data_dout(rightRemappedMat_data_dout),
    .rightRemappedMat_data_empty_n(rightRemappedMat_data_empty_n),
    .rightRemappedMat_data_read(grp_xFFindStereoCorrespondenceLBMNO_fu_76_rightRemappedMat_data_read),
    .img_disp16u_data_din(grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_din),
    .img_disp16u_data_full_n(img_disp16u_data_full_n),
    .img_disp16u_data_write(grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_write),
    .p_read4(p_read4),
    .p_read5(p_read5),
    .p_read6(p_read6),
    .height(height_reg_151),
    .width(width_reg_145),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_read4_ap_vld(1'b1),
    .p_read5_ap_vld(1'b1),
    .p_read6_ap_vld(1'b1),
    .height_ap_vld(1'b1),
    .width_ap_vld(1'b1),
    .ap_start(grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start),
    .p_read_ap_vld(1'b1),
    .p_read1_ap_vld(1'b1),
    .ap_done(grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done),
    .p_read2_ap_vld(1'b1),
    .p_read3_ap_vld(1'b1),
    .ap_ready(grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready),
    .ap_idle(grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_idle),
    .ap_continue(grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
            ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done <= 1'b0;
        end else if ((grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done == 1'b1)) begin
            ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
            ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready <= 1'b0;
        end else if ((grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg <= 1'b0;
    end else begin
        if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready == 1'b0)))) begin
            grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg <= 1'b1;
        end else if ((grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready == 1'b1)) begin
            grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_329_reg_140 <= empty_329_fu_103_p1;
        empty_reg_135 <= empty_fu_98_p1;
        height_reg_151 <= height_fu_114_p1;
        width_reg_145 <= width_fu_108_p1;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
        grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_continue = 1'b1;
    end else begin
        grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        img_disp16u_data_write = grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_write;
    end else begin
        img_disp16u_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        leftRemappedMat_data_read = grp_xFFindStereoCorrespondenceLBMNO_fu_76_leftRemappedMat_data_read;
    end else begin
        leftRemappedMat_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        rightRemappedMat_data_read = grp_xFFindStereoCorrespondenceLBMNO_fu_76_rightRemappedMat_data_read;
    end else begin
        rightRemappedMat_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call14 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_on_subcall_done = ((ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready & ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done) == 1'b0);
end

assign ap_ready = internal_ap_ready;

assign ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done = (grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done | ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done);

assign ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready = (grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready | ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready);

assign empty_329_fu_103_p1 = p_read2[15:0];

assign empty_fu_98_p1 = p_read3[15:0];

assign grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start = grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg;

assign height_fu_114_p1 = p_read[15:0];

assign img_disp16u_data_din = grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_din;

assign start_out = real_start;

assign width_fu_108_p1 = p_read1[15:0];

endmodule //stereolbm_axis_cambm_StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_s
