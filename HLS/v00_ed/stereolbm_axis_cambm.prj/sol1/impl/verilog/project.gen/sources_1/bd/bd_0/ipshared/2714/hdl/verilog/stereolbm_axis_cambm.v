// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="stereolbm_axis_cambm_stereolbm_axis_cambm,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.569687,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=187,HLS_SYN_DSP=0,HLS_SYN_FF=63162,HLS_SYN_LUT=82729,HLS_VERSION=2023_1}" *)

module stereolbm_axis_cambm (
        ap_clk,
        ap_rst_n,
        s_axi_Ctrl_AWVALID,
        s_axi_Ctrl_AWREADY,
        s_axi_Ctrl_AWADDR,
        s_axi_Ctrl_WVALID,
        s_axi_Ctrl_WREADY,
        s_axi_Ctrl_WDATA,
        s_axi_Ctrl_WSTRB,
        s_axi_Ctrl_ARVALID,
        s_axi_Ctrl_ARREADY,
        s_axi_Ctrl_ARADDR,
        s_axi_Ctrl_RVALID,
        s_axi_Ctrl_RREADY,
        s_axi_Ctrl_RDATA,
        s_axi_Ctrl_RRESP,
        s_axi_Ctrl_BVALID,
        s_axi_Ctrl_BREADY,
        s_axi_Ctrl_BRESP,
        interrupt,
        vid_inL_TDATA,
        vid_inL_TKEEP,
        vid_inL_TSTRB,
        vid_inL_TUSER,
        vid_inL_TLAST,
        vid_inL_TID,
        vid_inL_TDEST,
        vid_inR_TDATA,
        vid_inR_TKEEP,
        vid_inR_TSTRB,
        vid_inR_TUSER,
        vid_inR_TLAST,
        vid_inR_TID,
        vid_inR_TDEST,
        vid_out_TDATA,
        vid_out_TKEEP,
        vid_out_TSTRB,
        vid_out_TUSER,
        vid_out_TLAST,
        vid_out_TID,
        vid_out_TDEST,
        vid_inL_TVALID,
        vid_inL_TREADY,
        vid_inR_TVALID,
        vid_inR_TREADY,
        vid_out_TVALID,
        vid_out_TREADY
);

parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_Ctrl_AWVALID;
output   s_axi_Ctrl_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_Ctrl_AWADDR;
input   s_axi_Ctrl_WVALID;
output   s_axi_Ctrl_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_Ctrl_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_Ctrl_WSTRB;
input   s_axi_Ctrl_ARVALID;
output   s_axi_Ctrl_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_Ctrl_ARADDR;
output   s_axi_Ctrl_RVALID;
input   s_axi_Ctrl_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_Ctrl_RDATA;
output  [1:0] s_axi_Ctrl_RRESP;
output   s_axi_Ctrl_BVALID;
input   s_axi_Ctrl_BREADY;
output  [1:0] s_axi_Ctrl_BRESP;
output   interrupt;
input  [7:0] vid_inL_TDATA;
input  [0:0] vid_inL_TKEEP;
input  [0:0] vid_inL_TSTRB;
input  [0:0] vid_inL_TUSER;
input  [0:0] vid_inL_TLAST;
input  [0:0] vid_inL_TID;
input  [0:0] vid_inL_TDEST;
input  [7:0] vid_inR_TDATA;
input  [0:0] vid_inR_TKEEP;
input  [0:0] vid_inR_TSTRB;
input  [0:0] vid_inR_TUSER;
input  [0:0] vid_inR_TLAST;
input  [0:0] vid_inR_TID;
input  [0:0] vid_inR_TDEST;
output  [7:0] vid_out_TDATA;
output  [0:0] vid_out_TKEEP;
output  [0:0] vid_out_TSTRB;
output  [0:0] vid_out_TUSER;
output  [0:0] vid_out_TLAST;
output  [0:0] vid_out_TID;
output  [0:0] vid_out_TDEST;
input   vid_inL_TVALID;
output   vid_inL_TREADY;
input   vid_inR_TVALID;
output   vid_inR_TREADY;
output   vid_out_TVALID;
input   vid_out_TREADY;

 reg    ap_rst_n_inv;
wire   [31:0] cameraMA_l_fix_i_q0;
wire   [31:0] cameraMA_l_fix_t_q0;
wire   [31:0] cameraMA_r_fix_i_q0;
wire   [31:0] cameraMA_r_fix_t_q0;
wire   [31:0] distC_l_fix_i_q0;
wire   [31:0] distC_l_fix_t_q0;
wire   [31:0] distC_r_fix_i_q0;
wire   [31:0] distC_r_fix_t_q0;
wire   [31:0] irA_l_fix_i_q0;
wire   [31:0] irA_l_fix_t_q0;
wire   [31:0] irA_r_fix_i_q0;
wire   [31:0] irA_r_fix_t_q0;
wire   [31:0] rows;
wire   [31:0] cols;
wire   [31:0] preFilterCap;
wire   [31:0] uniquenessRatio;
wire   [31:0] textureThreshold;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    Loop_VITIS_LOOP_46_1_proc_U0_ap_start;
wire    Loop_VITIS_LOOP_46_1_proc_U0_ap_done;
wire    Loop_VITIS_LOOP_46_1_proc_U0_ap_continue;
wire    Loop_VITIS_LOOP_46_1_proc_U0_ap_idle;
wire    Loop_VITIS_LOOP_46_1_proc_U0_ap_ready;
wire   [3:0] Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_address0;
wire    Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_ce0;
wire    Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_we0;
wire   [31:0] Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_d0;
wire   [3:0] Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_address0;
wire    Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_ce0;
wire    Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_we0;
wire   [31:0] Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_d0;
wire   [3:0] Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_address0;
wire    Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_ce0;
wire    Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_we0;
wire   [31:0] Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_d0;
wire   [3:0] Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_address0;
wire    Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_ce0;
wire    Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_we0;
wire   [31:0] Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_d0;
wire    ap_channel_done_cameraMA_l_fix;
wire    Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_full_n;
reg    ap_sync_reg_channel_write_cameraMA_l_fix;
wire    ap_sync_channel_write_cameraMA_l_fix;
wire    ap_channel_done_cameraMA_r_fix;
wire    Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_full_n;
reg    ap_sync_reg_channel_write_cameraMA_r_fix;
wire    ap_sync_channel_write_cameraMA_r_fix;
wire    ap_channel_done_irA_l_fix;
wire    Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_full_n;
reg    ap_sync_reg_channel_write_irA_l_fix;
wire    ap_sync_channel_write_irA_l_fix;
wire    ap_channel_done_irA_r_fix;
wire    Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_full_n;
reg    ap_sync_reg_channel_write_irA_r_fix;
wire    ap_sync_channel_write_irA_r_fix;
wire    Loop_VITIS_LOOP_55_2_proc_U0_ap_start;
wire    Loop_VITIS_LOOP_55_2_proc_U0_ap_done;
wire    Loop_VITIS_LOOP_55_2_proc_U0_ap_continue;
wire    Loop_VITIS_LOOP_55_2_proc_U0_ap_idle;
wire    Loop_VITIS_LOOP_55_2_proc_U0_ap_ready;
wire   [2:0] Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_address0;
wire    Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_ce0;
wire    Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_we0;
wire   [31:0] Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_d0;
wire   [2:0] Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_address0;
wire    Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_ce0;
wire    Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_we0;
wire   [31:0] Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_d0;
wire    ap_channel_done_distC_l_fix;
wire    Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_full_n;
reg    ap_sync_reg_channel_write_distC_l_fix;
wire    ap_sync_channel_write_distC_l_fix;
wire    ap_channel_done_distC_r_fix;
wire    Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_full_n;
reg    ap_sync_reg_channel_write_distC_r_fix;
wire    ap_sync_channel_write_distC_r_fix;
wire    Block_for_end72_proc_U0_ap_start;
wire    Block_for_end72_proc_U0_ap_done;
wire    Block_for_end72_proc_U0_ap_continue;
wire    Block_for_end72_proc_U0_ap_idle;
wire    Block_for_end72_proc_U0_ap_ready;
wire   [31:0] Block_for_end72_proc_U0_ap_return_0;
wire   [31:0] Block_for_end72_proc_U0_ap_return_1;
wire   [31:0] Block_for_end72_proc_U0_ap_return_2;
wire   [31:0] Block_for_end72_proc_U0_ap_return_3;
wire   [31:0] Block_for_end72_proc_U0_ap_return_4;
wire   [31:0] Block_for_end72_proc_U0_ap_return_5;
wire   [31:0] Block_for_end72_proc_U0_ap_return_6;
wire   [31:0] Block_for_end72_proc_U0_ap_return_7;
wire   [31:0] Block_for_end72_proc_U0_ap_return_8;
wire   [31:0] Block_for_end72_proc_U0_ap_return_9;
wire   [31:0] Block_for_end72_proc_U0_ap_return_10;
wire   [31:0] Block_for_end72_proc_U0_ap_return_11;
wire   [31:0] Block_for_end72_proc_U0_ap_return_12;
wire   [31:0] Block_for_end72_proc_U0_ap_return_13;
wire   [31:0] Block_for_end72_proc_U0_ap_return_14;
wire    ap_channel_done_rightRemappedMat_cols;
wire    rightRemappedMat_cols_full_n;
reg    ap_sync_reg_channel_write_rightRemappedMat_cols;
wire    ap_sync_channel_write_rightRemappedMat_cols;
wire    ap_channel_done_rightRemappedMat_rows;
wire    rightRemappedMat_rows_full_n;
reg    ap_sync_reg_channel_write_rightRemappedMat_rows;
wire    ap_sync_channel_write_rightRemappedMat_rows;
wire    ap_channel_done_leftRemappedMat_cols;
wire    leftRemappedMat_cols_full_n;
reg    ap_sync_reg_channel_write_leftRemappedMat_cols;
wire    ap_sync_channel_write_leftRemappedMat_cols;
wire    ap_channel_done_leftRemappedMat_rows;
wire    leftRemappedMat_rows_full_n;
reg    ap_sync_reg_channel_write_leftRemappedMat_rows;
wire    ap_sync_channel_write_leftRemappedMat_rows;
wire    ap_channel_done_bmState_textureThreshold;
wire    bmState_textureThreshold_full_n;
reg    ap_sync_reg_channel_write_bmState_textureThreshold;
wire    ap_sync_channel_write_bmState_textureThreshold;
wire    ap_channel_done_bmState_uniquenessRatio;
wire    bmState_uniquenessRatio_full_n;
reg    ap_sync_reg_channel_write_bmState_uniquenessRatio;
wire    ap_sync_channel_write_bmState_uniquenessRatio;
wire    ap_channel_done_bmState_preFilterCap;
wire    bmState_preFilterCap_full_n;
reg    ap_sync_reg_channel_write_bmState_preFilterCap;
wire    ap_sync_channel_write_bmState_preFilterCap;
wire    ap_channel_done_imgR_in_cols_c62_channel;
wire    imgR_in_cols_c62_channel_full_n;
reg    ap_sync_reg_channel_write_imgR_in_cols_c62_channel;
wire    ap_sync_channel_write_imgR_in_cols_c62_channel;
wire    ap_channel_done_imgR_in_rows_c61_channel;
wire    imgR_in_rows_c61_channel_full_n;
reg    ap_sync_reg_channel_write_imgR_in_rows_c61_channel;
wire    ap_sync_channel_write_imgR_in_rows_c61_channel;
wire    ap_channel_done_imgL_in_cols_c60_channel;
wire    imgL_in_cols_c60_channel_full_n;
reg    ap_sync_reg_channel_write_imgL_in_cols_c60_channel;
wire    ap_sync_channel_write_imgL_in_cols_c60_channel;
wire    ap_channel_done_imgL_in_rows_c59_channel;
wire    imgL_in_rows_c59_channel_full_n;
reg    ap_sync_reg_channel_write_imgL_in_rows_c59_channel;
wire    ap_sync_channel_write_imgL_in_rows_c59_channel;
wire    ap_channel_done_mapxRMat_cols;
wire    mapxRMat_cols_full_n;
reg    ap_sync_reg_channel_write_mapxRMat_cols;
wire    ap_sync_channel_write_mapxRMat_cols;
wire    ap_channel_done_mapxRMat_rows;
wire    mapxRMat_rows_full_n;
reg    ap_sync_reg_channel_write_mapxRMat_rows;
wire    ap_sync_channel_write_mapxRMat_rows;
wire    ap_channel_done_mapxLMat_cols;
wire    mapxLMat_cols_full_n;
reg    ap_sync_reg_channel_write_mapxLMat_cols;
wire    ap_sync_channel_write_mapxLMat_cols;
wire    ap_channel_done_mapxLMat_rows;
wire    mapxLMat_rows_full_n;
reg    ap_sync_reg_channel_write_mapxLMat_rows;
wire    ap_sync_channel_write_mapxLMat_rows;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_start;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_done;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_continue;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_idle;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_ready;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_start_out;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_start_write;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_vid_inL_TREADY;
wire   [7:0] AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_din;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_write;
wire   [31:0] AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_din;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_write;
wire   [31:0] AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_din;
wire    AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_write;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_start;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_done;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_continue;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_idle;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_ready;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_start_out;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_start_write;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_vid_inR_TREADY;
wire   [7:0] AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_din;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_write;
wire   [31:0] AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_din;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_write;
wire   [31:0] AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_din;
wire    AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_write;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_start;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_done;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_continue;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_idle;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready;
wire   [3:0] InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_address0;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_ce0;
wire   [2:0] InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_address0;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_ce0;
wire   [3:0] InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_address0;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_ce0;
wire   [31:0] InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_din;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_write;
wire   [31:0] InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_din;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_write;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_rows_read;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_cols_read;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_imgL_in_data_read;
wire   [7:0] remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_din;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_write;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapxLMat_data_read;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapyLMat_data_read;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_start;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_done;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_ready;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_idle;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_continue;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_start;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_done;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_continue;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_idle;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready;
wire   [3:0] InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_address0;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_ce0;
wire   [2:0] InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_address0;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_ce0;
wire   [3:0] InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_address0;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_ce0;
wire   [31:0] InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_din;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_write;
wire   [31:0] InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_din;
wire    InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_write;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_rows_read;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_cols_read;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_imgR_in_data_read;
wire   [7:0] remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_din;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_write;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapxRMat_data_read;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapyRMat_data_read;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_start;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_done;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_ready;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_idle;
wire    remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_continue;
wire    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_start;
wire    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_done;
wire    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_continue;
wire    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_idle;
wire    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready;
wire    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_start_out;
wire    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_start_write;
wire    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_leftRemappedMat_data_read;
wire    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_rightRemappedMat_data_read;
wire   [15:0] StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_din;
wire    StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_write;
wire    Block_for_end7235_proc_U0_ap_start;
wire    Block_for_end7235_proc_U0_ap_done;
wire    Block_for_end7235_proc_U0_ap_continue;
wire    Block_for_end7235_proc_U0_ap_idle;
wire    Block_for_end7235_proc_U0_ap_ready;
wire   [31:0] Block_for_end7235_proc_U0_ap_return_0;
wire   [31:0] Block_for_end7235_proc_U0_ap_return_1;
wire    ap_channel_done_img_disp8u_cols;
wire    img_disp8u_cols_full_n;
reg    ap_sync_reg_channel_write_img_disp8u_cols;
wire    ap_sync_channel_write_img_disp8u_cols;
wire    ap_channel_done_img_disp8u_rows;
wire    img_disp8u_rows_full_n;
reg    ap_sync_reg_channel_write_img_disp8u_rows;
wire    ap_sync_channel_write_img_disp8u_rows;
wire    ConvertShiftAbs_U0_ap_start;
wire    ConvertShiftAbs_U0_ap_done;
wire    ConvertShiftAbs_U0_ap_continue;
wire    ConvertShiftAbs_U0_ap_idle;
wire    ConvertShiftAbs_U0_ap_ready;
wire    ConvertShiftAbs_U0_img_disp16u_data_read;
wire   [7:0] ConvertShiftAbs_U0_img_disp8u_data_din;
wire    ConvertShiftAbs_U0_img_disp8u_data_write;
wire    Block_for_end7237_proc_U0_ap_start;
wire    Block_for_end7237_proc_U0_ap_done;
wire    Block_for_end7237_proc_U0_ap_continue;
wire    Block_for_end7237_proc_U0_ap_idle;
wire    Block_for_end7237_proc_U0_ap_ready;
wire   [31:0] Block_for_end7237_proc_U0_ap_return_0;
wire   [31:0] Block_for_end7237_proc_U0_ap_return_1;
wire    ap_channel_done_img_disp8u_erode_cols;
wire    img_disp8u_erode_cols_full_n;
reg    ap_sync_reg_channel_write_img_disp8u_erode_cols;
wire    ap_sync_channel_write_img_disp8u_erode_cols;
wire    ap_channel_done_img_disp8u_erode_rows;
wire    img_disp8u_erode_rows_full_n;
reg    ap_sync_reg_channel_write_img_disp8u_erode_rows;
wire    ap_sync_channel_write_img_disp8u_erode_rows;
wire    erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start;
wire    erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_done;
wire    erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue;
wire    erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle;
wire    erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready;
wire    erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_data_read;
wire   [7:0] erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_din;
wire    erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_write;
wire    Block_for_end7239_proc_U0_ap_start;
wire    Block_for_end7239_proc_U0_ap_done;
wire    Block_for_end7239_proc_U0_ap_continue;
wire    Block_for_end7239_proc_U0_ap_idle;
wire    Block_for_end7239_proc_U0_ap_ready;
wire   [31:0] Block_for_end7239_proc_U0_ap_return_0;
wire   [31:0] Block_for_end7239_proc_U0_ap_return_1;
wire    ap_channel_done_img_disp8u_dilate_cols;
wire    img_disp8u_dilate_cols_full_n;
reg    ap_sync_reg_channel_write_img_disp8u_dilate_cols;
wire    ap_sync_channel_write_img_disp8u_dilate_cols;
wire    ap_channel_done_img_disp8u_dilate_rows;
wire    img_disp8u_dilate_rows_full_n;
reg    ap_sync_reg_channel_write_img_disp8u_dilate_rows;
wire    ap_sync_channel_write_img_disp8u_dilate_rows;
wire    dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start;
wire    dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_done;
wire    dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue;
wire    dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle;
wire    dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready;
wire    dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_read;
wire   [7:0] dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_din;
wire    dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_write;
wire    xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_start;
wire    xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_done;
wire    xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_continue;
wire    xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_idle;
wire    xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_ready;
wire    xfMat2AXIvideo_8_0_600_800_1_2_U0_img_disp8u_dilate_data_read;
wire   [7:0] xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDATA;
wire    xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TVALID;
wire   [0:0] xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TKEEP;
wire   [0:0] xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TSTRB;
wire   [0:0] xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TUSER;
wire   [0:0] xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TLAST;
wire   [0:0] xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TID;
wire   [0:0] xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDEST;
wire    irA_r_fix_i_full_n;
wire    irA_r_fix_t_empty_n;
wire    irA_l_fix_i_full_n;
wire    irA_l_fix_t_empty_n;
wire    cameraMA_r_fix_i_full_n;
wire    cameraMA_r_fix_t_empty_n;
wire    cameraMA_l_fix_i_full_n;
wire    cameraMA_l_fix_t_empty_n;
wire    distC_r_fix_i_full_n;
wire    distC_r_fix_t_empty_n;
wire    distC_l_fix_i_full_n;
wire    distC_l_fix_t_empty_n;
wire   [31:0] mapxLMat_rows_dout;
wire   [1:0] mapxLMat_rows_num_data_valid;
wire   [1:0] mapxLMat_rows_fifo_cap;
wire    mapxLMat_rows_empty_n;
wire   [31:0] mapxLMat_cols_dout;
wire   [1:0] mapxLMat_cols_num_data_valid;
wire   [1:0] mapxLMat_cols_fifo_cap;
wire    mapxLMat_cols_empty_n;
wire   [31:0] mapxRMat_rows_dout;
wire   [1:0] mapxRMat_rows_num_data_valid;
wire   [1:0] mapxRMat_rows_fifo_cap;
wire    mapxRMat_rows_empty_n;
wire   [31:0] mapxRMat_cols_dout;
wire   [1:0] mapxRMat_cols_num_data_valid;
wire   [1:0] mapxRMat_cols_fifo_cap;
wire    mapxRMat_cols_empty_n;
wire   [31:0] imgL_in_rows_c59_channel_dout;
wire   [1:0] imgL_in_rows_c59_channel_num_data_valid;
wire   [1:0] imgL_in_rows_c59_channel_fifo_cap;
wire    imgL_in_rows_c59_channel_empty_n;
wire   [31:0] imgL_in_cols_c60_channel_dout;
wire   [1:0] imgL_in_cols_c60_channel_num_data_valid;
wire   [1:0] imgL_in_cols_c60_channel_fifo_cap;
wire    imgL_in_cols_c60_channel_empty_n;
wire   [31:0] imgR_in_rows_c61_channel_dout;
wire   [1:0] imgR_in_rows_c61_channel_num_data_valid;
wire   [1:0] imgR_in_rows_c61_channel_fifo_cap;
wire    imgR_in_rows_c61_channel_empty_n;
wire   [31:0] imgR_in_cols_c62_channel_dout;
wire   [1:0] imgR_in_cols_c62_channel_num_data_valid;
wire   [1:0] imgR_in_cols_c62_channel_fifo_cap;
wire    imgR_in_cols_c62_channel_empty_n;
wire   [31:0] bmState_preFilterCap_dout;
wire   [2:0] bmState_preFilterCap_num_data_valid;
wire   [2:0] bmState_preFilterCap_fifo_cap;
wire    bmState_preFilterCap_empty_n;
wire   [31:0] bmState_uniquenessRatio_dout;
wire   [2:0] bmState_uniquenessRatio_num_data_valid;
wire   [2:0] bmState_uniquenessRatio_fifo_cap;
wire    bmState_uniquenessRatio_empty_n;
wire   [31:0] bmState_textureThreshold_dout;
wire   [2:0] bmState_textureThreshold_num_data_valid;
wire   [2:0] bmState_textureThreshold_fifo_cap;
wire    bmState_textureThreshold_empty_n;
wire   [31:0] leftRemappedMat_rows_dout;
wire   [2:0] leftRemappedMat_rows_num_data_valid;
wire   [2:0] leftRemappedMat_rows_fifo_cap;
wire    leftRemappedMat_rows_empty_n;
wire   [31:0] leftRemappedMat_cols_dout;
wire   [2:0] leftRemappedMat_cols_num_data_valid;
wire   [2:0] leftRemappedMat_cols_fifo_cap;
wire    leftRemappedMat_cols_empty_n;
wire   [31:0] rightRemappedMat_rows_dout;
wire   [2:0] rightRemappedMat_rows_num_data_valid;
wire   [2:0] rightRemappedMat_rows_fifo_cap;
wire    rightRemappedMat_rows_empty_n;
wire   [31:0] rightRemappedMat_cols_dout;
wire   [2:0] rightRemappedMat_cols_num_data_valid;
wire   [2:0] rightRemappedMat_cols_fifo_cap;
wire    rightRemappedMat_cols_empty_n;
wire    imgL_in_data_full_n;
wire   [7:0] imgL_in_data_dout;
wire   [1:0] imgL_in_data_num_data_valid;
wire   [1:0] imgL_in_data_fifo_cap;
wire    imgL_in_data_empty_n;
wire    imgL_in_rows_c_full_n;
wire   [31:0] imgL_in_rows_c_dout;
wire   [1:0] imgL_in_rows_c_num_data_valid;
wire   [1:0] imgL_in_rows_c_fifo_cap;
wire    imgL_in_rows_c_empty_n;
wire    imgL_in_cols_c_full_n;
wire   [31:0] imgL_in_cols_c_dout;
wire   [1:0] imgL_in_cols_c_num_data_valid;
wire   [1:0] imgL_in_cols_c_fifo_cap;
wire    imgL_in_cols_c_empty_n;
wire    imgR_in_data_full_n;
wire   [7:0] imgR_in_data_dout;
wire   [1:0] imgR_in_data_num_data_valid;
wire   [1:0] imgR_in_data_fifo_cap;
wire    imgR_in_data_empty_n;
wire    imgR_in_rows_c_full_n;
wire   [31:0] imgR_in_rows_c_dout;
wire   [1:0] imgR_in_rows_c_num_data_valid;
wire   [1:0] imgR_in_rows_c_fifo_cap;
wire    imgR_in_rows_c_empty_n;
wire    imgR_in_cols_c_full_n;
wire   [31:0] imgR_in_cols_c_dout;
wire   [1:0] imgR_in_cols_c_num_data_valid;
wire   [1:0] imgR_in_cols_c_fifo_cap;
wire    imgR_in_cols_c_empty_n;
wire    mapxLMat_data_full_n;
wire   [31:0] mapxLMat_data_dout;
wire   [1:0] mapxLMat_data_num_data_valid;
wire   [1:0] mapxLMat_data_fifo_cap;
wire    mapxLMat_data_empty_n;
wire    mapyLMat_data_full_n;
wire   [31:0] mapyLMat_data_dout;
wire   [1:0] mapyLMat_data_num_data_valid;
wire   [1:0] mapyLMat_data_fifo_cap;
wire    mapyLMat_data_empty_n;
wire    leftRemappedMat_data_full_n;
wire   [7:0] leftRemappedMat_data_dout;
wire   [1:0] leftRemappedMat_data_num_data_valid;
wire   [1:0] leftRemappedMat_data_fifo_cap;
wire    leftRemappedMat_data_empty_n;
wire    mapxRMat_data_full_n;
wire   [31:0] mapxRMat_data_dout;
wire   [1:0] mapxRMat_data_num_data_valid;
wire   [1:0] mapxRMat_data_fifo_cap;
wire    mapxRMat_data_empty_n;
wire    mapyRMat_data_full_n;
wire   [31:0] mapyRMat_data_dout;
wire   [1:0] mapyRMat_data_num_data_valid;
wire   [1:0] mapyRMat_data_fifo_cap;
wire    mapyRMat_data_empty_n;
wire    rightRemappedMat_data_full_n;
wire   [7:0] rightRemappedMat_data_dout;
wire   [1:0] rightRemappedMat_data_num_data_valid;
wire   [1:0] rightRemappedMat_data_fifo_cap;
wire    rightRemappedMat_data_empty_n;
wire    img_disp16u_data_full_n;
wire   [15:0] img_disp16u_data_dout;
wire   [1:0] img_disp16u_data_num_data_valid;
wire   [1:0] img_disp16u_data_fifo_cap;
wire    img_disp16u_data_empty_n;
wire   [31:0] img_disp8u_rows_dout;
wire   [3:0] img_disp8u_rows_num_data_valid;
wire   [3:0] img_disp8u_rows_fifo_cap;
wire    img_disp8u_rows_empty_n;
wire   [31:0] img_disp8u_cols_dout;
wire   [3:0] img_disp8u_cols_num_data_valid;
wire   [3:0] img_disp8u_cols_fifo_cap;
wire    img_disp8u_cols_empty_n;
wire    img_disp8u_data_full_n;
wire   [7:0] img_disp8u_data_dout;
wire   [1:0] img_disp8u_data_num_data_valid;
wire   [1:0] img_disp8u_data_fifo_cap;
wire    img_disp8u_data_empty_n;
wire   [31:0] img_disp8u_erode_rows_dout;
wire   [3:0] img_disp8u_erode_rows_num_data_valid;
wire   [3:0] img_disp8u_erode_rows_fifo_cap;
wire    img_disp8u_erode_rows_empty_n;
wire   [31:0] img_disp8u_erode_cols_dout;
wire   [3:0] img_disp8u_erode_cols_num_data_valid;
wire   [3:0] img_disp8u_erode_cols_fifo_cap;
wire    img_disp8u_erode_cols_empty_n;
wire    img_disp8u_erode_data_full_n;
wire   [7:0] img_disp8u_erode_data_dout;
wire   [1:0] img_disp8u_erode_data_num_data_valid;
wire   [1:0] img_disp8u_erode_data_fifo_cap;
wire    img_disp8u_erode_data_empty_n;
wire   [31:0] img_disp8u_dilate_rows_dout;
wire   [3:0] img_disp8u_dilate_rows_num_data_valid;
wire   [3:0] img_disp8u_dilate_rows_fifo_cap;
wire    img_disp8u_dilate_rows_empty_n;
wire   [31:0] img_disp8u_dilate_cols_dout;
wire   [3:0] img_disp8u_dilate_cols_num_data_valid;
wire   [3:0] img_disp8u_dilate_cols_fifo_cap;
wire    img_disp8u_dilate_cols_empty_n;
wire    img_disp8u_dilate_data_full_n;
wire   [7:0] img_disp8u_dilate_data_dout;
wire   [1:0] img_disp8u_dilate_data_num_data_valid;
wire   [1:0] img_disp8u_dilate_data_fifo_cap;
wire    img_disp8u_dilate_data_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready;
wire    ap_sync_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready;
reg    ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready;
wire    ap_sync_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready;
reg    ap_sync_reg_Block_for_end72_proc_U0_ap_ready;
wire    ap_sync_Block_for_end72_proc_U0_ap_ready;
reg    ap_sync_reg_Block_for_end7235_proc_U0_ap_ready;
wire    ap_sync_Block_for_end7235_proc_U0_ap_ready;
reg    ap_sync_reg_Block_for_end7237_proc_U0_ap_ready;
wire    ap_sync_Block_for_end7237_proc_U0_ap_ready;
reg    ap_sync_reg_Block_for_end7239_proc_U0_ap_ready;
wire    ap_sync_Block_for_end7239_proc_U0_ap_ready;
wire   [0:0] start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_din;
wire    start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_full_n;
wire   [0:0] start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_dout;
wire    start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_empty_n;
wire   [0:0] start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_din;
wire    start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_full_n;
wire   [0:0] start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_dout;
wire    start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_empty_n;
wire   [0:0] start_for_ConvertShiftAbs_U0_din;
wire    start_for_ConvertShiftAbs_U0_full_n;
wire   [0:0] start_for_ConvertShiftAbs_U0_dout;
wire    start_for_ConvertShiftAbs_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_cameraMA_l_fix = 1'b0;
#0 ap_sync_reg_channel_write_cameraMA_r_fix = 1'b0;
#0 ap_sync_reg_channel_write_irA_l_fix = 1'b0;
#0 ap_sync_reg_channel_write_irA_r_fix = 1'b0;
#0 ap_sync_reg_channel_write_distC_l_fix = 1'b0;
#0 ap_sync_reg_channel_write_distC_r_fix = 1'b0;
#0 ap_sync_reg_channel_write_rightRemappedMat_cols = 1'b0;
#0 ap_sync_reg_channel_write_rightRemappedMat_rows = 1'b0;
#0 ap_sync_reg_channel_write_leftRemappedMat_cols = 1'b0;
#0 ap_sync_reg_channel_write_leftRemappedMat_rows = 1'b0;
#0 ap_sync_reg_channel_write_bmState_textureThreshold = 1'b0;
#0 ap_sync_reg_channel_write_bmState_uniquenessRatio = 1'b0;
#0 ap_sync_reg_channel_write_bmState_preFilterCap = 1'b0;
#0 ap_sync_reg_channel_write_imgR_in_cols_c62_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgR_in_rows_c61_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgL_in_cols_c60_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgL_in_rows_c59_channel = 1'b0;
#0 ap_sync_reg_channel_write_mapxRMat_cols = 1'b0;
#0 ap_sync_reg_channel_write_mapxRMat_rows = 1'b0;
#0 ap_sync_reg_channel_write_mapxLMat_cols = 1'b0;
#0 ap_sync_reg_channel_write_mapxLMat_rows = 1'b0;
#0 ap_sync_reg_channel_write_img_disp8u_cols = 1'b0;
#0 ap_sync_reg_channel_write_img_disp8u_rows = 1'b0;
#0 ap_sync_reg_channel_write_img_disp8u_erode_cols = 1'b0;
#0 ap_sync_reg_channel_write_img_disp8u_erode_rows = 1'b0;
#0 ap_sync_reg_channel_write_img_disp8u_dilate_cols = 1'b0;
#0 ap_sync_reg_channel_write_img_disp8u_dilate_rows = 1'b0;
#0 ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Block_for_end72_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Block_for_end7235_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Block_for_end7237_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Block_for_end7239_proc_U0_ap_ready = 1'b0;
end

stereolbm_axis_cambm_cameraMA_l_fix_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
cameraMA_l_fix_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_address0),
    .i_ce0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_ce0),
    .i_we0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_we0),
    .i_d0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_d0),
    .i_q0(cameraMA_l_fix_i_q0),
    .t_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_address0),
    .t_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(cameraMA_l_fix_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(cameraMA_l_fix_i_full_n),
    .i_write(ap_channel_done_cameraMA_l_fix),
    .t_empty_n(cameraMA_l_fix_t_empty_n),
    .t_read(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_cameraMA_l_fix_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
cameraMA_r_fix_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_address0),
    .i_ce0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_ce0),
    .i_we0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_we0),
    .i_d0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_d0),
    .i_q0(cameraMA_r_fix_i_q0),
    .t_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_address0),
    .t_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(cameraMA_r_fix_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(cameraMA_r_fix_i_full_n),
    .i_write(ap_channel_done_cameraMA_r_fix),
    .t_empty_n(cameraMA_r_fix_t_empty_n),
    .t_read(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready)
);

stereolbm_axis_cambm_distC_l_fix_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
distC_l_fix_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_address0),
    .i_ce0(Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_ce0),
    .i_we0(Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_we0),
    .i_d0(Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_d0),
    .i_q0(distC_l_fix_i_q0),
    .t_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_address0),
    .t_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(distC_l_fix_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(distC_l_fix_i_full_n),
    .i_write(ap_channel_done_distC_l_fix),
    .t_empty_n(distC_l_fix_t_empty_n),
    .t_read(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_distC_l_fix_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
distC_r_fix_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_address0),
    .i_ce0(Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_ce0),
    .i_we0(Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_we0),
    .i_d0(Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_d0),
    .i_q0(distC_r_fix_i_q0),
    .t_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_address0),
    .t_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(distC_r_fix_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(distC_r_fix_i_full_n),
    .i_write(ap_channel_done_distC_r_fix),
    .t_empty_n(distC_r_fix_t_empty_n),
    .t_read(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready)
);

stereolbm_axis_cambm_cameraMA_l_fix_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
irA_l_fix_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_address0),
    .i_ce0(Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_ce0),
    .i_we0(Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_we0),
    .i_d0(Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_d0),
    .i_q0(irA_l_fix_i_q0),
    .t_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_address0),
    .t_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(irA_l_fix_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(irA_l_fix_i_full_n),
    .i_write(ap_channel_done_irA_l_fix),
    .t_empty_n(irA_l_fix_t_empty_n),
    .t_read(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_cameraMA_l_fix_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
irA_r_fix_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_address0),
    .i_ce0(Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_ce0),
    .i_we0(Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_we0),
    .i_d0(Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_d0),
    .i_q0(irA_r_fix_i_q0),
    .t_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_address0),
    .t_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(irA_r_fix_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(irA_r_fix_i_full_n),
    .i_write(ap_channel_done_irA_r_fix),
    .t_empty_n(irA_r_fix_t_empty_n),
    .t_read(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready)
);

stereolbm_axis_cambm_Ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
Ctrl_s_axi_U(
    .AWVALID(s_axi_Ctrl_AWVALID),
    .AWREADY(s_axi_Ctrl_AWREADY),
    .AWADDR(s_axi_Ctrl_AWADDR),
    .WVALID(s_axi_Ctrl_WVALID),
    .WREADY(s_axi_Ctrl_WREADY),
    .WDATA(s_axi_Ctrl_WDATA),
    .WSTRB(s_axi_Ctrl_WSTRB),
    .ARVALID(s_axi_Ctrl_ARVALID),
    .ARREADY(s_axi_Ctrl_ARREADY),
    .ARADDR(s_axi_Ctrl_ARADDR),
    .RVALID(s_axi_Ctrl_RVALID),
    .RREADY(s_axi_Ctrl_RREADY),
    .RDATA(s_axi_Ctrl_RDATA),
    .RRESP(s_axi_Ctrl_RRESP),
    .BVALID(s_axi_Ctrl_BVALID),
    .BREADY(s_axi_Ctrl_BREADY),
    .BRESP(s_axi_Ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .rows(rows),
    .cols(cols),
    .preFilterCap(preFilterCap),
    .uniquenessRatio(uniquenessRatio),
    .textureThreshold(textureThreshold),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

stereolbm_axis_cambm_Loop_VITIS_LOOP_46_1_proc Loop_VITIS_LOOP_46_1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_VITIS_LOOP_46_1_proc_U0_ap_start),
    .ap_done(Loop_VITIS_LOOP_46_1_proc_U0_ap_done),
    .ap_continue(Loop_VITIS_LOOP_46_1_proc_U0_ap_continue),
    .ap_idle(Loop_VITIS_LOOP_46_1_proc_U0_ap_idle),
    .ap_ready(Loop_VITIS_LOOP_46_1_proc_U0_ap_ready),
    .irA_r_fix_address0(Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_address0),
    .irA_r_fix_ce0(Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_ce0),
    .irA_r_fix_we0(Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_we0),
    .irA_r_fix_d0(Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_d0),
    .irA_l_fix_address0(Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_address0),
    .irA_l_fix_ce0(Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_ce0),
    .irA_l_fix_we0(Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_we0),
    .irA_l_fix_d0(Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_d0),
    .cameraMA_r_fix_address0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_address0),
    .cameraMA_r_fix_ce0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_ce0),
    .cameraMA_r_fix_we0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_we0),
    .cameraMA_r_fix_d0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_d0),
    .cameraMA_l_fix_address0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_address0),
    .cameraMA_l_fix_ce0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_ce0),
    .cameraMA_l_fix_we0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_we0),
    .cameraMA_l_fix_d0(Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_d0)
);

stereolbm_axis_cambm_Loop_VITIS_LOOP_55_2_proc Loop_VITIS_LOOP_55_2_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_VITIS_LOOP_55_2_proc_U0_ap_start),
    .ap_done(Loop_VITIS_LOOP_55_2_proc_U0_ap_done),
    .ap_continue(Loop_VITIS_LOOP_55_2_proc_U0_ap_continue),
    .ap_idle(Loop_VITIS_LOOP_55_2_proc_U0_ap_idle),
    .ap_ready(Loop_VITIS_LOOP_55_2_proc_U0_ap_ready),
    .distC_r_fix_address0(Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_address0),
    .distC_r_fix_ce0(Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_ce0),
    .distC_r_fix_we0(Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_we0),
    .distC_r_fix_d0(Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_d0),
    .distC_l_fix_address0(Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_address0),
    .distC_l_fix_ce0(Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_ce0),
    .distC_l_fix_we0(Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_we0),
    .distC_l_fix_d0(Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_d0)
);

stereolbm_axis_cambm_Block_for_end72_proc Block_for_end72_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_for_end72_proc_U0_ap_start),
    .ap_done(Block_for_end72_proc_U0_ap_done),
    .ap_continue(Block_for_end72_proc_U0_ap_continue),
    .ap_idle(Block_for_end72_proc_U0_ap_idle),
    .ap_ready(Block_for_end72_proc_U0_ap_ready),
    .preFilterCap(preFilterCap),
    .uniquenessRatio(uniquenessRatio),
    .textureThreshold(textureThreshold),
    .rows(rows),
    .cols(cols),
    .ap_return_0(Block_for_end72_proc_U0_ap_return_0),
    .ap_return_1(Block_for_end72_proc_U0_ap_return_1),
    .ap_return_2(Block_for_end72_proc_U0_ap_return_2),
    .ap_return_3(Block_for_end72_proc_U0_ap_return_3),
    .ap_return_4(Block_for_end72_proc_U0_ap_return_4),
    .ap_return_5(Block_for_end72_proc_U0_ap_return_5),
    .ap_return_6(Block_for_end72_proc_U0_ap_return_6),
    .ap_return_7(Block_for_end72_proc_U0_ap_return_7),
    .ap_return_8(Block_for_end72_proc_U0_ap_return_8),
    .ap_return_9(Block_for_end72_proc_U0_ap_return_9),
    .ap_return_10(Block_for_end72_proc_U0_ap_return_10),
    .ap_return_11(Block_for_end72_proc_U0_ap_return_11),
    .ap_return_12(Block_for_end72_proc_U0_ap_return_12),
    .ap_return_13(Block_for_end72_proc_U0_ap_return_13),
    .ap_return_14(Block_for_end72_proc_U0_ap_return_14)
);

stereolbm_axis_cambm_AXIvideo2xfMat_8_0_600_800_1_2_1 AXIvideo2xfMat_8_0_600_800_1_2_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_start),
    .start_full_n(start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_full_n),
    .ap_done(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_done),
    .ap_continue(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_continue),
    .ap_idle(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_idle),
    .ap_ready(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_ready),
    .start_out(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_start_out),
    .start_write(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_start_write),
    .vid_inL_TDATA(vid_inL_TDATA),
    .vid_inL_TVALID(vid_inL_TVALID),
    .vid_inL_TREADY(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_vid_inL_TREADY),
    .vid_inL_TKEEP(vid_inL_TKEEP),
    .vid_inL_TSTRB(vid_inL_TSTRB),
    .vid_inL_TUSER(vid_inL_TUSER),
    .vid_inL_TLAST(vid_inL_TLAST),
    .vid_inL_TID(vid_inL_TID),
    .vid_inL_TDEST(vid_inL_TDEST),
    .p_read(imgL_in_rows_c59_channel_dout),
    .p_read1(imgL_in_cols_c60_channel_dout),
    .imgL_in_data_din(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_din),
    .imgL_in_data_num_data_valid(imgL_in_data_num_data_valid),
    .imgL_in_data_fifo_cap(imgL_in_data_fifo_cap),
    .imgL_in_data_full_n(imgL_in_data_full_n),
    .imgL_in_data_write(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_write),
    .imgL_in_rows_c_din(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_din),
    .imgL_in_rows_c_num_data_valid(imgL_in_rows_c_num_data_valid),
    .imgL_in_rows_c_fifo_cap(imgL_in_rows_c_fifo_cap),
    .imgL_in_rows_c_full_n(imgL_in_rows_c_full_n),
    .imgL_in_rows_c_write(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_write),
    .imgL_in_cols_c_din(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_din),
    .imgL_in_cols_c_num_data_valid(imgL_in_cols_c_num_data_valid),
    .imgL_in_cols_c_fifo_cap(imgL_in_cols_c_fifo_cap),
    .imgL_in_cols_c_full_n(imgL_in_cols_c_full_n),
    .imgL_in_cols_c_write(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_write)
);

stereolbm_axis_cambm_AXIvideo2xfMat_8_0_600_800_1_2_s AXIvideo2xfMat_8_0_600_800_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_start),
    .start_full_n(start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_full_n),
    .ap_done(AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_done),
    .ap_continue(AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_continue),
    .ap_idle(AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_idle),
    .ap_ready(AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_ready),
    .start_out(AXIvideo2xfMat_8_0_600_800_1_2_U0_start_out),
    .start_write(AXIvideo2xfMat_8_0_600_800_1_2_U0_start_write),
    .vid_inR_TDATA(vid_inR_TDATA),
    .vid_inR_TVALID(vid_inR_TVALID),
    .vid_inR_TREADY(AXIvideo2xfMat_8_0_600_800_1_2_U0_vid_inR_TREADY),
    .vid_inR_TKEEP(vid_inR_TKEEP),
    .vid_inR_TSTRB(vid_inR_TSTRB),
    .vid_inR_TUSER(vid_inR_TUSER),
    .vid_inR_TLAST(vid_inR_TLAST),
    .vid_inR_TID(vid_inR_TID),
    .vid_inR_TDEST(vid_inR_TDEST),
    .p_read(imgR_in_rows_c61_channel_dout),
    .p_read1(imgR_in_cols_c62_channel_dout),
    .imgR_in_data_din(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_din),
    .imgR_in_data_num_data_valid(imgR_in_data_num_data_valid),
    .imgR_in_data_fifo_cap(imgR_in_data_fifo_cap),
    .imgR_in_data_full_n(imgR_in_data_full_n),
    .imgR_in_data_write(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_write),
    .imgR_in_rows_c_din(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_din),
    .imgR_in_rows_c_num_data_valid(imgR_in_rows_c_num_data_valid),
    .imgR_in_rows_c_fifo_cap(imgR_in_rows_c_fifo_cap),
    .imgR_in_rows_c_full_n(imgR_in_rows_c_full_n),
    .imgR_in_rows_c_write(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_write),
    .imgR_in_cols_c_din(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_din),
    .imgR_in_cols_c_num_data_valid(imgR_in_cols_c_num_data_valid),
    .imgR_in_cols_c_fifo_cap(imgR_in_cols_c_fifo_cap),
    .imgR_in_cols_c_full_n(imgR_in_cols_c_full_n),
    .imgR_in_cols_c_write(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_write)
);

stereolbm_axis_cambm_InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_s InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_start),
    .ap_done(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_done),
    .ap_continue(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_continue),
    .ap_idle(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_idle),
    .ap_ready(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready),
    .cameraMatrix_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_address0),
    .cameraMatrix_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_cameraMatrix_ce0),
    .cameraMatrix_q0(cameraMA_l_fix_t_q0),
    .distCoeffs_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_address0),
    .distCoeffs_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_distCoeffs_ce0),
    .distCoeffs_q0(distC_l_fix_t_q0),
    .ir_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_address0),
    .ir_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ir_ce0),
    .ir_q0(irA_l_fix_t_q0),
    .p_read(mapxLMat_rows_dout),
    .p_read1(mapxLMat_cols_dout),
    .mapxLMat_data_din(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_din),
    .mapxLMat_data_num_data_valid(mapxLMat_data_num_data_valid),
    .mapxLMat_data_fifo_cap(mapxLMat_data_fifo_cap),
    .mapxLMat_data_full_n(mapxLMat_data_full_n),
    .mapxLMat_data_write(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_write),
    .mapyLMat_data_din(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_din),
    .mapyLMat_data_num_data_valid(mapyLMat_data_num_data_valid),
    .mapyLMat_data_fifo_cap(mapyLMat_data_fifo_cap),
    .mapyLMat_data_full_n(mapyLMat_data_full_n),
    .mapyLMat_data_write(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_write)
);

stereolbm_axis_cambm_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2 remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0(
    .p_src_mat_rows_dout(imgL_in_rows_c_dout),
    .p_src_mat_rows_empty_n(imgL_in_rows_c_empty_n),
    .p_src_mat_rows_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_rows_read),
    .p_src_mat_cols_dout(imgL_in_cols_c_dout),
    .p_src_mat_cols_empty_n(imgL_in_cols_c_empty_n),
    .p_src_mat_cols_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_cols_read),
    .imgL_in_data_dout(imgL_in_data_dout),
    .imgL_in_data_empty_n(imgL_in_data_empty_n),
    .imgL_in_data_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_imgL_in_data_read),
    .leftRemappedMat_data_din(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_din),
    .leftRemappedMat_data_full_n(leftRemappedMat_data_full_n),
    .leftRemappedMat_data_write(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_write),
    .mapxLMat_data_dout(mapxLMat_data_dout),
    .mapxLMat_data_empty_n(mapxLMat_data_empty_n),
    .mapxLMat_data_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapxLMat_data_read),
    .mapyLMat_data_dout(mapyLMat_data_dout),
    .mapyLMat_data_empty_n(mapyLMat_data_empty_n),
    .mapyLMat_data_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapyLMat_data_read),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_start),
    .ap_done(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_done),
    .ap_ready(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_ready),
    .ap_idle(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_idle),
    .ap_continue(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_continue)
);

stereolbm_axis_cambm_InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7 InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_start),
    .ap_done(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_done),
    .ap_continue(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_continue),
    .ap_idle(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_idle),
    .ap_ready(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready),
    .cameraMatrix_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_address0),
    .cameraMatrix_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_cameraMatrix_ce0),
    .cameraMatrix_q0(cameraMA_r_fix_t_q0),
    .distCoeffs_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_address0),
    .distCoeffs_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_distCoeffs_ce0),
    .distCoeffs_q0(distC_r_fix_t_q0),
    .ir_address0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_address0),
    .ir_ce0(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ir_ce0),
    .ir_q0(irA_r_fix_t_q0),
    .p_read(mapxRMat_rows_dout),
    .p_read1(mapxRMat_cols_dout),
    .mapxRMat_data_din(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_din),
    .mapxRMat_data_num_data_valid(mapxRMat_data_num_data_valid),
    .mapxRMat_data_fifo_cap(mapxRMat_data_fifo_cap),
    .mapxRMat_data_full_n(mapxRMat_data_full_n),
    .mapxRMat_data_write(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_write),
    .mapyRMat_data_din(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_din),
    .mapyRMat_data_num_data_valid(mapyRMat_data_num_data_valid),
    .mapyRMat_data_fifo_cap(mapyRMat_data_fifo_cap),
    .mapyRMat_data_full_n(mapyRMat_data_full_n),
    .mapyRMat_data_write(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_write)
);

stereolbm_axis_cambm_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_s remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0(
    .p_src_mat_rows_dout(imgR_in_rows_c_dout),
    .p_src_mat_rows_empty_n(imgR_in_rows_c_empty_n),
    .p_src_mat_rows_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_rows_read),
    .p_src_mat_cols_dout(imgR_in_cols_c_dout),
    .p_src_mat_cols_empty_n(imgR_in_cols_c_empty_n),
    .p_src_mat_cols_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_cols_read),
    .imgR_in_data_dout(imgR_in_data_dout),
    .imgR_in_data_empty_n(imgR_in_data_empty_n),
    .imgR_in_data_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_imgR_in_data_read),
    .rightRemappedMat_data_din(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_din),
    .rightRemappedMat_data_full_n(rightRemappedMat_data_full_n),
    .rightRemappedMat_data_write(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_write),
    .mapxRMat_data_dout(mapxRMat_data_dout),
    .mapxRMat_data_empty_n(mapxRMat_data_empty_n),
    .mapxRMat_data_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapxRMat_data_read),
    .mapyRMat_data_dout(mapyRMat_data_dout),
    .mapyRMat_data_empty_n(mapyRMat_data_empty_n),
    .mapyRMat_data_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapyRMat_data_read),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_start),
    .ap_done(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_done),
    .ap_ready(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_ready),
    .ap_idle(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_idle),
    .ap_continue(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_continue)
);

stereolbm_axis_cambm_StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_s StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_start),
    .start_full_n(start_for_ConvertShiftAbs_U0_full_n),
    .ap_done(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_done),
    .ap_continue(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_continue),
    .ap_idle(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_idle),
    .ap_ready(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready),
    .start_out(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_start_out),
    .start_write(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_start_write),
    .p_read(leftRemappedMat_rows_dout),
    .p_read1(leftRemappedMat_cols_dout),
    .leftRemappedMat_data_dout(leftRemappedMat_data_dout),
    .leftRemappedMat_data_num_data_valid(leftRemappedMat_data_num_data_valid),
    .leftRemappedMat_data_fifo_cap(leftRemappedMat_data_fifo_cap),
    .leftRemappedMat_data_empty_n(leftRemappedMat_data_empty_n),
    .leftRemappedMat_data_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_leftRemappedMat_data_read),
    .p_read2(rightRemappedMat_rows_dout),
    .p_read3(rightRemappedMat_cols_dout),
    .rightRemappedMat_data_dout(rightRemappedMat_data_dout),
    .rightRemappedMat_data_num_data_valid(rightRemappedMat_data_num_data_valid),
    .rightRemappedMat_data_fifo_cap(rightRemappedMat_data_fifo_cap),
    .rightRemappedMat_data_empty_n(rightRemappedMat_data_empty_n),
    .rightRemappedMat_data_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_rightRemappedMat_data_read),
    .img_disp16u_data_din(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_din),
    .img_disp16u_data_num_data_valid(img_disp16u_data_num_data_valid),
    .img_disp16u_data_fifo_cap(img_disp16u_data_fifo_cap),
    .img_disp16u_data_full_n(img_disp16u_data_full_n),
    .img_disp16u_data_write(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_write),
    .p_read4(bmState_preFilterCap_dout),
    .p_read5(bmState_textureThreshold_dout),
    .p_read6(bmState_uniquenessRatio_dout)
);

stereolbm_axis_cambm_Block_for_end7235_proc Block_for_end7235_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_for_end7235_proc_U0_ap_start),
    .ap_done(Block_for_end7235_proc_U0_ap_done),
    .ap_continue(Block_for_end7235_proc_U0_ap_continue),
    .ap_idle(Block_for_end7235_proc_U0_ap_idle),
    .ap_ready(Block_for_end7235_proc_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .ap_return_0(Block_for_end7235_proc_U0_ap_return_0),
    .ap_return_1(Block_for_end7235_proc_U0_ap_return_1)
);

stereolbm_axis_cambm_ConvertShiftAbs ConvertShiftAbs_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ConvertShiftAbs_U0_ap_start),
    .ap_done(ConvertShiftAbs_U0_ap_done),
    .ap_continue(ConvertShiftAbs_U0_ap_continue),
    .ap_idle(ConvertShiftAbs_U0_ap_idle),
    .ap_ready(ConvertShiftAbs_U0_ap_ready),
    .img_disp16u_data_dout(img_disp16u_data_dout),
    .img_disp16u_data_num_data_valid(img_disp16u_data_num_data_valid),
    .img_disp16u_data_fifo_cap(img_disp16u_data_fifo_cap),
    .img_disp16u_data_empty_n(img_disp16u_data_empty_n),
    .img_disp16u_data_read(ConvertShiftAbs_U0_img_disp16u_data_read),
    .img_disp8u_data_din(ConvertShiftAbs_U0_img_disp8u_data_din),
    .img_disp8u_data_num_data_valid(img_disp8u_data_num_data_valid),
    .img_disp8u_data_fifo_cap(img_disp8u_data_fifo_cap),
    .img_disp8u_data_full_n(img_disp8u_data_full_n),
    .img_disp8u_data_write(ConvertShiftAbs_U0_img_disp8u_data_write)
);

stereolbm_axis_cambm_Block_for_end7237_proc Block_for_end7237_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_for_end7237_proc_U0_ap_start),
    .ap_done(Block_for_end7237_proc_U0_ap_done),
    .ap_continue(Block_for_end7237_proc_U0_ap_continue),
    .ap_idle(Block_for_end7237_proc_U0_ap_idle),
    .ap_ready(Block_for_end7237_proc_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .ap_return_0(Block_for_end7237_proc_U0_ap_return_0),
    .ap_return_1(Block_for_end7237_proc_U0_ap_return_1)
);

stereolbm_axis_cambm_erode_0_0_600_800_0_3_3_1_1_2_2_s erode_0_0_600_800_0_3_3_1_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start),
    .ap_done(erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_done),
    .ap_continue(erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue),
    .ap_idle(erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle),
    .ap_ready(erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready),
    .p_read(img_disp8u_rows_dout),
    .p_read1(img_disp8u_cols_dout),
    .img_disp8u_data_dout(img_disp8u_data_dout),
    .img_disp8u_data_num_data_valid(img_disp8u_data_num_data_valid),
    .img_disp8u_data_fifo_cap(img_disp8u_data_fifo_cap),
    .img_disp8u_data_empty_n(img_disp8u_data_empty_n),
    .img_disp8u_data_read(erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_data_read),
    .img_disp8u_erode_data_din(erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_din),
    .img_disp8u_erode_data_num_data_valid(img_disp8u_erode_data_num_data_valid),
    .img_disp8u_erode_data_fifo_cap(img_disp8u_erode_data_fifo_cap),
    .img_disp8u_erode_data_full_n(img_disp8u_erode_data_full_n),
    .img_disp8u_erode_data_write(erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_write)
);

stereolbm_axis_cambm_Block_for_end7239_proc Block_for_end7239_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_for_end7239_proc_U0_ap_start),
    .ap_done(Block_for_end7239_proc_U0_ap_done),
    .ap_continue(Block_for_end7239_proc_U0_ap_continue),
    .ap_idle(Block_for_end7239_proc_U0_ap_idle),
    .ap_ready(Block_for_end7239_proc_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .ap_return_0(Block_for_end7239_proc_U0_ap_return_0),
    .ap_return_1(Block_for_end7239_proc_U0_ap_return_1)
);

stereolbm_axis_cambm_dilate_0_0_600_800_0_3_3_1_1_2_2_s dilate_0_0_600_800_0_3_3_1_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start),
    .ap_done(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_done),
    .ap_continue(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue),
    .ap_idle(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle),
    .ap_ready(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready),
    .p_read(img_disp8u_erode_rows_dout),
    .p_read1(img_disp8u_erode_cols_dout),
    .img_disp8u_erode_data_dout(img_disp8u_erode_data_dout),
    .img_disp8u_erode_data_num_data_valid(img_disp8u_erode_data_num_data_valid),
    .img_disp8u_erode_data_fifo_cap(img_disp8u_erode_data_fifo_cap),
    .img_disp8u_erode_data_empty_n(img_disp8u_erode_data_empty_n),
    .img_disp8u_erode_data_read(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_read),
    .img_disp8u_dilate_data_din(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_din),
    .img_disp8u_dilate_data_num_data_valid(img_disp8u_dilate_data_num_data_valid),
    .img_disp8u_dilate_data_fifo_cap(img_disp8u_dilate_data_fifo_cap),
    .img_disp8u_dilate_data_full_n(img_disp8u_dilate_data_full_n),
    .img_disp8u_dilate_data_write(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_write)
);

stereolbm_axis_cambm_xfMat2AXIvideo_8_0_600_800_1_2_s xfMat2AXIvideo_8_0_600_800_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_start),
    .ap_done(xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_done),
    .ap_continue(xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_continue),
    .ap_idle(xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_idle),
    .ap_ready(xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_ready),
    .p_read(img_disp8u_dilate_rows_dout),
    .p_read1(img_disp8u_dilate_cols_dout),
    .img_disp8u_dilate_data_dout(img_disp8u_dilate_data_dout),
    .img_disp8u_dilate_data_num_data_valid(img_disp8u_dilate_data_num_data_valid),
    .img_disp8u_dilate_data_fifo_cap(img_disp8u_dilate_data_fifo_cap),
    .img_disp8u_dilate_data_empty_n(img_disp8u_dilate_data_empty_n),
    .img_disp8u_dilate_data_read(xfMat2AXIvideo_8_0_600_800_1_2_U0_img_disp8u_dilate_data_read),
    .vid_out_TDATA(xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDATA),
    .vid_out_TVALID(xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TVALID),
    .vid_out_TREADY(vid_out_TREADY),
    .vid_out_TKEEP(xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TKEEP),
    .vid_out_TSTRB(xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TSTRB),
    .vid_out_TUSER(xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TUSER),
    .vid_out_TLAST(xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TLAST),
    .vid_out_TID(xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TID),
    .vid_out_TDEST(xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDEST)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x mapxLMat_rows_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_0),
    .if_full_n(mapxLMat_rows_full_n),
    .if_write(ap_channel_done_mapxLMat_rows),
    .if_dout(mapxLMat_rows_dout),
    .if_num_data_valid(mapxLMat_rows_num_data_valid),
    .if_fifo_cap(mapxLMat_rows_fifo_cap),
    .if_empty_n(mapxLMat_rows_empty_n),
    .if_read(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x mapxLMat_cols_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_1),
    .if_full_n(mapxLMat_cols_full_n),
    .if_write(ap_channel_done_mapxLMat_cols),
    .if_dout(mapxLMat_cols_dout),
    .if_num_data_valid(mapxLMat_cols_num_data_valid),
    .if_fifo_cap(mapxLMat_cols_fifo_cap),
    .if_empty_n(mapxLMat_cols_empty_n),
    .if_read(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x mapxRMat_rows_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_2),
    .if_full_n(mapxRMat_rows_full_n),
    .if_write(ap_channel_done_mapxRMat_rows),
    .if_dout(mapxRMat_rows_dout),
    .if_num_data_valid(mapxRMat_rows_num_data_valid),
    .if_fifo_cap(mapxRMat_rows_fifo_cap),
    .if_empty_n(mapxRMat_rows_empty_n),
    .if_read(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x mapxRMat_cols_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_3),
    .if_full_n(mapxRMat_cols_full_n),
    .if_write(ap_channel_done_mapxRMat_cols),
    .if_dout(mapxRMat_cols_dout),
    .if_num_data_valid(mapxRMat_cols_num_data_valid),
    .if_fifo_cap(mapxRMat_cols_fifo_cap),
    .if_empty_n(mapxRMat_cols_empty_n),
    .if_read(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x imgL_in_rows_c59_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_4),
    .if_full_n(imgL_in_rows_c59_channel_full_n),
    .if_write(ap_channel_done_imgL_in_rows_c59_channel),
    .if_dout(imgL_in_rows_c59_channel_dout),
    .if_num_data_valid(imgL_in_rows_c59_channel_num_data_valid),
    .if_fifo_cap(imgL_in_rows_c59_channel_fifo_cap),
    .if_empty_n(imgL_in_rows_c59_channel_empty_n),
    .if_read(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x imgL_in_cols_c60_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_5),
    .if_full_n(imgL_in_cols_c60_channel_full_n),
    .if_write(ap_channel_done_imgL_in_cols_c60_channel),
    .if_dout(imgL_in_cols_c60_channel_dout),
    .if_num_data_valid(imgL_in_cols_c60_channel_num_data_valid),
    .if_fifo_cap(imgL_in_cols_c60_channel_fifo_cap),
    .if_empty_n(imgL_in_cols_c60_channel_empty_n),
    .if_read(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x imgR_in_rows_c61_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_6),
    .if_full_n(imgR_in_rows_c61_channel_full_n),
    .if_write(ap_channel_done_imgR_in_rows_c61_channel),
    .if_dout(imgR_in_rows_c61_channel_dout),
    .if_num_data_valid(imgR_in_rows_c61_channel_num_data_valid),
    .if_fifo_cap(imgR_in_rows_c61_channel_fifo_cap),
    .if_empty_n(imgR_in_rows_c61_channel_empty_n),
    .if_read(AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x imgR_in_cols_c62_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_7),
    .if_full_n(imgR_in_cols_c62_channel_full_n),
    .if_write(ap_channel_done_imgR_in_cols_c62_channel),
    .if_dout(imgR_in_cols_c62_channel_dout),
    .if_num_data_valid(imgR_in_cols_c62_channel_num_data_valid),
    .if_fifo_cap(imgR_in_cols_c62_channel_fifo_cap),
    .if_empty_n(imgR_in_cols_c62_channel_empty_n),
    .if_read(AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d4_S_x bmState_preFilterCap_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_8),
    .if_full_n(bmState_preFilterCap_full_n),
    .if_write(ap_channel_done_bmState_preFilterCap),
    .if_dout(bmState_preFilterCap_dout),
    .if_num_data_valid(bmState_preFilterCap_num_data_valid),
    .if_fifo_cap(bmState_preFilterCap_fifo_cap),
    .if_empty_n(bmState_preFilterCap_empty_n),
    .if_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d4_S_x bmState_uniquenessRatio_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_9),
    .if_full_n(bmState_uniquenessRatio_full_n),
    .if_write(ap_channel_done_bmState_uniquenessRatio),
    .if_dout(bmState_uniquenessRatio_dout),
    .if_num_data_valid(bmState_uniquenessRatio_num_data_valid),
    .if_fifo_cap(bmState_uniquenessRatio_fifo_cap),
    .if_empty_n(bmState_uniquenessRatio_empty_n),
    .if_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d4_S_x bmState_textureThreshold_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_10),
    .if_full_n(bmState_textureThreshold_full_n),
    .if_write(ap_channel_done_bmState_textureThreshold),
    .if_dout(bmState_textureThreshold_dout),
    .if_num_data_valid(bmState_textureThreshold_num_data_valid),
    .if_fifo_cap(bmState_textureThreshold_fifo_cap),
    .if_empty_n(bmState_textureThreshold_empty_n),
    .if_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d4_S_x leftRemappedMat_rows_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_11),
    .if_full_n(leftRemappedMat_rows_full_n),
    .if_write(ap_channel_done_leftRemappedMat_rows),
    .if_dout(leftRemappedMat_rows_dout),
    .if_num_data_valid(leftRemappedMat_rows_num_data_valid),
    .if_fifo_cap(leftRemappedMat_rows_fifo_cap),
    .if_empty_n(leftRemappedMat_rows_empty_n),
    .if_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d4_S_x leftRemappedMat_cols_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_12),
    .if_full_n(leftRemappedMat_cols_full_n),
    .if_write(ap_channel_done_leftRemappedMat_cols),
    .if_dout(leftRemappedMat_cols_dout),
    .if_num_data_valid(leftRemappedMat_cols_num_data_valid),
    .if_fifo_cap(leftRemappedMat_cols_fifo_cap),
    .if_empty_n(leftRemappedMat_cols_empty_n),
    .if_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d4_S_x rightRemappedMat_rows_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_13),
    .if_full_n(rightRemappedMat_rows_full_n),
    .if_write(ap_channel_done_rightRemappedMat_rows),
    .if_dout(rightRemappedMat_rows_dout),
    .if_num_data_valid(rightRemappedMat_rows_num_data_valid),
    .if_fifo_cap(rightRemappedMat_rows_fifo_cap),
    .if_empty_n(rightRemappedMat_rows_empty_n),
    .if_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d4_S_x rightRemappedMat_cols_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end72_proc_U0_ap_return_14),
    .if_full_n(rightRemappedMat_cols_full_n),
    .if_write(ap_channel_done_rightRemappedMat_cols),
    .if_dout(rightRemappedMat_cols_dout),
    .if_num_data_valid(rightRemappedMat_cols_num_data_valid),
    .if_fifo_cap(rightRemappedMat_cols_fifo_cap),
    .if_empty_n(rightRemappedMat_cols_empty_n),
    .if_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w8_d2_S_x imgL_in_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_din),
    .if_full_n(imgL_in_data_full_n),
    .if_write(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_data_write),
    .if_dout(imgL_in_data_dout),
    .if_num_data_valid(imgL_in_data_num_data_valid),
    .if_fifo_cap(imgL_in_data_fifo_cap),
    .if_empty_n(imgL_in_data_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_imgL_in_data_read)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x imgL_in_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_din),
    .if_full_n(imgL_in_rows_c_full_n),
    .if_write(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_rows_c_write),
    .if_dout(imgL_in_rows_c_dout),
    .if_num_data_valid(imgL_in_rows_c_num_data_valid),
    .if_fifo_cap(imgL_in_rows_c_fifo_cap),
    .if_empty_n(imgL_in_rows_c_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_rows_read)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x imgL_in_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_din),
    .if_full_n(imgL_in_cols_c_full_n),
    .if_write(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_imgL_in_cols_c_write),
    .if_dout(imgL_in_cols_c_dout),
    .if_num_data_valid(imgL_in_cols_c_num_data_valid),
    .if_fifo_cap(imgL_in_cols_c_fifo_cap),
    .if_empty_n(imgL_in_cols_c_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_p_src_mat_cols_read)
);

stereolbm_axis_cambm_fifo_w8_d2_S_x imgR_in_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_din),
    .if_full_n(imgR_in_data_full_n),
    .if_write(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_data_write),
    .if_dout(imgR_in_data_dout),
    .if_num_data_valid(imgR_in_data_num_data_valid),
    .if_fifo_cap(imgR_in_data_fifo_cap),
    .if_empty_n(imgR_in_data_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_imgR_in_data_read)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x imgR_in_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_din),
    .if_full_n(imgR_in_rows_c_full_n),
    .if_write(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_rows_c_write),
    .if_dout(imgR_in_rows_c_dout),
    .if_num_data_valid(imgR_in_rows_c_num_data_valid),
    .if_fifo_cap(imgR_in_rows_c_fifo_cap),
    .if_empty_n(imgR_in_rows_c_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_rows_read)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x imgR_in_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_din),
    .if_full_n(imgR_in_cols_c_full_n),
    .if_write(AXIvideo2xfMat_8_0_600_800_1_2_U0_imgR_in_cols_c_write),
    .if_dout(imgR_in_cols_c_dout),
    .if_num_data_valid(imgR_in_cols_c_num_data_valid),
    .if_fifo_cap(imgR_in_cols_c_fifo_cap),
    .if_empty_n(imgR_in_cols_c_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_p_src_mat_cols_read)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x mapxLMat_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_din),
    .if_full_n(mapxLMat_data_full_n),
    .if_write(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapxLMat_data_write),
    .if_dout(mapxLMat_data_dout),
    .if_num_data_valid(mapxLMat_data_num_data_valid),
    .if_fifo_cap(mapxLMat_data_fifo_cap),
    .if_empty_n(mapxLMat_data_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapxLMat_data_read)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x mapyLMat_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_din),
    .if_full_n(mapyLMat_data_full_n),
    .if_write(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_mapyLMat_data_write),
    .if_dout(mapyLMat_data_dout),
    .if_num_data_valid(mapyLMat_data_num_data_valid),
    .if_fifo_cap(mapyLMat_data_fifo_cap),
    .if_empty_n(mapyLMat_data_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_mapyLMat_data_read)
);

stereolbm_axis_cambm_fifo_w8_d2_S_x leftRemappedMat_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_din),
    .if_full_n(leftRemappedMat_data_full_n),
    .if_write(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_leftRemappedMat_data_write),
    .if_dout(leftRemappedMat_data_dout),
    .if_num_data_valid(leftRemappedMat_data_num_data_valid),
    .if_fifo_cap(leftRemappedMat_data_fifo_cap),
    .if_empty_n(leftRemappedMat_data_empty_n),
    .if_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_leftRemappedMat_data_read)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x mapxRMat_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_din),
    .if_full_n(mapxRMat_data_full_n),
    .if_write(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapxRMat_data_write),
    .if_dout(mapxRMat_data_dout),
    .if_num_data_valid(mapxRMat_data_num_data_valid),
    .if_fifo_cap(mapxRMat_data_fifo_cap),
    .if_empty_n(mapxRMat_data_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapxRMat_data_read)
);

stereolbm_axis_cambm_fifo_w32_d2_S_x mapyRMat_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_din),
    .if_full_n(mapyRMat_data_full_n),
    .if_write(InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_mapyRMat_data_write),
    .if_dout(mapyRMat_data_dout),
    .if_num_data_valid(mapyRMat_data_num_data_valid),
    .if_fifo_cap(mapyRMat_data_fifo_cap),
    .if_empty_n(mapyRMat_data_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_mapyRMat_data_read)
);

stereolbm_axis_cambm_fifo_w8_d2_S_x rightRemappedMat_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_din),
    .if_full_n(rightRemappedMat_data_full_n),
    .if_write(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_rightRemappedMat_data_write),
    .if_dout(rightRemappedMat_data_dout),
    .if_num_data_valid(rightRemappedMat_data_num_data_valid),
    .if_fifo_cap(rightRemappedMat_data_fifo_cap),
    .if_empty_n(rightRemappedMat_data_empty_n),
    .if_read(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_rightRemappedMat_data_read)
);

stereolbm_axis_cambm_fifo_w16_d2_S_x1 img_disp16u_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_din),
    .if_full_n(img_disp16u_data_full_n),
    .if_write(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_img_disp16u_data_write),
    .if_dout(img_disp16u_data_dout),
    .if_num_data_valid(img_disp16u_data_num_data_valid),
    .if_fifo_cap(img_disp16u_data_fifo_cap),
    .if_empty_n(img_disp16u_data_empty_n),
    .if_read(ConvertShiftAbs_U0_img_disp16u_data_read)
);

stereolbm_axis_cambm_fifo_w32_d6_S img_disp8u_rows_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end7235_proc_U0_ap_return_0),
    .if_full_n(img_disp8u_rows_full_n),
    .if_write(ap_channel_done_img_disp8u_rows),
    .if_dout(img_disp8u_rows_dout),
    .if_num_data_valid(img_disp8u_rows_num_data_valid),
    .if_fifo_cap(img_disp8u_rows_fifo_cap),
    .if_empty_n(img_disp8u_rows_empty_n),
    .if_read(erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d6_S img_disp8u_cols_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end7235_proc_U0_ap_return_1),
    .if_full_n(img_disp8u_cols_full_n),
    .if_write(ap_channel_done_img_disp8u_cols),
    .if_dout(img_disp8u_cols_dout),
    .if_num_data_valid(img_disp8u_cols_num_data_valid),
    .if_fifo_cap(img_disp8u_cols_fifo_cap),
    .if_empty_n(img_disp8u_cols_empty_n),
    .if_read(erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w8_d2_S_x img_disp8u_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ConvertShiftAbs_U0_img_disp8u_data_din),
    .if_full_n(img_disp8u_data_full_n),
    .if_write(ConvertShiftAbs_U0_img_disp8u_data_write),
    .if_dout(img_disp8u_data_dout),
    .if_num_data_valid(img_disp8u_data_num_data_valid),
    .if_fifo_cap(img_disp8u_data_fifo_cap),
    .if_empty_n(img_disp8u_data_empty_n),
    .if_read(erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_data_read)
);

stereolbm_axis_cambm_fifo_w32_d7_S img_disp8u_erode_rows_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end7237_proc_U0_ap_return_0),
    .if_full_n(img_disp8u_erode_rows_full_n),
    .if_write(ap_channel_done_img_disp8u_erode_rows),
    .if_dout(img_disp8u_erode_rows_dout),
    .if_num_data_valid(img_disp8u_erode_rows_num_data_valid),
    .if_fifo_cap(img_disp8u_erode_rows_fifo_cap),
    .if_empty_n(img_disp8u_erode_rows_empty_n),
    .if_read(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d7_S img_disp8u_erode_cols_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end7237_proc_U0_ap_return_1),
    .if_full_n(img_disp8u_erode_cols_full_n),
    .if_write(ap_channel_done_img_disp8u_erode_cols),
    .if_dout(img_disp8u_erode_cols_dout),
    .if_num_data_valid(img_disp8u_erode_cols_num_data_valid),
    .if_fifo_cap(img_disp8u_erode_cols_fifo_cap),
    .if_empty_n(img_disp8u_erode_cols_empty_n),
    .if_read(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w8_d2_S_x img_disp8u_erode_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_din),
    .if_full_n(img_disp8u_erode_data_full_n),
    .if_write(erode_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_write),
    .if_dout(img_disp8u_erode_data_dout),
    .if_num_data_valid(img_disp8u_erode_data_num_data_valid),
    .if_fifo_cap(img_disp8u_erode_data_fifo_cap),
    .if_empty_n(img_disp8u_erode_data_empty_n),
    .if_read(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_erode_data_read)
);

stereolbm_axis_cambm_fifo_w32_d8_S img_disp8u_dilate_rows_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end7239_proc_U0_ap_return_0),
    .if_full_n(img_disp8u_dilate_rows_full_n),
    .if_write(ap_channel_done_img_disp8u_dilate_rows),
    .if_dout(img_disp8u_dilate_rows_dout),
    .if_num_data_valid(img_disp8u_dilate_rows_num_data_valid),
    .if_fifo_cap(img_disp8u_dilate_rows_fifo_cap),
    .if_empty_n(img_disp8u_dilate_rows_empty_n),
    .if_read(xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w32_d8_S img_disp8u_dilate_cols_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_for_end7239_proc_U0_ap_return_1),
    .if_full_n(img_disp8u_dilate_cols_full_n),
    .if_write(ap_channel_done_img_disp8u_dilate_cols),
    .if_dout(img_disp8u_dilate_cols_dout),
    .if_num_data_valid(img_disp8u_dilate_cols_num_data_valid),
    .if_fifo_cap(img_disp8u_dilate_cols_fifo_cap),
    .if_empty_n(img_disp8u_dilate_cols_empty_n),
    .if_read(xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_ready)
);

stereolbm_axis_cambm_fifo_w8_d2_S_x img_disp8u_dilate_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_din),
    .if_full_n(img_disp8u_dilate_data_full_n),
    .if_write(dilate_0_0_600_800_0_3_3_1_1_2_2_U0_img_disp8u_dilate_data_write),
    .if_dout(img_disp8u_dilate_data_dout),
    .if_num_data_valid(img_disp8u_dilate_data_num_data_valid),
    .if_fifo_cap(img_disp8u_dilate_data_fifo_cap),
    .if_empty_n(img_disp8u_dilate_data_empty_n),
    .if_read(xfMat2AXIvideo_8_0_600_800_1_2_U0_img_disp8u_dilate_data_read)
);

stereolbm_axis_cambm_start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0 start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_din),
    .if_full_n(start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_full_n),
    .if_write(AXIvideo2xfMat_8_0_600_800_1_2_1_U0_start_write),
    .if_dout(start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_dout),
    .if_empty_n(start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0 start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_din),
    .if_full_n(start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_full_n),
    .if_write(AXIvideo2xfMat_8_0_600_800_1_2_U0_start_write),
    .if_dout(start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_dout),
    .if_empty_n(start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_empty_n),
    .if_read(remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_ready)
);

stereolbm_axis_cambm_start_for_ConvertShiftAbs_U0 start_for_ConvertShiftAbs_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_ConvertShiftAbs_U0_din),
    .if_full_n(start_for_ConvertShiftAbs_U0_full_n),
    .if_write(StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_start_write),
    .if_dout(start_for_ConvertShiftAbs_U0_dout),
    .if_empty_n(start_for_ConvertShiftAbs_U0_empty_n),
    .if_read(ConvertShiftAbs_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_for_end7235_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_for_end7235_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_for_end7235_proc_U0_ap_ready <= ap_sync_Block_for_end7235_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_for_end7237_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_for_end7237_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_for_end7237_proc_U0_ap_ready <= ap_sync_Block_for_end7237_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_for_end7239_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_for_end7239_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_for_end7239_proc_U0_ap_ready <= ap_sync_Block_for_end7239_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_for_end72_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_for_end72_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_for_end72_proc_U0_ap_ready <= ap_sync_Block_for_end72_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready <= ap_sync_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready <= ap_sync_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_bmState_preFilterCap <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_bmState_preFilterCap <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_bmState_preFilterCap <= ap_sync_channel_write_bmState_preFilterCap;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_bmState_textureThreshold <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_bmState_textureThreshold <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_bmState_textureThreshold <= ap_sync_channel_write_bmState_textureThreshold;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_bmState_uniquenessRatio <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_bmState_uniquenessRatio <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_bmState_uniquenessRatio <= ap_sync_channel_write_bmState_uniquenessRatio;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_cameraMA_l_fix <= 1'b0;
    end else begin
        if (((Loop_VITIS_LOOP_46_1_proc_U0_ap_done & Loop_VITIS_LOOP_46_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_cameraMA_l_fix <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_cameraMA_l_fix <= ap_sync_channel_write_cameraMA_l_fix;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_cameraMA_r_fix <= 1'b0;
    end else begin
        if (((Loop_VITIS_LOOP_46_1_proc_U0_ap_done & Loop_VITIS_LOOP_46_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_cameraMA_r_fix <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_cameraMA_r_fix <= ap_sync_channel_write_cameraMA_r_fix;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_distC_l_fix <= 1'b0;
    end else begin
        if (((Loop_VITIS_LOOP_55_2_proc_U0_ap_done & Loop_VITIS_LOOP_55_2_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_distC_l_fix <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_distC_l_fix <= ap_sync_channel_write_distC_l_fix;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_distC_r_fix <= 1'b0;
    end else begin
        if (((Loop_VITIS_LOOP_55_2_proc_U0_ap_done & Loop_VITIS_LOOP_55_2_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_distC_r_fix <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_distC_r_fix <= ap_sync_channel_write_distC_r_fix;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgL_in_cols_c60_channel <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgL_in_cols_c60_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgL_in_cols_c60_channel <= ap_sync_channel_write_imgL_in_cols_c60_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgL_in_rows_c59_channel <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgL_in_rows_c59_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgL_in_rows_c59_channel <= ap_sync_channel_write_imgL_in_rows_c59_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgR_in_cols_c62_channel <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgR_in_cols_c62_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgR_in_cols_c62_channel <= ap_sync_channel_write_imgR_in_cols_c62_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgR_in_rows_c61_channel <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgR_in_rows_c61_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgR_in_rows_c61_channel <= ap_sync_channel_write_imgR_in_rows_c61_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_disp8u_cols <= 1'b0;
    end else begin
        if (((Block_for_end7235_proc_U0_ap_done & Block_for_end7235_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_disp8u_cols <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_disp8u_cols <= ap_sync_channel_write_img_disp8u_cols;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_disp8u_dilate_cols <= 1'b0;
    end else begin
        if (((Block_for_end7239_proc_U0_ap_done & Block_for_end7239_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_disp8u_dilate_cols <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_disp8u_dilate_cols <= ap_sync_channel_write_img_disp8u_dilate_cols;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_disp8u_dilate_rows <= 1'b0;
    end else begin
        if (((Block_for_end7239_proc_U0_ap_done & Block_for_end7239_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_disp8u_dilate_rows <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_disp8u_dilate_rows <= ap_sync_channel_write_img_disp8u_dilate_rows;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_disp8u_erode_cols <= 1'b0;
    end else begin
        if (((Block_for_end7237_proc_U0_ap_done & Block_for_end7237_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_disp8u_erode_cols <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_disp8u_erode_cols <= ap_sync_channel_write_img_disp8u_erode_cols;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_disp8u_erode_rows <= 1'b0;
    end else begin
        if (((Block_for_end7237_proc_U0_ap_done & Block_for_end7237_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_disp8u_erode_rows <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_disp8u_erode_rows <= ap_sync_channel_write_img_disp8u_erode_rows;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_disp8u_rows <= 1'b0;
    end else begin
        if (((Block_for_end7235_proc_U0_ap_done & Block_for_end7235_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_disp8u_rows <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_disp8u_rows <= ap_sync_channel_write_img_disp8u_rows;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_irA_l_fix <= 1'b0;
    end else begin
        if (((Loop_VITIS_LOOP_46_1_proc_U0_ap_done & Loop_VITIS_LOOP_46_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_irA_l_fix <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_irA_l_fix <= ap_sync_channel_write_irA_l_fix;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_irA_r_fix <= 1'b0;
    end else begin
        if (((Loop_VITIS_LOOP_46_1_proc_U0_ap_done & Loop_VITIS_LOOP_46_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_irA_r_fix <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_irA_r_fix <= ap_sync_channel_write_irA_r_fix;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_leftRemappedMat_cols <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_leftRemappedMat_cols <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_leftRemappedMat_cols <= ap_sync_channel_write_leftRemappedMat_cols;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_leftRemappedMat_rows <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_leftRemappedMat_rows <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_leftRemappedMat_rows <= ap_sync_channel_write_leftRemappedMat_rows;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mapxLMat_cols <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mapxLMat_cols <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mapxLMat_cols <= ap_sync_channel_write_mapxLMat_cols;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mapxLMat_rows <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mapxLMat_rows <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mapxLMat_rows <= ap_sync_channel_write_mapxLMat_rows;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mapxRMat_cols <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mapxRMat_cols <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mapxRMat_cols <= ap_sync_channel_write_mapxRMat_cols;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mapxRMat_rows <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mapxRMat_rows <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mapxRMat_rows <= ap_sync_channel_write_mapxRMat_rows;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_rightRemappedMat_cols <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_rightRemappedMat_cols <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_rightRemappedMat_cols <= ap_sync_channel_write_rightRemappedMat_cols;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_rightRemappedMat_rows <= 1'b0;
    end else begin
        if (((Block_for_end72_proc_U0_ap_done & Block_for_end72_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_rightRemappedMat_rows <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_rightRemappedMat_rows <= ap_sync_channel_write_rightRemappedMat_rows;
        end
    end
end

assign AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_continue = 1'b1;

assign AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_start = (imgL_in_rows_c59_channel_empty_n & imgL_in_cols_c60_channel_empty_n);

assign AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_continue = 1'b1;

assign AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_start = (imgR_in_rows_c61_channel_empty_n & imgR_in_cols_c62_channel_empty_n);

assign Block_for_end7235_proc_U0_ap_continue = (ap_sync_channel_write_img_disp8u_rows & ap_sync_channel_write_img_disp8u_cols);

assign Block_for_end7235_proc_U0_ap_start = ((ap_sync_reg_Block_for_end7235_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_for_end7237_proc_U0_ap_continue = (ap_sync_channel_write_img_disp8u_erode_rows & ap_sync_channel_write_img_disp8u_erode_cols);

assign Block_for_end7237_proc_U0_ap_start = ((ap_sync_reg_Block_for_end7237_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_for_end7239_proc_U0_ap_continue = (ap_sync_channel_write_img_disp8u_dilate_rows & ap_sync_channel_write_img_disp8u_dilate_cols);

assign Block_for_end7239_proc_U0_ap_start = ((ap_sync_reg_Block_for_end7239_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_for_end72_proc_U0_ap_continue = (ap_sync_channel_write_rightRemappedMat_rows & ap_sync_channel_write_rightRemappedMat_cols & ap_sync_channel_write_mapxRMat_rows & ap_sync_channel_write_mapxRMat_cols & ap_sync_channel_write_mapxLMat_rows & ap_sync_channel_write_mapxLMat_cols & ap_sync_channel_write_leftRemappedMat_rows & ap_sync_channel_write_leftRemappedMat_cols & ap_sync_channel_write_imgR_in_rows_c61_channel & ap_sync_channel_write_imgR_in_cols_c62_channel & ap_sync_channel_write_imgL_in_rows_c59_channel & ap_sync_channel_write_imgL_in_cols_c60_channel & ap_sync_channel_write_bmState_uniquenessRatio & ap_sync_channel_write_bmState_textureThreshold & ap_sync_channel_write_bmState_preFilterCap);

assign Block_for_end72_proc_U0_ap_start = ((ap_sync_reg_Block_for_end72_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign ConvertShiftAbs_U0_ap_continue = 1'b1;

assign ConvertShiftAbs_U0_ap_start = start_for_ConvertShiftAbs_U0_empty_n;

assign InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_continue = 1'b1;

assign InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_start = (mapxRMat_rows_empty_n & mapxRMat_cols_empty_n & irA_r_fix_t_empty_n & distC_r_fix_t_empty_n & cameraMA_r_fix_t_empty_n);

assign InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_continue = 1'b1;

assign InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_start = (mapxLMat_rows_empty_n & mapxLMat_cols_empty_n & irA_l_fix_t_empty_n & distC_l_fix_t_empty_n & cameraMA_l_fix_t_empty_n);

assign Loop_VITIS_LOOP_46_1_proc_U0_ap_continue = (ap_sync_channel_write_irA_r_fix & ap_sync_channel_write_irA_l_fix & ap_sync_channel_write_cameraMA_r_fix & ap_sync_channel_write_cameraMA_l_fix);

assign Loop_VITIS_LOOP_46_1_proc_U0_ap_start = ((ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_full_n = cameraMA_l_fix_i_full_n;

assign Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_full_n = cameraMA_r_fix_i_full_n;

assign Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_full_n = irA_l_fix_i_full_n;

assign Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_full_n = irA_r_fix_i_full_n;

assign Loop_VITIS_LOOP_55_2_proc_U0_ap_continue = (ap_sync_channel_write_distC_r_fix & ap_sync_channel_write_distC_l_fix);

assign Loop_VITIS_LOOP_55_2_proc_U0_ap_start = ((ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_full_n = distC_l_fix_i_full_n;

assign Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_full_n = distC_r_fix_i_full_n;

assign StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_continue = 1'b1;

assign StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_start = (rightRemappedMat_rows_empty_n & rightRemappedMat_cols_empty_n & leftRemappedMat_rows_empty_n & leftRemappedMat_cols_empty_n & bmState_uniquenessRatio_empty_n & bmState_textureThreshold_empty_n & bmState_preFilterCap_empty_n);

assign ap_channel_done_bmState_preFilterCap = ((ap_sync_reg_channel_write_bmState_preFilterCap ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_bmState_textureThreshold = ((ap_sync_reg_channel_write_bmState_textureThreshold ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_bmState_uniquenessRatio = ((ap_sync_reg_channel_write_bmState_uniquenessRatio ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_cameraMA_l_fix = ((ap_sync_reg_channel_write_cameraMA_l_fix ^ 1'b1) & Loop_VITIS_LOOP_46_1_proc_U0_ap_done);

assign ap_channel_done_cameraMA_r_fix = ((ap_sync_reg_channel_write_cameraMA_r_fix ^ 1'b1) & Loop_VITIS_LOOP_46_1_proc_U0_ap_done);

assign ap_channel_done_distC_l_fix = ((ap_sync_reg_channel_write_distC_l_fix ^ 1'b1) & Loop_VITIS_LOOP_55_2_proc_U0_ap_done);

assign ap_channel_done_distC_r_fix = ((ap_sync_reg_channel_write_distC_r_fix ^ 1'b1) & Loop_VITIS_LOOP_55_2_proc_U0_ap_done);

assign ap_channel_done_imgL_in_cols_c60_channel = ((ap_sync_reg_channel_write_imgL_in_cols_c60_channel ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_imgL_in_rows_c59_channel = ((ap_sync_reg_channel_write_imgL_in_rows_c59_channel ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_imgR_in_cols_c62_channel = ((ap_sync_reg_channel_write_imgR_in_cols_c62_channel ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_imgR_in_rows_c61_channel = ((ap_sync_reg_channel_write_imgR_in_rows_c61_channel ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_img_disp8u_cols = ((ap_sync_reg_channel_write_img_disp8u_cols ^ 1'b1) & Block_for_end7235_proc_U0_ap_done);

assign ap_channel_done_img_disp8u_dilate_cols = ((ap_sync_reg_channel_write_img_disp8u_dilate_cols ^ 1'b1) & Block_for_end7239_proc_U0_ap_done);

assign ap_channel_done_img_disp8u_dilate_rows = ((ap_sync_reg_channel_write_img_disp8u_dilate_rows ^ 1'b1) & Block_for_end7239_proc_U0_ap_done);

assign ap_channel_done_img_disp8u_erode_cols = ((ap_sync_reg_channel_write_img_disp8u_erode_cols ^ 1'b1) & Block_for_end7237_proc_U0_ap_done);

assign ap_channel_done_img_disp8u_erode_rows = ((ap_sync_reg_channel_write_img_disp8u_erode_rows ^ 1'b1) & Block_for_end7237_proc_U0_ap_done);

assign ap_channel_done_img_disp8u_rows = ((ap_sync_reg_channel_write_img_disp8u_rows ^ 1'b1) & Block_for_end7235_proc_U0_ap_done);

assign ap_channel_done_irA_l_fix = ((ap_sync_reg_channel_write_irA_l_fix ^ 1'b1) & Loop_VITIS_LOOP_46_1_proc_U0_ap_done);

assign ap_channel_done_irA_r_fix = ((ap_sync_reg_channel_write_irA_r_fix ^ 1'b1) & Loop_VITIS_LOOP_46_1_proc_U0_ap_done);

assign ap_channel_done_leftRemappedMat_cols = ((ap_sync_reg_channel_write_leftRemappedMat_cols ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_leftRemappedMat_rows = ((ap_sync_reg_channel_write_leftRemappedMat_rows ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_mapxLMat_cols = ((ap_sync_reg_channel_write_mapxLMat_cols ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_mapxLMat_rows = ((ap_sync_reg_channel_write_mapxLMat_rows ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_mapxRMat_cols = ((ap_sync_reg_channel_write_mapxRMat_cols ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_mapxRMat_rows = ((ap_sync_reg_channel_write_mapxRMat_rows ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_rightRemappedMat_cols = ((ap_sync_reg_channel_write_rightRemappedMat_cols ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_channel_done_rightRemappedMat_rows = ((ap_sync_reg_channel_write_rightRemappedMat_rows ^ 1'b1) & Block_for_end72_proc_U0_ap_done);

assign ap_done = xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_done;

assign ap_idle = (xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_idle & remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_idle & remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_idle & (bmState_textureThreshold_empty_n ^ 1'b1) & (bmState_uniquenessRatio_empty_n ^ 1'b1) & (bmState_preFilterCap_empty_n ^ 1'b1) & (imgR_in_cols_c62_channel_empty_n ^ 1'b1) & (imgR_in_rows_c61_channel_empty_n ^ 1'b1) & (imgL_in_cols_c60_channel_empty_n ^ 1'b1) & (imgL_in_rows_c59_channel_empty_n ^ 1'b1) & (mapxRMat_cols_empty_n ^ 1'b1) & (mapxRMat_rows_empty_n ^ 1'b1) & (mapxLMat_cols_empty_n ^ 1'b1) & (mapxLMat_rows_empty_n ^ 1'b1) & (distC_l_fix_t_empty_n ^ 1'b1) & (distC_r_fix_t_empty_n ^ 1'b1) & (cameraMA_l_fix_t_empty_n ^ 1'b1) & (cameraMA_r_fix_t_empty_n ^ 1'b1) & (irA_l_fix_t_empty_n ^ 1'b1) & (irA_r_fix_t_empty_n ^ 1'b1) & (img_disp8u_dilate_cols_empty_n ^ 1'b1) & (img_disp8u_dilate_rows_empty_n ^ 1'b1) & (img_disp8u_erode_cols_empty_n ^ 1'b1) & (img_disp8u_erode_rows_empty_n ^ 1'b1) & (img_disp8u_cols_empty_n ^ 1'b1) & (img_disp8u_rows_empty_n ^ 1'b1) 
    & (rightRemappedMat_cols_empty_n ^ 1'b1) & (rightRemappedMat_rows_empty_n ^ 1'b1) & (leftRemappedMat_cols_empty_n ^ 1'b1) & (leftRemappedMat_rows_empty_n ^ 1'b1) & erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle & dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_idle & StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_U0_ap_idle & Loop_VITIS_LOOP_55_2_proc_U0_ap_idle & Loop_VITIS_LOOP_46_1_proc_U0_ap_idle & InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_U0_ap_idle & InitUndistortRectifyMapInverse_9_5_7_600_800_1_2_2_7_U0_ap_idle & ConvertShiftAbs_U0_ap_idle & Block_for_end72_proc_U0_ap_idle & Block_for_end7239_proc_U0_ap_idle & Block_for_end7237_proc_U0_ap_idle & Block_for_end7235_proc_U0_ap_idle & AXIvideo2xfMat_8_0_600_800_1_2_U0_ap_idle & AXIvideo2xfMat_8_0_600_800_1_2_1_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_Block_for_end7235_proc_U0_ap_ready = (ap_sync_reg_Block_for_end7235_proc_U0_ap_ready | Block_for_end7235_proc_U0_ap_ready);

assign ap_sync_Block_for_end7237_proc_U0_ap_ready = (ap_sync_reg_Block_for_end7237_proc_U0_ap_ready | Block_for_end7237_proc_U0_ap_ready);

assign ap_sync_Block_for_end7239_proc_U0_ap_ready = (ap_sync_reg_Block_for_end7239_proc_U0_ap_ready | Block_for_end7239_proc_U0_ap_ready);

assign ap_sync_Block_for_end72_proc_U0_ap_ready = (ap_sync_reg_Block_for_end72_proc_U0_ap_ready | Block_for_end72_proc_U0_ap_ready);

assign ap_sync_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready = (ap_sync_reg_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready | Loop_VITIS_LOOP_46_1_proc_U0_ap_ready);

assign ap_sync_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready = (ap_sync_reg_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready | Loop_VITIS_LOOP_55_2_proc_U0_ap_ready);

assign ap_sync_channel_write_bmState_preFilterCap = ((bmState_preFilterCap_full_n & ap_channel_done_bmState_preFilterCap) | ap_sync_reg_channel_write_bmState_preFilterCap);

assign ap_sync_channel_write_bmState_textureThreshold = ((bmState_textureThreshold_full_n & ap_channel_done_bmState_textureThreshold) | ap_sync_reg_channel_write_bmState_textureThreshold);

assign ap_sync_channel_write_bmState_uniquenessRatio = ((bmState_uniquenessRatio_full_n & ap_channel_done_bmState_uniquenessRatio) | ap_sync_reg_channel_write_bmState_uniquenessRatio);

assign ap_sync_channel_write_cameraMA_l_fix = ((ap_channel_done_cameraMA_l_fix & Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_l_fix_full_n) | ap_sync_reg_channel_write_cameraMA_l_fix);

assign ap_sync_channel_write_cameraMA_r_fix = ((ap_channel_done_cameraMA_r_fix & Loop_VITIS_LOOP_46_1_proc_U0_cameraMA_r_fix_full_n) | ap_sync_reg_channel_write_cameraMA_r_fix);

assign ap_sync_channel_write_distC_l_fix = ((ap_channel_done_distC_l_fix & Loop_VITIS_LOOP_55_2_proc_U0_distC_l_fix_full_n) | ap_sync_reg_channel_write_distC_l_fix);

assign ap_sync_channel_write_distC_r_fix = ((ap_channel_done_distC_r_fix & Loop_VITIS_LOOP_55_2_proc_U0_distC_r_fix_full_n) | ap_sync_reg_channel_write_distC_r_fix);

assign ap_sync_channel_write_imgL_in_cols_c60_channel = ((imgL_in_cols_c60_channel_full_n & ap_channel_done_imgL_in_cols_c60_channel) | ap_sync_reg_channel_write_imgL_in_cols_c60_channel);

assign ap_sync_channel_write_imgL_in_rows_c59_channel = ((imgL_in_rows_c59_channel_full_n & ap_channel_done_imgL_in_rows_c59_channel) | ap_sync_reg_channel_write_imgL_in_rows_c59_channel);

assign ap_sync_channel_write_imgR_in_cols_c62_channel = ((imgR_in_cols_c62_channel_full_n & ap_channel_done_imgR_in_cols_c62_channel) | ap_sync_reg_channel_write_imgR_in_cols_c62_channel);

assign ap_sync_channel_write_imgR_in_rows_c61_channel = ((imgR_in_rows_c61_channel_full_n & ap_channel_done_imgR_in_rows_c61_channel) | ap_sync_reg_channel_write_imgR_in_rows_c61_channel);

assign ap_sync_channel_write_img_disp8u_cols = ((img_disp8u_cols_full_n & ap_channel_done_img_disp8u_cols) | ap_sync_reg_channel_write_img_disp8u_cols);

assign ap_sync_channel_write_img_disp8u_dilate_cols = ((img_disp8u_dilate_cols_full_n & ap_channel_done_img_disp8u_dilate_cols) | ap_sync_reg_channel_write_img_disp8u_dilate_cols);

assign ap_sync_channel_write_img_disp8u_dilate_rows = ((img_disp8u_dilate_rows_full_n & ap_channel_done_img_disp8u_dilate_rows) | ap_sync_reg_channel_write_img_disp8u_dilate_rows);

assign ap_sync_channel_write_img_disp8u_erode_cols = ((img_disp8u_erode_cols_full_n & ap_channel_done_img_disp8u_erode_cols) | ap_sync_reg_channel_write_img_disp8u_erode_cols);

assign ap_sync_channel_write_img_disp8u_erode_rows = ((img_disp8u_erode_rows_full_n & ap_channel_done_img_disp8u_erode_rows) | ap_sync_reg_channel_write_img_disp8u_erode_rows);

assign ap_sync_channel_write_img_disp8u_rows = ((img_disp8u_rows_full_n & ap_channel_done_img_disp8u_rows) | ap_sync_reg_channel_write_img_disp8u_rows);

assign ap_sync_channel_write_irA_l_fix = ((ap_channel_done_irA_l_fix & Loop_VITIS_LOOP_46_1_proc_U0_irA_l_fix_full_n) | ap_sync_reg_channel_write_irA_l_fix);

assign ap_sync_channel_write_irA_r_fix = ((ap_channel_done_irA_r_fix & Loop_VITIS_LOOP_46_1_proc_U0_irA_r_fix_full_n) | ap_sync_reg_channel_write_irA_r_fix);

assign ap_sync_channel_write_leftRemappedMat_cols = ((leftRemappedMat_cols_full_n & ap_channel_done_leftRemappedMat_cols) | ap_sync_reg_channel_write_leftRemappedMat_cols);

assign ap_sync_channel_write_leftRemappedMat_rows = ((leftRemappedMat_rows_full_n & ap_channel_done_leftRemappedMat_rows) | ap_sync_reg_channel_write_leftRemappedMat_rows);

assign ap_sync_channel_write_mapxLMat_cols = ((mapxLMat_cols_full_n & ap_channel_done_mapxLMat_cols) | ap_sync_reg_channel_write_mapxLMat_cols);

assign ap_sync_channel_write_mapxLMat_rows = ((mapxLMat_rows_full_n & ap_channel_done_mapxLMat_rows) | ap_sync_reg_channel_write_mapxLMat_rows);

assign ap_sync_channel_write_mapxRMat_cols = ((mapxRMat_cols_full_n & ap_channel_done_mapxRMat_cols) | ap_sync_reg_channel_write_mapxRMat_cols);

assign ap_sync_channel_write_mapxRMat_rows = ((mapxRMat_rows_full_n & ap_channel_done_mapxRMat_rows) | ap_sync_reg_channel_write_mapxRMat_rows);

assign ap_sync_channel_write_rightRemappedMat_cols = ((rightRemappedMat_cols_full_n & ap_channel_done_rightRemappedMat_cols) | ap_sync_reg_channel_write_rightRemappedMat_cols);

assign ap_sync_channel_write_rightRemappedMat_rows = ((rightRemappedMat_rows_full_n & ap_channel_done_rightRemappedMat_rows) | ap_sync_reg_channel_write_rightRemappedMat_rows);

assign ap_sync_ready = (ap_sync_Loop_VITIS_LOOP_55_2_proc_U0_ap_ready & ap_sync_Loop_VITIS_LOOP_46_1_proc_U0_ap_ready & ap_sync_Block_for_end72_proc_U0_ap_ready & ap_sync_Block_for_end7239_proc_U0_ap_ready & ap_sync_Block_for_end7237_proc_U0_ap_ready & ap_sync_Block_for_end7235_proc_U0_ap_ready);

assign dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue = 1'b1;

assign dilate_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start = (img_disp8u_erode_rows_empty_n & img_disp8u_erode_cols_empty_n);

assign erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_continue = 1'b1;

assign erode_0_0_600_800_0_3_3_1_1_2_2_U0_ap_start = (img_disp8u_rows_empty_n & img_disp8u_cols_empty_n);

assign remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_continue = 1'b1;

assign remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_ap_start = start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_empty_n;

assign remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_continue = 1'b1;

assign remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_ap_start = start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_empty_n;

assign start_for_ConvertShiftAbs_U0_din = 1'b1;

assign start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_2_U0_din = 1'b1;

assign start_for_remap_128_1_0_7_0_600_800_1_false_2_2_2_2_U0_din = 1'b1;

assign vid_inL_TREADY = AXIvideo2xfMat_8_0_600_800_1_2_1_U0_vid_inL_TREADY;

assign vid_inR_TREADY = AXIvideo2xfMat_8_0_600_800_1_2_U0_vid_inR_TREADY;

assign vid_out_TDATA = xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDATA;

assign vid_out_TDEST = xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TDEST;

assign vid_out_TID = xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TID;

assign vid_out_TKEEP = xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TKEEP;

assign vid_out_TLAST = xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TLAST;

assign vid_out_TSTRB = xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TSTRB;

assign vid_out_TUSER = xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TUSER;

assign vid_out_TVALID = xfMat2AXIvideo_8_0_600_800_1_2_U0_vid_out_TVALID;

assign xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_continue = 1'b1;

assign xfMat2AXIvideo_8_0_600_800_1_2_U0_ap_start = (img_disp8u_dilate_rows_empty_n & img_disp8u_dilate_cols_empty_n);


reg find_df_deadlock = 0;
// synthesis translate_off
`include "stereolbm_axis_cambm_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "stereolbm_axis_cambm_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //stereolbm_axis_cambm

