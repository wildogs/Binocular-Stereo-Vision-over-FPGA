// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module stereolbm_axis_cambm_entry_proc (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_read,
        sbmstate_preFilterCap_c18_din,
        sbmstate_preFilterCap_c18_num_data_valid,
        sbmstate_preFilterCap_c18_fifo_cap,
        sbmstate_preFilterCap_c18_full_n,
        sbmstate_preFilterCap_c18_write,
        sbmstate_preFilterCap_c19_din,
        sbmstate_preFilterCap_c19_num_data_valid,
        sbmstate_preFilterCap_c19_fifo_cap,
        sbmstate_preFilterCap_c19_full_n,
        sbmstate_preFilterCap_c19_write,
        p_read1,
        sbmstate_textureThreshold_c_din,
        sbmstate_textureThreshold_c_num_data_valid,
        sbmstate_textureThreshold_c_fifo_cap,
        sbmstate_textureThreshold_c_full_n,
        sbmstate_textureThreshold_c_write,
        p_read2,
        sbmstate_uniquenessRatio_c_din,
        sbmstate_uniquenessRatio_c_num_data_valid,
        sbmstate_uniquenessRatio_c_fifo_cap,
        sbmstate_uniquenessRatio_c_full_n,
        sbmstate_uniquenessRatio_c_write,
        height,
        height_c21_din,
        height_c21_num_data_valid,
        height_c21_fifo_cap,
        height_c21_full_n,
        height_c21_write,
        height_c22_din,
        height_c22_num_data_valid,
        height_c22_fifo_cap,
        height_c22_full_n,
        height_c22_write,
        height_c23_din,
        height_c23_num_data_valid,
        height_c23_fifo_cap,
        height_c23_full_n,
        height_c23_write,
        height_c24_din,
        height_c24_num_data_valid,
        height_c24_fifo_cap,
        height_c24_full_n,
        height_c24_write,
        width,
        width_c26_din,
        width_c26_num_data_valid,
        width_c26_fifo_cap,
        width_c26_full_n,
        width_c26_write,
        width_c27_din,
        width_c27_num_data_valid,
        width_c27_fifo_cap,
        width_c27_full_n,
        width_c27_write,
        width_c28_din,
        width_c28_num_data_valid,
        width_c28_fifo_cap,
        width_c28_full_n,
        width_c28_write,
        width_c29_din,
        width_c29_num_data_valid,
        width_c29_fifo_cap,
        width_c29_full_n,
        width_c29_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] p_read;
output  [31:0] sbmstate_preFilterCap_c18_din;
input  [2:0] sbmstate_preFilterCap_c18_num_data_valid;
input  [2:0] sbmstate_preFilterCap_c18_fifo_cap;
input   sbmstate_preFilterCap_c18_full_n;
output   sbmstate_preFilterCap_c18_write;
output  [31:0] sbmstate_preFilterCap_c19_din;
input  [2:0] sbmstate_preFilterCap_c19_num_data_valid;
input  [2:0] sbmstate_preFilterCap_c19_fifo_cap;
input   sbmstate_preFilterCap_c19_full_n;
output   sbmstate_preFilterCap_c19_write;
input  [31:0] p_read1;
output  [31:0] sbmstate_textureThreshold_c_din;
input  [2:0] sbmstate_textureThreshold_c_num_data_valid;
input  [2:0] sbmstate_textureThreshold_c_fifo_cap;
input   sbmstate_textureThreshold_c_full_n;
output   sbmstate_textureThreshold_c_write;
input  [31:0] p_read2;
output  [31:0] sbmstate_uniquenessRatio_c_din;
input  [2:0] sbmstate_uniquenessRatio_c_num_data_valid;
input  [2:0] sbmstate_uniquenessRatio_c_fifo_cap;
input   sbmstate_uniquenessRatio_c_full_n;
output   sbmstate_uniquenessRatio_c_write;
input  [15:0] height;
output  [15:0] height_c21_din;
input  [2:0] height_c21_num_data_valid;
input  [2:0] height_c21_fifo_cap;
input   height_c21_full_n;
output   height_c21_write;
output  [15:0] height_c22_din;
input  [2:0] height_c22_num_data_valid;
input  [2:0] height_c22_fifo_cap;
input   height_c22_full_n;
output   height_c22_write;
output  [15:0] height_c23_din;
input  [2:0] height_c23_num_data_valid;
input  [2:0] height_c23_fifo_cap;
input   height_c23_full_n;
output   height_c23_write;
output  [15:0] height_c24_din;
input  [2:0] height_c24_num_data_valid;
input  [2:0] height_c24_fifo_cap;
input   height_c24_full_n;
output   height_c24_write;
input  [15:0] width;
output  [15:0] width_c26_din;
input  [2:0] width_c26_num_data_valid;
input  [2:0] width_c26_fifo_cap;
input   width_c26_full_n;
output   width_c26_write;
output  [15:0] width_c27_din;
input  [2:0] width_c27_num_data_valid;
input  [2:0] width_c27_fifo_cap;
input   width_c27_full_n;
output   width_c27_write;
output  [15:0] width_c28_din;
input  [2:0] width_c28_num_data_valid;
input  [2:0] width_c28_fifo_cap;
input   width_c28_full_n;
output   width_c28_write;
output  [15:0] width_c29_din;
input  [2:0] width_c29_num_data_valid;
input  [2:0] width_c29_fifo_cap;
input   width_c29_full_n;
output   width_c29_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg sbmstate_preFilterCap_c18_write;
reg sbmstate_preFilterCap_c19_write;
reg sbmstate_textureThreshold_c_write;
reg sbmstate_uniquenessRatio_c_write;
reg height_c21_write;
reg height_c22_write;
reg height_c23_write;
reg height_c24_write;
reg width_c26_write;
reg width_c27_write;
reg width_c28_write;
reg width_c29_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    sbmstate_preFilterCap_c18_blk_n;
reg    sbmstate_preFilterCap_c19_blk_n;
reg    sbmstate_textureThreshold_c_blk_n;
reg    sbmstate_uniquenessRatio_c_blk_n;
reg    height_c21_blk_n;
reg    height_c22_blk_n;
reg    height_c23_blk_n;
reg    height_c24_blk_n;
reg    width_c26_blk_n;
reg    width_c27_blk_n;
reg    width_c28_blk_n;
reg    width_c29_blk_n;
reg    ap_block_state1;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_c21_blk_n = height_c21_full_n;
    end else begin
        height_c21_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_c21_write = 1'b1;
    end else begin
        height_c21_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_c22_blk_n = height_c22_full_n;
    end else begin
        height_c22_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_c22_write = 1'b1;
    end else begin
        height_c22_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_c23_blk_n = height_c23_full_n;
    end else begin
        height_c23_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_c23_write = 1'b1;
    end else begin
        height_c23_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_c24_blk_n = height_c24_full_n;
    end else begin
        height_c24_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_c24_write = 1'b1;
    end else begin
        height_c24_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_preFilterCap_c18_blk_n = sbmstate_preFilterCap_c18_full_n;
    end else begin
        sbmstate_preFilterCap_c18_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_preFilterCap_c18_write = 1'b1;
    end else begin
        sbmstate_preFilterCap_c18_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_preFilterCap_c19_blk_n = sbmstate_preFilterCap_c19_full_n;
    end else begin
        sbmstate_preFilterCap_c19_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_preFilterCap_c19_write = 1'b1;
    end else begin
        sbmstate_preFilterCap_c19_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_textureThreshold_c_blk_n = sbmstate_textureThreshold_c_full_n;
    end else begin
        sbmstate_textureThreshold_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_textureThreshold_c_write = 1'b1;
    end else begin
        sbmstate_textureThreshold_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_uniquenessRatio_c_blk_n = sbmstate_uniquenessRatio_c_full_n;
    end else begin
        sbmstate_uniquenessRatio_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        sbmstate_uniquenessRatio_c_write = 1'b1;
    end else begin
        sbmstate_uniquenessRatio_c_write = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_c26_blk_n = width_c26_full_n;
    end else begin
        width_c26_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_c26_write = 1'b1;
    end else begin
        width_c26_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_c27_blk_n = width_c27_full_n;
    end else begin
        width_c27_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_c27_write = 1'b1;
    end else begin
        width_c27_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_c28_blk_n = width_c28_full_n;
    end else begin
        width_c28_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_c28_write = 1'b1;
    end else begin
        width_c28_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_c29_blk_n = width_c29_full_n;
    end else begin
        width_c29_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_c29_write = 1'b1;
    end else begin
        width_c29_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((width_c26_full_n == 1'b0) | (height_c24_full_n == 1'b0) | (height_c23_full_n == 1'b0) | (real_start == 1'b0) | (height_c22_full_n == 1'b0) | (height_c21_full_n == 1'b0) | (sbmstate_uniquenessRatio_c_full_n == 1'b0) | (sbmstate_textureThreshold_c_full_n == 1'b0) | (sbmstate_preFilterCap_c19_full_n == 1'b0) | (sbmstate_preFilterCap_c18_full_n == 1'b0) | (ap_done_reg == 1'b1) | (width_c29_full_n == 1'b0) | (width_c28_full_n == 1'b0) | (width_c27_full_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign height_c21_din = height;

assign height_c22_din = height;

assign height_c23_din = height;

assign height_c24_din = height;

assign sbmstate_preFilterCap_c18_din = p_read;

assign sbmstate_preFilterCap_c19_din = p_read;

assign sbmstate_textureThreshold_c_din = p_read1;

assign sbmstate_uniquenessRatio_c_din = p_read2;

assign start_out = real_start;

assign width_c26_din = width;

assign width_c27_din = width;

assign width_c28_din = width;

assign width_c29_din = width;

endmodule //stereolbm_axis_cambm_entry_proc
