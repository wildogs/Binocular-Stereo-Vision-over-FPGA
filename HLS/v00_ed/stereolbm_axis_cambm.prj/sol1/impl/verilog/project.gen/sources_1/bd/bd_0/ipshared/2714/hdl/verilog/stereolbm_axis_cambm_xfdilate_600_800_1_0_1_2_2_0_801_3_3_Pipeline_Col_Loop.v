// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module stereolbm_axis_cambm_xfdilate_600_800_1_0_1_2_2_0_801_3_3_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_disp8u_erode_data_dout,
        img_disp8u_erode_data_num_data_valid,
        img_disp8u_erode_data_fifo_cap,
        img_disp8u_erode_data_empty_n,
        img_disp8u_erode_data_read,
        img_disp8u_dilate_data_din,
        img_disp8u_dilate_data_num_data_valid,
        img_disp8u_dilate_data_fifo_cap,
        img_disp8u_dilate_data_full_n,
        img_disp8u_dilate_data_write,
        img_width,
        buf_2_address0,
        buf_2_ce0,
        buf_2_q0,
        buf_2_address1,
        buf_2_ce1,
        buf_2_we1,
        buf_2_d1,
        buf_1_address0,
        buf_1_ce0,
        buf_1_q0,
        buf_1_address1,
        buf_1_ce1,
        buf_1_we1,
        buf_1_d1,
        buf_r_address0,
        buf_r_ce0,
        buf_r_q0,
        buf_r_address1,
        buf_r_ce1,
        buf_r_we1,
        buf_r_d1,
        trunc_ln261_2,
        trunc_ln261_1,
        trunc_ln,
        cmp_i_i131_i
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] img_disp8u_erode_data_dout;
input  [1:0] img_disp8u_erode_data_num_data_valid;
input  [1:0] img_disp8u_erode_data_fifo_cap;
input   img_disp8u_erode_data_empty_n;
output   img_disp8u_erode_data_read;
output  [7:0] img_disp8u_dilate_data_din;
input  [1:0] img_disp8u_dilate_data_num_data_valid;
input  [1:0] img_disp8u_dilate_data_fifo_cap;
input   img_disp8u_dilate_data_full_n;
output   img_disp8u_dilate_data_write;
input  [15:0] img_width;
output  [9:0] buf_2_address0;
output   buf_2_ce0;
input  [7:0] buf_2_q0;
output  [9:0] buf_2_address1;
output   buf_2_ce1;
output   buf_2_we1;
output  [7:0] buf_2_d1;
output  [9:0] buf_1_address0;
output   buf_1_ce0;
input  [7:0] buf_1_q0;
output  [9:0] buf_1_address1;
output   buf_1_ce1;
output   buf_1_we1;
output  [7:0] buf_1_d1;
output  [9:0] buf_r_address0;
output   buf_r_ce0;
input  [7:0] buf_r_q0;
output  [9:0] buf_r_address1;
output   buf_r_ce1;
output   buf_r_we1;
output  [7:0] buf_r_d1;
input  [1:0] trunc_ln261_2;
input  [1:0] trunc_ln261_1;
input  [1:0] trunc_ln;
input  [0:0] cmp_i_i131_i;

reg ap_idle;
reg img_disp8u_erode_data_read;
reg img_disp8u_dilate_data_write;
reg buf_2_ce0;
reg[9:0] buf_2_address1;
reg buf_2_ce1;
reg buf_2_we1;
reg[7:0] buf_2_d1;
reg buf_1_ce0;
reg[9:0] buf_1_address1;
reg buf_1_ce1;
reg buf_1_we1;
reg[7:0] buf_1_d1;
reg buf_r_ce0;
reg[9:0] buf_r_address1;
reg buf_r_ce1;
reg buf_r_we1;
reg[7:0] buf_r_d1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln122_reg_641;
reg   [0:0] icmp_ln131_reg_645;
wire   [0:0] cmp_i_i131_i_read_reg_616;
reg    ap_predicate_op62_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
reg   [0:0] icmp_ln212_reg_656;
reg   [0:0] icmp_ln212_reg_656_pp0_iter7_reg;
reg    ap_block_state9_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln122_fu_349_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    img_disp8u_erode_data_blk_n;
wire    ap_block_pp0_stage0;
reg    img_disp8u_dilate_data_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [1:0] trunc_ln_read_reg_620;
reg   [12:0] col_3_reg_635;
reg   [0:0] icmp_ln122_reg_641_pp0_iter1_reg;
reg   [0:0] icmp_ln122_reg_641_pp0_iter2_reg;
reg   [0:0] icmp_ln122_reg_641_pp0_iter3_reg;
reg   [0:0] icmp_ln122_reg_641_pp0_iter4_reg;
reg   [0:0] icmp_ln122_reg_641_pp0_iter5_reg;
wire   [0:0] icmp_ln131_fu_361_p2;
reg   [0:0] icmp_ln131_reg_645_pp0_iter1_reg;
reg   [0:0] icmp_ln131_reg_645_pp0_iter2_reg;
wire   [63:0] conv_i97_i_fu_372_p1;
reg   [63:0] conv_i97_i_reg_649;
wire   [0:0] icmp_ln212_fu_381_p2;
reg   [0:0] icmp_ln212_reg_656_pp0_iter2_reg;
reg   [0:0] icmp_ln212_reg_656_pp0_iter3_reg;
reg   [0:0] icmp_ln212_reg_656_pp0_iter4_reg;
reg   [0:0] icmp_ln212_reg_656_pp0_iter5_reg;
reg   [0:0] icmp_ln212_reg_656_pp0_iter6_reg;
wire   [7:0] buf_cop_fu_386_p5;
wire   [7:0] buf_cop_6_fu_397_p5;
wire   [7:0] buf_cop_7_fu_408_p5;
wire   [7:0] max_29_fu_445_p3;
reg   [7:0] max_29_reg_690;
wire   [7:0] src_buf_temp_copy_extract_0_7_xfExtractPixels_1_1_0_s_fu_295_ap_return;
reg   [7:0] src_buf_temp_copy_extract_0_7_reg_696;
wire   [7:0] max_31_fu_487_p3;
reg   [7:0] max_31_reg_702;
reg   [7:0] src_buf_temp_med_apply_18_reg_708;
wire   [7:0] src_buf_temp_copy_extract_0_8_xfExtractPixels_1_1_0_s_fu_301_ap_return;
reg   [7:0] src_buf_temp_copy_extract_0_8_reg_714;
wire   [7:0] max_34_fu_527_p3;
reg   [7:0] max_34_reg_720;
wire   [7:0] max_38_fu_560_p3;
reg   [7:0] max_38_reg_726;
reg    ap_condition_exit_pp0_iter6_stage0;
wire    src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_ready;
wire   [7:0] src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_return;
wire    src_buf_temp_copy_extract_0_7_xfExtractPixels_1_1_0_s_fu_295_ap_ready;
wire    src_buf_temp_copy_extract_0_8_xfExtractPixels_1_1_0_s_fu_301_ap_ready;
wire   [7:0] ap_phi_reg_pp0_iter0_buf_cop_8_reg_256;
reg   [7:0] ap_phi_reg_pp0_iter1_buf_cop_8_reg_256;
reg   [7:0] ap_phi_reg_pp0_iter2_buf_cop_8_reg_256;
reg   [7:0] ap_phi_reg_pp0_iter3_buf_cop_8_reg_256;
reg   [7:0] ap_phi_reg_pp0_iter4_buf_cop_8_reg_256;
wire   [7:0] ap_phi_reg_pp0_iter0_buf_cop_9_reg_267;
reg   [7:0] ap_phi_reg_pp0_iter1_buf_cop_9_reg_267;
reg   [7:0] ap_phi_reg_pp0_iter2_buf_cop_9_reg_267;
reg   [7:0] ap_phi_reg_pp0_iter3_buf_cop_9_reg_267;
reg   [7:0] ap_phi_reg_pp0_iter4_buf_cop_9_reg_267;
reg   [7:0] ap_phi_reg_pp0_iter5_buf_cop_9_reg_267;
wire   [7:0] ap_phi_reg_pp0_iter0_buf_cop_10_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter1_buf_cop_10_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter2_buf_cop_10_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter3_buf_cop_10_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter4_buf_cop_10_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter5_buf_cop_10_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter6_buf_cop_10_reg_278;
wire   [9:0] buf_addr_gep_fu_205_p3;
wire   [9:0] buf_1_addr_gep_fu_212_p3;
wire   [9:0] buf_2_addr_gep_fu_219_p3;
reg   [12:0] col_fu_80;
wire   [12:0] col_4_fu_355_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_col_3;
reg   [7:0] max_fu_84;
reg   [7:0] max_23_fu_88;
reg   [7:0] src_buf_temp_med_apply_fu_92;
reg   [7:0] max_25_fu_96;
reg   [7:0] src_buf_temp_med_apply_10_fu_100;
reg   [7:0] max_26_fu_104;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln122_fu_345_p1;
wire   [0:0] icmp_ln56_fu_425_p2;
wire   [7:0] max_28_fu_431_p3;
wire   [0:0] icmp_ln56_8_fu_439_p2;
wire   [0:0] icmp_ln56_9_fu_469_p2;
wire   [7:0] max_30_fu_474_p3;
wire   [0:0] icmp_ln56_10_fu_481_p2;
wire   [0:0] icmp_ln56_11_fu_511_p2;
wire   [7:0] max_33_fu_515_p3;
wire   [0:0] icmp_ln56_12_fu_521_p2;
wire   [0:0] icmp_ln56_13_fu_545_p2;
wire   [7:0] max_36_fu_549_p3;
wire   [0:0] icmp_ln56_14_fu_555_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_307;
reg    ap_condition_594;
reg    ap_condition_598;
reg    ap_condition_601;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_done_reg = 1'b0;
end

stereolbm_axis_cambm_xfExtractPixels_1_1_0_s src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289(
    .ap_ready(src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_ready),
    .val1_val(ap_phi_reg_pp0_iter4_buf_cop_8_reg_256),
    .ap_return(src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_return)
);

stereolbm_axis_cambm_xfExtractPixels_1_1_0_s src_buf_temp_copy_extract_0_7_xfExtractPixels_1_1_0_s_fu_295(
    .ap_ready(src_buf_temp_copy_extract_0_7_xfExtractPixels_1_1_0_s_fu_295_ap_ready),
    .val1_val(ap_phi_reg_pp0_iter5_buf_cop_9_reg_267),
    .ap_return(src_buf_temp_copy_extract_0_7_xfExtractPixels_1_1_0_s_fu_295_ap_return)
);

stereolbm_axis_cambm_xfExtractPixels_1_1_0_s src_buf_temp_copy_extract_0_8_xfExtractPixels_1_1_0_s_fu_301(
    .ap_ready(src_buf_temp_copy_extract_0_8_xfExtractPixels_1_1_0_s_fu_301_ap_ready),
    .val1_val(ap_phi_reg_pp0_iter6_buf_cop_10_reg_278),
    .ap_return(src_buf_temp_copy_extract_0_8_xfExtractPixels_1_1_0_s_fu_301_ap_return)
);

stereolbm_axis_cambm_mux_3_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_3_2_8_1_1_U621(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(trunc_ln261_2),
    .dout(buf_cop_fu_386_p5)
);

stereolbm_axis_cambm_mux_3_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_3_2_8_1_1_U622(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(trunc_ln261_1),
    .dout(buf_cop_6_fu_397_p5)
);

stereolbm_axis_cambm_mux_3_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_3_2_8_1_1_U623(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(trunc_ln),
    .dout(buf_cop_7_fu_408_p5)
);

stereolbm_axis_cambm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter6_stage0)) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_307)) begin
        if (((icmp_ln131_fu_361_p2 == 1'd0) & (icmp_ln122_fu_349_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_cop_10_reg_278 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_cop_10_reg_278 <= ap_phi_reg_pp0_iter0_buf_cop_10_reg_278;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_307)) begin
        if (((icmp_ln131_fu_361_p2 == 1'd0) & (icmp_ln122_fu_349_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_cop_8_reg_256 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_cop_8_reg_256 <= ap_phi_reg_pp0_iter0_buf_cop_8_reg_256;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_307)) begin
        if (((icmp_ln131_fu_361_p2 == 1'd0) & (icmp_ln122_fu_349_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_cop_9_reg_267 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_cop_9_reg_267 <= ap_phi_reg_pp0_iter0_buf_cop_9_reg_267;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln131_reg_645_pp0_iter2_reg == 1'd1) & (icmp_ln122_reg_641_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_buf_cop_10_reg_278 <= buf_cop_7_fu_408_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_buf_cop_10_reg_278 <= ap_phi_reg_pp0_iter3_buf_cop_10_reg_278;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln131_reg_645_pp0_iter2_reg == 1'd1) & (icmp_ln122_reg_641_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_buf_cop_8_reg_256 <= buf_cop_fu_386_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_buf_cop_8_reg_256 <= ap_phi_reg_pp0_iter3_buf_cop_8_reg_256;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln131_reg_645_pp0_iter2_reg == 1'd1) & (icmp_ln122_reg_641_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_buf_cop_9_reg_267 <= buf_cop_6_fu_397_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_buf_cop_9_reg_267 <= ap_phi_reg_pp0_iter3_buf_cop_9_reg_267;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln122_fu_349_p2 == 1'd0))) begin
            col_fu_80 <= col_4_fu_355_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_fu_80 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            max_23_fu_88 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln122_reg_641_pp0_iter4_reg == 1'd0))) begin
            max_23_fu_88 <= src_buf_temp_med_apply_10_fu_100;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            max_25_fu_96 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln122_reg_641_pp0_iter3_reg == 1'd0))) begin
            max_25_fu_96 <= src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            max_26_fu_104 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln122_reg_641_pp0_iter5_reg == 1'd0))) begin
            max_26_fu_104 <= src_buf_temp_copy_extract_0_8_xfExtractPixels_1_1_0_s_fu_301_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            max_fu_84 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln122_reg_641_pp0_iter3_reg == 1'd0))) begin
            max_fu_84 <= max_25_fu_96;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_temp_med_apply_10_fu_100 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln122_reg_641_pp0_iter4_reg == 1'd0))) begin
            src_buf_temp_med_apply_10_fu_100 <= src_buf_temp_copy_extract_0_7_xfExtractPixels_1_1_0_s_fu_295_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_temp_med_apply_fu_92 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln122_reg_641_pp0_iter5_reg == 1'd0))) begin
            src_buf_temp_med_apply_fu_92 <= max_26_fu_104;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_3_reg_635 <= ap_sig_allocacmp_col_3;
        icmp_ln122_reg_641 <= icmp_ln122_fu_349_p2;
        icmp_ln122_reg_641_pp0_iter1_reg <= icmp_ln122_reg_641;
        icmp_ln131_reg_645_pp0_iter1_reg <= icmp_ln131_reg_645;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        icmp_ln122_reg_641_pp0_iter2_reg <= icmp_ln122_reg_641_pp0_iter1_reg;
        icmp_ln122_reg_641_pp0_iter3_reg <= icmp_ln122_reg_641_pp0_iter2_reg;
        icmp_ln122_reg_641_pp0_iter4_reg <= icmp_ln122_reg_641_pp0_iter3_reg;
        icmp_ln122_reg_641_pp0_iter5_reg <= icmp_ln122_reg_641_pp0_iter4_reg;
        icmp_ln131_reg_645_pp0_iter2_reg <= icmp_ln131_reg_645_pp0_iter1_reg;
        icmp_ln212_reg_656_pp0_iter2_reg <= icmp_ln212_reg_656;
        icmp_ln212_reg_656_pp0_iter3_reg <= icmp_ln212_reg_656_pp0_iter2_reg;
        icmp_ln212_reg_656_pp0_iter4_reg <= icmp_ln212_reg_656_pp0_iter3_reg;
        icmp_ln212_reg_656_pp0_iter5_reg <= icmp_ln212_reg_656_pp0_iter4_reg;
        icmp_ln212_reg_656_pp0_iter6_reg <= icmp_ln212_reg_656_pp0_iter5_reg;
        icmp_ln212_reg_656_pp0_iter7_reg <= icmp_ln212_reg_656_pp0_iter6_reg;
        max_38_reg_726 <= max_38_fu_560_p3;
        src_buf_temp_med_apply_18_reg_708 <= max_26_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_buf_cop_10_reg_278 <= ap_phi_reg_pp0_iter1_buf_cop_10_reg_278;
        ap_phi_reg_pp0_iter2_buf_cop_8_reg_256 <= ap_phi_reg_pp0_iter1_buf_cop_8_reg_256;
        ap_phi_reg_pp0_iter2_buf_cop_9_reg_267 <= ap_phi_reg_pp0_iter1_buf_cop_9_reg_267;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_buf_cop_10_reg_278 <= ap_phi_reg_pp0_iter2_buf_cop_10_reg_278;
        ap_phi_reg_pp0_iter3_buf_cop_8_reg_256 <= ap_phi_reg_pp0_iter2_buf_cop_8_reg_256;
        ap_phi_reg_pp0_iter3_buf_cop_9_reg_267 <= ap_phi_reg_pp0_iter2_buf_cop_9_reg_267;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_buf_cop_10_reg_278 <= ap_phi_reg_pp0_iter4_buf_cop_10_reg_278;
        ap_phi_reg_pp0_iter5_buf_cop_9_reg_267 <= ap_phi_reg_pp0_iter4_buf_cop_9_reg_267;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter6_buf_cop_10_reg_278 <= ap_phi_reg_pp0_iter5_buf_cop_10_reg_278;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln122_reg_641 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i97_i_reg_649[12 : 0] <= conv_i97_i_fu_372_p1[12 : 0];
        icmp_ln212_reg_656 <= icmp_ln212_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln122_fu_349_p2 == 1'd0))) begin
        icmp_ln131_reg_645 <= icmp_ln131_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln122_reg_641_pp0_iter3_reg == 1'd0))) begin
        max_29_reg_690 <= max_29_fu_445_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln122_reg_641_pp0_iter4_reg == 1'd0))) begin
        max_31_reg_702 <= max_31_fu_487_p3;
        src_buf_temp_copy_extract_0_7_reg_696 <= src_buf_temp_copy_extract_0_7_xfExtractPixels_1_1_0_s_fu_295_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln122_reg_641_pp0_iter5_reg == 1'd0))) begin
        max_34_reg_720 <= max_34_fu_527_p3;
        src_buf_temp_copy_extract_0_8_reg_714 <= src_buf_temp_copy_extract_0_8_xfExtractPixels_1_1_0_s_fu_301_ap_return;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln122_fu_349_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln122_reg_641_pp0_iter5_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter6_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter6_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_3 = 13'd0;
    end else begin
        ap_sig_allocacmp_col_3 = col_fu_80;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_594)) begin
        if ((cmp_i_i131_i == 1'd1)) begin
            buf_1_address1 = buf_1_addr_gep_fu_212_p3;
        end else if ((cmp_i_i131_i_read_reg_616 == 1'd0)) begin
            buf_1_address1 = conv_i97_i_fu_372_p1;
        end else begin
            buf_1_address1 = 'bx;
        end
    end else begin
        buf_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_1_ce0 = 1'b1;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i == 1'd1) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_620 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i_read_reg_616 == 1'd0) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_620 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_ce1 = 1'b1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_594)) begin
        if ((cmp_i_i131_i == 1'd1)) begin
            buf_1_d1 = img_disp8u_erode_data_dout;
        end else if ((cmp_i_i131_i_read_reg_616 == 1'd0)) begin
            buf_1_d1 = 8'd0;
        end else begin
            buf_1_d1 = 'bx;
        end
    end else begin
        buf_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i == 1'd1) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_620 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i_read_reg_616 == 1'd0) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_620 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_we1 = 1'b1;
    end else begin
        buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_598)) begin
        if ((cmp_i_i131_i == 1'd1)) begin
            buf_2_address1 = buf_2_addr_gep_fu_219_p3;
        end else if ((cmp_i_i131_i_read_reg_616 == 1'd0)) begin
            buf_2_address1 = conv_i97_i_fu_372_p1;
        end else begin
            buf_2_address1 = 'bx;
        end
    end else begin
        buf_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_2_ce0 = 1'b1;
    end else begin
        buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln_read_reg_620 == 2'd0) & ~(trunc_ln_read_reg_620 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i == 1'd1) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(trunc_ln_read_reg_620 == 2'd0) & ~(trunc_ln_read_reg_620 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i_read_reg_616 == 1'd0) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_2_ce1 = 1'b1;
    end else begin
        buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_598)) begin
        if ((cmp_i_i131_i == 1'd1)) begin
            buf_2_d1 = img_disp8u_erode_data_dout;
        end else if ((cmp_i_i131_i_read_reg_616 == 1'd0)) begin
            buf_2_d1 = 8'd0;
        end else begin
            buf_2_d1 = 'bx;
        end
    end else begin
        buf_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln_read_reg_620 == 2'd0) & ~(trunc_ln_read_reg_620 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i == 1'd1) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(trunc_ln_read_reg_620 == 2'd0) & ~(trunc_ln_read_reg_620 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i_read_reg_616 == 1'd0) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_2_we1 = 1'b1;
    end else begin
        buf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_601)) begin
        if ((cmp_i_i131_i == 1'd1)) begin
            buf_r_address1 = buf_addr_gep_fu_205_p3;
        end else if ((cmp_i_i131_i_read_reg_616 == 1'd0)) begin
            buf_r_address1 = conv_i97_i_fu_372_p1;
        end else begin
            buf_r_address1 = 'bx;
        end
    end else begin
        buf_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_r_ce0 = 1'b1;
    end else begin
        buf_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i == 1'd1) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_620 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i_read_reg_616 == 1'd0) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_620 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_r_ce1 = 1'b1;
    end else begin
        buf_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_601)) begin
        if ((cmp_i_i131_i == 1'd1)) begin
            buf_r_d1 = img_disp8u_erode_data_dout;
        end else if ((cmp_i_i131_i_read_reg_616 == 1'd0)) begin
            buf_r_d1 = 8'd0;
        end else begin
            buf_r_d1 = 'bx;
        end
    end else begin
        buf_r_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i == 1'd1) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_620 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i131_i_read_reg_616 == 1'd0) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_620 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_r_we1 = 1'b1;
    end else begin
        buf_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln212_reg_656_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        img_disp8u_dilate_data_blk_n = img_disp8u_dilate_data_full_n;
    end else begin
        img_disp8u_dilate_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln212_reg_656_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        img_disp8u_dilate_data_write = 1'b1;
    end else begin
        img_disp8u_dilate_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op62_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_disp8u_erode_data_blk_n = img_disp8u_erode_data_empty_n;
    end else begin
        img_disp8u_erode_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op62_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_disp8u_erode_data_read = 1'b1;
    end else begin
        img_disp8u_erode_data_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln212_reg_656_pp0_iter7_reg == 1'd0) & (img_disp8u_dilate_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((ap_predicate_op62_read_state2 == 1'b1) & (img_disp8u_erode_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln212_reg_656_pp0_iter7_reg == 1'd0) & (img_disp8u_dilate_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((ap_predicate_op62_read_state2 == 1'b1) & (img_disp8u_erode_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln212_reg_656_pp0_iter7_reg == 1'd0) & (img_disp8u_dilate_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((ap_predicate_op62_read_state2 == 1'b1) & (img_disp8u_erode_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op62_read_state2 == 1'b1) & (img_disp8u_erode_data_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter8 = ((icmp_ln212_reg_656_pp0_iter7_reg == 1'd0) & (img_disp8u_dilate_data_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_307 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_594 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_620 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_598 = (~(trunc_ln_read_reg_620 == 2'd0) & ~(trunc_ln_read_reg_620 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_601 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_620 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_buf_cop_10_reg_278 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_cop_8_reg_256 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_cop_9_reg_267 = 'bx;

always @ (*) begin
    ap_predicate_op62_read_state2 = ((cmp_i_i131_i == 1'd1) & (icmp_ln131_reg_645 == 1'd1) & (icmp_ln122_reg_641 == 1'd0));
end

assign buf_1_addr_gep_fu_212_p3 = conv_i97_i_fu_372_p1;

assign buf_1_address0 = conv_i97_i_reg_649;

assign buf_2_addr_gep_fu_219_p3 = conv_i97_i_fu_372_p1;

assign buf_2_address0 = conv_i97_i_reg_649;

assign buf_addr_gep_fu_205_p3 = conv_i97_i_fu_372_p1;

assign buf_r_address0 = conv_i97_i_reg_649;

assign cmp_i_i131_i_read_reg_616 = cmp_i_i131_i;

assign col_4_fu_355_p2 = (ap_sig_allocacmp_col_3 + 13'd1);

assign conv_i97_i_fu_372_p1 = col_3_reg_635;

assign icmp_ln122_fu_349_p2 = ((zext_ln122_fu_345_p1 > img_width) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_361_p2 = ((zext_ln122_fu_345_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln212_fu_381_p2 = ((col_3_reg_635 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln56_10_fu_481_p2 = ((src_buf_temp_med_apply_10_fu_100 > max_30_fu_474_p3) ? 1'b1 : 1'b0);

assign icmp_ln56_11_fu_511_p2 = ((src_buf_temp_copy_extract_0_7_reg_696 > max_31_reg_702) ? 1'b1 : 1'b0);

assign icmp_ln56_12_fu_521_p2 = ((src_buf_temp_med_apply_fu_92 > max_33_fu_515_p3) ? 1'b1 : 1'b0);

assign icmp_ln56_13_fu_545_p2 = ((src_buf_temp_med_apply_18_reg_708 > max_34_reg_720) ? 1'b1 : 1'b0);

assign icmp_ln56_14_fu_555_p2 = ((src_buf_temp_copy_extract_0_8_reg_714 > max_36_fu_549_p3) ? 1'b1 : 1'b0);

assign icmp_ln56_8_fu_439_p2 = ((src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_return > max_28_fu_431_p3) ? 1'b1 : 1'b0);

assign icmp_ln56_9_fu_469_p2 = ((max_23_fu_88 > max_29_reg_690) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_425_p2 = ((max_25_fu_96 > max_fu_84) ? 1'b1 : 1'b0);

assign img_disp8u_dilate_data_din = max_38_reg_726;

assign max_28_fu_431_p3 = ((icmp_ln56_fu_425_p2[0:0] == 1'b1) ? max_25_fu_96 : max_fu_84);

assign max_29_fu_445_p3 = ((icmp_ln56_8_fu_439_p2[0:0] == 1'b1) ? src_buf_temp_copy_extract_0_xfExtractPixels_1_1_0_s_fu_289_ap_return : max_28_fu_431_p3);

assign max_30_fu_474_p3 = ((icmp_ln56_9_fu_469_p2[0:0] == 1'b1) ? max_23_fu_88 : max_29_reg_690);

assign max_31_fu_487_p3 = ((icmp_ln56_10_fu_481_p2[0:0] == 1'b1) ? src_buf_temp_med_apply_10_fu_100 : max_30_fu_474_p3);

assign max_33_fu_515_p3 = ((icmp_ln56_11_fu_511_p2[0:0] == 1'b1) ? src_buf_temp_copy_extract_0_7_reg_696 : max_31_reg_702);

assign max_34_fu_527_p3 = ((icmp_ln56_12_fu_521_p2[0:0] == 1'b1) ? src_buf_temp_med_apply_fu_92 : max_33_fu_515_p3);

assign max_36_fu_549_p3 = ((icmp_ln56_13_fu_545_p2[0:0] == 1'b1) ? src_buf_temp_med_apply_18_reg_708 : max_34_reg_720);

assign max_38_fu_560_p3 = ((icmp_ln56_14_fu_555_p2[0:0] == 1'b1) ? src_buf_temp_copy_extract_0_8_reg_714 : max_36_fu_549_p3);

assign trunc_ln_read_reg_620 = trunc_ln;

assign zext_ln122_fu_345_p1 = ap_sig_allocacmp_col_3;

always @ (posedge ap_clk) begin
    conv_i97_i_reg_649[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //stereolbm_axis_cambm_xfdilate_600_800_1_0_1_2_2_0_801_3_3_Pipeline_Col_Loop
