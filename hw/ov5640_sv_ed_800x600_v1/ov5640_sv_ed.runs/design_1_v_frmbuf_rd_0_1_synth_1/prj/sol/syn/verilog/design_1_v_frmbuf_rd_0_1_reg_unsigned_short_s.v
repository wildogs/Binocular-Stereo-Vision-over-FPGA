// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module design_1_v_frmbuf_rd_0_1_reg_unsigned_short_s (
        ap_clk,
        ap_rst,
        d,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [12:0] d;
output  [12:0] ap_return;
input   ap_ce;

reg[12:0] ap_return;

reg   [12:0] d_read_reg_22;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg    ap_ce_reg;
reg   [12:0] ap_return_int_reg;

// power-on initialization
initial begin
#0 d_read_reg_22 = 13'd0;
#0 ap_ce_reg = 1'b0;
#0 ap_return_int_reg = 13'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_ce_reg <= 1'b0;
    end else begin
        ap_ce_reg <= ap_ce;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_int_reg <= 13'd0;
    end else begin
        if ((1'b1 == ap_ce_reg)) begin
            ap_return_int_reg <= d_read_reg_22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        d_read_reg_22 <= 13'd0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            d_read_reg_22 <= d;
        end
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = d_read_reg_22;
    end else begin
        ap_return = 'bx;
    end
end

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

endmodule //design_1_v_frmbuf_rd_0_1_reg_unsigned_short_s
