-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_frmbuf_rd_0_1_Bytes2MultiPixStream_Pipeline_VITIS_LOOP_1262_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    img_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_full_n : IN STD_LOGIC;
    img_write : OUT STD_LOGIC;
    trunc_ln1249_1 : IN STD_LOGIC_VECTOR (12 downto 0);
    icmp_ln1252 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp125_6 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp125_5 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp125_4 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp125_3 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp125_2 : IN STD_LOGIC_VECTOR (0 downto 0);
    bytePlanes_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    bytePlanes_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    bytePlanes_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    bytePlanes_empty_n : IN STD_LOGIC;
    bytePlanes_read : OUT STD_LOGIC;
    sub121_cast3 : IN STD_LOGIC_VECTOR (12 downto 0);
    cmp125_1 : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of design_1_v_frmbuf_rd_0_1_Bytes2MultiPixStream_Pipeline_VITIS_LOOP_1262_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv16_8080 : STD_LOGIC_VECTOR (15 downto 0) := "1000000010000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal or_ln1278_6_reg_428 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1262_fu_185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal icmp_ln1262_reg_400 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal or_ln1278_5_reg_424 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_predicate_op80_write_state8 : BOOLEAN;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal bytePlanes_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal img_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal or_ln1278_reg_404 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal or_ln1278_1_reg_408 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal or_ln1278_2_reg_412 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal or_ln1278_3_reg_416 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal or_ln1278_4_reg_420 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal or_ln1278_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1278_1_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1278_2_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1278_3_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1278_4_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1278_5_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1278_6_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_432 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_1_reg_437 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tmp_2_reg_442 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tmp_3_reg_447 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tmp_4_reg_452 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tmp_5_reg_457 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tmp_6_reg_462 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal x_fu_102 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    signal x_2_fu_191_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_s_fu_258_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal p_1_fu_337_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_predicate_op65_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal p_2_fu_345_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_predicate_op68_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal p_3_fu_353_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_predicate_op71_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal p_4_fu_361_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_predicate_op74_write_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal p_5_fu_369_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_predicate_op77_write_state7 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal p_6_fu_377_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal p_0_fu_385_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal x_cast_fu_197_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub121_cast3_cast_fu_173_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal cmp122_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1274_fu_254_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component design_1_v_frmbuf_rd_0_1_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component design_1_v_frmbuf_rd_0_1_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    icmp_ln1262_reg_400_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                icmp_ln1262_reg_400 <= ap_const_lv1_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    icmp_ln1262_reg_400 <= icmp_ln1262_fu_185_p2;
                end if; 
            end if;
        end if;
    end process;


    or_ln1278_1_reg_408_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                or_ln1278_1_reg_408 <= ap_const_lv1_0;
            else
                if (((icmp_ln1262_fu_185_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    or_ln1278_1_reg_408 <= or_ln1278_1_fu_213_p2;
                end if; 
            end if;
        end if;
    end process;


    or_ln1278_2_reg_412_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                or_ln1278_2_reg_412 <= ap_const_lv1_0;
            else
                if (((icmp_ln1262_fu_185_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    or_ln1278_2_reg_412 <= or_ln1278_2_fu_219_p2;
                end if; 
            end if;
        end if;
    end process;


    or_ln1278_3_reg_416_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                or_ln1278_3_reg_416 <= ap_const_lv1_0;
            else
                if (((icmp_ln1262_fu_185_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    or_ln1278_3_reg_416 <= or_ln1278_3_fu_225_p2;
                end if; 
            end if;
        end if;
    end process;


    or_ln1278_4_reg_420_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                or_ln1278_4_reg_420 <= ap_const_lv1_0;
            else
                if (((icmp_ln1262_fu_185_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    or_ln1278_4_reg_420 <= or_ln1278_4_fu_231_p2;
                end if; 
            end if;
        end if;
    end process;


    or_ln1278_5_reg_424_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                or_ln1278_5_reg_424 <= ap_const_lv1_0;
            else
                if (((icmp_ln1262_fu_185_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    or_ln1278_5_reg_424 <= or_ln1278_5_fu_237_p2;
                end if; 
            end if;
        end if;
    end process;


    or_ln1278_6_reg_428_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                or_ln1278_6_reg_428 <= ap_const_lv1_0;
            else
                if (((icmp_ln1262_fu_185_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    or_ln1278_6_reg_428 <= or_ln1278_6_fu_243_p2;
                end if; 
            end if;
        end if;
    end process;


    or_ln1278_reg_404_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                or_ln1278_reg_404 <= ap_const_lv1_0;
            else
                if (((icmp_ln1262_fu_185_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    or_ln1278_reg_404 <= or_ln1278_fu_207_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp_1_reg_437_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_1_reg_437 <= ap_const_lv8_0;
            else
                if (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    tmp_1_reg_437 <= bytePlanes_dout(23 downto 16);
                end if; 
            end if;
        end if;
    end process;


    tmp_2_reg_442_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_2_reg_442 <= ap_const_lv8_0;
            else
                if (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    tmp_2_reg_442 <= bytePlanes_dout(31 downto 24);
                end if; 
            end if;
        end if;
    end process;


    tmp_3_reg_447_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_3_reg_447 <= ap_const_lv8_0;
            else
                if (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    tmp_3_reg_447 <= bytePlanes_dout(39 downto 32);
                end if; 
            end if;
        end if;
    end process;


    tmp_4_reg_452_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_4_reg_452 <= ap_const_lv8_0;
            else
                if (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    tmp_4_reg_452 <= bytePlanes_dout(47 downto 40);
                end if; 
            end if;
        end if;
    end process;


    tmp_5_reg_457_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_5_reg_457 <= ap_const_lv8_0;
            else
                if (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    tmp_5_reg_457 <= bytePlanes_dout(55 downto 48);
                end if; 
            end if;
        end if;
    end process;


    tmp_6_reg_462_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_6_reg_462 <= ap_const_lv8_0;
            else
                if (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    tmp_6_reg_462 <= bytePlanes_dout(63 downto 56);
                end if; 
            end if;
        end if;
    end process;


    tmp_s_reg_432_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_s_reg_432 <= ap_const_lv8_0;
            else
                if (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    tmp_s_reg_432 <= bytePlanes_dout(15 downto 8);
                end if; 
            end if;
        end if;
    end process;


    x_fu_102_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_fu_102 <= ap_const_lv13_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    if (((icmp_ln1262_fu_185_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                        x_fu_102 <= x_2_fu_191_p2;
                    elsif ((ap_loop_init = ap_const_logic_1)) then 
                        x_fu_102 <= ap_const_lv13_0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter0_stage0, ap_block_pp0_stage7_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, img_full_n, or_ln1278_6_reg_428)
    begin
                ap_block_pp0_stage0_01001 <= ((or_ln1278_6_reg_428 = ap_const_lv1_1) and (img_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, img_full_n, or_ln1278_6_reg_428)
    begin
                ap_block_pp0_stage0_11001 <= ((or_ln1278_6_reg_428 = ap_const_lv1_1) and (img_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, img_full_n, or_ln1278_6_reg_428)
    begin
                ap_block_pp0_stage0_subdone <= ((or_ln1278_6_reg_428 = ap_const_lv1_1) and (img_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, icmp_ln1262_reg_400, bytePlanes_empty_n)
    begin
                ap_block_pp0_stage1_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (img_full_n = ap_const_logic_0)) or ((bytePlanes_empty_n = ap_const_logic_0) and (icmp_ln1262_reg_400 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, icmp_ln1262_reg_400, bytePlanes_empty_n)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (img_full_n = ap_const_logic_0)) or ((bytePlanes_empty_n = ap_const_logic_0) and (icmp_ln1262_reg_400 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, icmp_ln1262_reg_400, bytePlanes_empty_n)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (img_full_n = ap_const_logic_0)) or ((bytePlanes_empty_n = ap_const_logic_0) and (icmp_ln1262_reg_400 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op65_write_state3)
    begin
                ap_block_pp0_stage2_01001 <= ((img_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op65_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op65_write_state3)
    begin
                ap_block_pp0_stage2_11001 <= ((img_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op65_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op65_write_state3)
    begin
                ap_block_pp0_stage2_subdone <= ((img_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op65_write_state3 = ap_const_boolean_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op68_write_state4)
    begin
                ap_block_pp0_stage3_01001 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op68_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op68_write_state4)
    begin
                ap_block_pp0_stage3_11001 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op68_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op68_write_state4)
    begin
                ap_block_pp0_stage3_subdone <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op68_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op71_write_state5)
    begin
                ap_block_pp0_stage4_01001 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op71_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op71_write_state5)
    begin
                ap_block_pp0_stage4_11001 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op71_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op71_write_state5)
    begin
                ap_block_pp0_stage4_subdone <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op71_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_01001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op74_write_state6)
    begin
                ap_block_pp0_stage5_01001 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op74_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op74_write_state6)
    begin
                ap_block_pp0_stage5_11001 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op74_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op74_write_state6)
    begin
                ap_block_pp0_stage5_subdone <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op74_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_01001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op77_write_state7)
    begin
                ap_block_pp0_stage6_01001 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op77_write_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op77_write_state7)
    begin
                ap_block_pp0_stage6_11001 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op77_write_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op77_write_state7)
    begin
                ap_block_pp0_stage6_subdone <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op77_write_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_01001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op80_write_state8)
    begin
                ap_block_pp0_stage7_01001 <= ((ap_predicate_op80_write_state8 = ap_const_boolean_1) and (img_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op80_write_state8)
    begin
                ap_block_pp0_stage7_11001 <= ((ap_predicate_op80_write_state8 = ap_const_boolean_1) and (img_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_full_n, ap_predicate_op80_write_state8)
    begin
                ap_block_pp0_stage7_subdone <= ((ap_predicate_op80_write_state8 = ap_const_boolean_1) and (img_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(img_full_n, icmp_ln1262_reg_400, bytePlanes_empty_n)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (img_full_n = ap_const_logic_0)) or ((bytePlanes_empty_n = ap_const_logic_0) and (icmp_ln1262_reg_400 = ap_const_lv1_0)));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(img_full_n, ap_predicate_op65_write_state3)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op65_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(img_full_n, ap_predicate_op68_write_state4)
    begin
                ap_block_state4_pp0_stage3_iter0 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op68_write_state4 = ap_const_boolean_1));
    end process;


    ap_block_state5_pp0_stage4_iter0_assign_proc : process(img_full_n, ap_predicate_op71_write_state5)
    begin
                ap_block_state5_pp0_stage4_iter0 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op71_write_state5 = ap_const_boolean_1));
    end process;


    ap_block_state6_pp0_stage5_iter0_assign_proc : process(img_full_n, ap_predicate_op74_write_state6)
    begin
                ap_block_state6_pp0_stage5_iter0 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op74_write_state6 = ap_const_boolean_1));
    end process;


    ap_block_state7_pp0_stage6_iter0_assign_proc : process(img_full_n, ap_predicate_op77_write_state7)
    begin
                ap_block_state7_pp0_stage6_iter0 <= ((img_full_n = ap_const_logic_0) and (ap_predicate_op77_write_state7 = ap_const_boolean_1));
    end process;


    ap_block_state8_pp0_stage7_iter0_assign_proc : process(img_full_n, ap_predicate_op80_write_state8)
    begin
                ap_block_state8_pp0_stage7_iter0 <= ((ap_predicate_op80_write_state8 = ap_const_boolean_1) and (img_full_n = ap_const_logic_0));
    end process;


    ap_block_state9_pp0_stage0_iter1_assign_proc : process(img_full_n, or_ln1278_6_reg_428)
    begin
                ap_block_state9_pp0_stage0_iter1 <= ((or_ln1278_6_reg_428 = ap_const_lv1_1) and (img_full_n = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln1262_fu_185_p2)
    begin
        if (((icmp_ln1262_fu_185_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op65_write_state3_assign_proc : process(icmp_ln1262_reg_400, or_ln1278_reg_404)
    begin
                ap_predicate_op65_write_state3 <= ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (or_ln1278_reg_404 = ap_const_lv1_1));
    end process;


    ap_predicate_op68_write_state4_assign_proc : process(icmp_ln1262_reg_400, or_ln1278_1_reg_408)
    begin
                ap_predicate_op68_write_state4 <= ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (or_ln1278_1_reg_408 = ap_const_lv1_1));
    end process;


    ap_predicate_op71_write_state5_assign_proc : process(icmp_ln1262_reg_400, or_ln1278_2_reg_412)
    begin
                ap_predicate_op71_write_state5 <= ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (or_ln1278_2_reg_412 = ap_const_lv1_1));
    end process;


    ap_predicate_op74_write_state6_assign_proc : process(icmp_ln1262_reg_400, or_ln1278_3_reg_416)
    begin
                ap_predicate_op74_write_state6 <= ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (or_ln1278_3_reg_416 = ap_const_lv1_1));
    end process;


    ap_predicate_op77_write_state7_assign_proc : process(icmp_ln1262_reg_400, or_ln1278_4_reg_420)
    begin
                ap_predicate_op77_write_state7 <= ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (or_ln1278_4_reg_420 = ap_const_lv1_1));
    end process;


    ap_predicate_op80_write_state8_assign_proc : process(icmp_ln1262_reg_400, or_ln1278_5_reg_424)
    begin
                ap_predicate_op80_write_state8 <= ((or_ln1278_5_reg_424 = ap_const_lv1_1) and (icmp_ln1262_reg_400 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_102, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_1 <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_x_1 <= x_fu_102;
        end if; 
    end process;


    bytePlanes_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln1262_reg_400, bytePlanes_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            bytePlanes_blk_n <= bytePlanes_empty_n;
        else 
            bytePlanes_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bytePlanes_read_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln1262_reg_400, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            bytePlanes_read <= ap_const_logic_1;
        else 
            bytePlanes_read <= ap_const_logic_0;
        end if; 
    end process;

    cmp122_fu_201_p2 <= "1" when (signed(x_cast_fu_197_p1) < signed(sub121_cast3_cast_fu_173_p1)) else "0";
    icmp_ln1262_fu_185_p2 <= "1" when (ap_sig_allocacmp_x_1 = trunc_ln1249_1) else "0";

    img_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, img_full_n, or_ln1278_6_reg_428, ap_CS_fsm_pp0_stage7, icmp_ln1262_reg_400, ap_predicate_op80_write_state8, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, or_ln1278_reg_404, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, or_ln1278_1_reg_408, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, or_ln1278_2_reg_412, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, or_ln1278_3_reg_416, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, or_ln1278_4_reg_420, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((((ap_predicate_op80_write_state8 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (or_ln1278_4_reg_420 = ap_const_lv1_1)) or ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (or_ln1278_3_reg_416 = ap_const_lv1_1)) or ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (or_ln1278_2_reg_412 = ap_const_lv1_1)) or ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (or_ln1278_1_reg_408 = ap_const_lv1_1)) or ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_ln1278_reg_404 = ap_const_lv1_1)) or ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (or_ln1278_6_reg_428 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            img_blk_n <= img_full_n;
        else 
            img_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_din_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, or_ln1278_6_reg_428, ap_CS_fsm_pp0_stage7, icmp_ln1262_reg_400, ap_predicate_op80_write_state8, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, p_s_fu_258_p3, ap_block_pp0_stage1_01001, p_1_fu_337_p3, ap_predicate_op65_write_state3, ap_block_pp0_stage2_01001, p_2_fu_345_p3, ap_predicate_op68_write_state4, ap_block_pp0_stage3_01001, p_3_fu_353_p3, ap_predicate_op71_write_state5, ap_block_pp0_stage4_01001, p_4_fu_361_p3, ap_predicate_op74_write_state6, ap_block_pp0_stage5_01001, p_5_fu_369_p3, ap_predicate_op77_write_state7, ap_block_pp0_stage6_01001, p_6_fu_377_p3, ap_block_pp0_stage7_01001, p_0_fu_385_p3, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (or_ln1278_6_reg_428 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            img_din <= p_0_fu_385_p3;
        elsif (((ap_predicate_op80_write_state8 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            img_din <= p_6_fu_377_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_predicate_op77_write_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            img_din <= p_5_fu_369_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_predicate_op74_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            img_din <= p_4_fu_361_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_predicate_op71_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            img_din <= p_3_fu_353_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_predicate_op68_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            img_din <= p_2_fu_345_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op65_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            img_din <= p_1_fu_337_p3;
        elsif (((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            img_din <= p_s_fu_258_p3;
        else 
            img_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, or_ln1278_6_reg_428, ap_CS_fsm_pp0_stage7, icmp_ln1262_reg_400, ap_predicate_op80_write_state8, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_predicate_op65_write_state3, ap_predicate_op68_write_state4, ap_predicate_op71_write_state5, ap_predicate_op74_write_state6, ap_predicate_op77_write_state7, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_predicate_op80_write_state8 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln1262_reg_400 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_predicate_op77_write_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_predicate_op74_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_predicate_op71_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage3_11001) and (ap_predicate_op68_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op65_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln1278_6_reg_428 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            img_write <= ap_const_logic_1;
        else 
            img_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1278_1_fu_213_p2 <= (cmp125_2 or cmp122_fu_201_p2);
    or_ln1278_2_fu_219_p2 <= (cmp125_3 or cmp122_fu_201_p2);
    or_ln1278_3_fu_225_p2 <= (cmp125_4 or cmp122_fu_201_p2);
    or_ln1278_4_fu_231_p2 <= (cmp125_5 or cmp122_fu_201_p2);
    or_ln1278_5_fu_237_p2 <= (cmp125_6 or cmp122_fu_201_p2);
    or_ln1278_6_fu_243_p2 <= (icmp_ln1252 or cmp122_fu_201_p2);
    or_ln1278_fu_207_p2 <= (cmp125_1 or cmp122_fu_201_p2);
    p_0_fu_385_p3 <= (ap_const_lv16_8080 & tmp_6_reg_462);
    p_1_fu_337_p3 <= (ap_const_lv16_8080 & tmp_s_reg_432);
    p_2_fu_345_p3 <= (ap_const_lv16_8080 & tmp_1_reg_437);
    p_3_fu_353_p3 <= (ap_const_lv16_8080 & tmp_2_reg_442);
    p_4_fu_361_p3 <= (ap_const_lv16_8080 & tmp_3_reg_447);
    p_5_fu_369_p3 <= (ap_const_lv16_8080 & tmp_4_reg_452);
    p_6_fu_377_p3 <= (ap_const_lv16_8080 & tmp_5_reg_457);
    p_s_fu_258_p3 <= (ap_const_lv16_8080 & trunc_ln1274_fu_254_p1);
        sub121_cast3_cast_fu_173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub121_cast3),14));

    trunc_ln1274_fu_254_p1 <= bytePlanes_dout(8 - 1 downto 0);
    x_2_fu_191_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_1) + unsigned(ap_const_lv13_1));
    x_cast_fu_197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_x_1),14));
end behav;
