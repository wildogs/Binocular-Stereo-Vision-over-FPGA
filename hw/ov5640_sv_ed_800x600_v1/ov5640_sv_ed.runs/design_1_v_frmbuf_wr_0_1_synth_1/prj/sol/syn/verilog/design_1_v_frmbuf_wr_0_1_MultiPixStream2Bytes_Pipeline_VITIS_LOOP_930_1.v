// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module design_1_v_frmbuf_wr_0_1_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_930_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_num_data_valid,
        img_fifo_cap,
        img_empty_n,
        img_read,
        bytePlanes_din,
        bytePlanes_num_data_valid,
        bytePlanes_fifo_cap,
        bytePlanes_full_n,
        bytePlanes_write,
        trunc_ln915_1,
        icmp_ln920,
        cmp103_6,
        cmp103_5,
        cmp103_4,
        cmp103_3,
        cmp103_2,
        sub100_cast3,
        cmp103_1
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] img_dout;
input  [1:0] img_num_data_valid;
input  [1:0] img_fifo_cap;
input   img_empty_n;
output   img_read;
output  [63:0] bytePlanes_din;
input  [10:0] bytePlanes_num_data_valid;
input  [10:0] bytePlanes_fifo_cap;
input   bytePlanes_full_n;
output   bytePlanes_write;
input  [12:0] trunc_ln915_1;
input  [0:0] icmp_ln920;
input  [0:0] cmp103_6;
input  [0:0] cmp103_5;
input  [0:0] cmp103_4;
input  [0:0] cmp103_3;
input  [0:0] cmp103_2;
input  [12:0] sub100_cast3;
input  [0:0] cmp103_1;

reg ap_idle;
reg img_read;
reg bytePlanes_write;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln930_reg_379;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state10_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] or_ln934_5_reg_435;
reg    ap_predicate_op74_read_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    bytePlanes_blk_n;
wire    ap_block_pp0_stage1;
reg    img_blk_n;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln934_reg_400;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln934_1_reg_409;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln934_2_reg_418;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln934_3_reg_427;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln934_4_reg_431;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln934_6_reg_439;
reg   [7:0] in_pix_1_reg_143;
reg   [7:0] in_pix_2_reg_153;
reg   [7:0] in_pix_3_reg_164;
reg   [7:0] in_pix_4_reg_175;
reg   [7:0] in_pix_5_reg_186;
reg   [7:0] in_pix_6_reg_197;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op79_read_state9;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln930_fu_230_p2;
wire   [0:0] cmp101_fu_246_p2;
reg   [0:0] cmp101_reg_383;
wire   [7:0] in_pix_fu_257_p1;
reg   [7:0] in_pix_reg_394;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] or_ln934_fu_261_p2;
wire   [7:0] trunc_ln935_fu_265_p1;
reg    ap_predicate_op43_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
wire   [0:0] or_ln934_1_fu_269_p2;
wire   [7:0] trunc_ln935_1_fu_273_p1;
reg    ap_predicate_op49_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
wire   [0:0] or_ln934_2_fu_277_p2;
wire   [7:0] trunc_ln935_2_fu_281_p1;
reg    ap_predicate_op55_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
wire   [0:0] or_ln934_3_fu_285_p2;
wire   [0:0] or_ln934_4_fu_289_p2;
wire   [0:0] or_ln934_5_fu_293_p2;
wire   [0:0] or_ln934_6_fu_297_p2;
wire   [7:0] trunc_ln935_3_fu_301_p1;
reg    ap_predicate_op64_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
wire   [7:0] trunc_ln935_4_fu_305_p1;
reg    ap_predicate_op69_read_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire   [7:0] trunc_ln935_5_fu_309_p1;
reg    ap_block_pp0_stage7_11001;
wire   [7:0] trunc_ln935_6_fu_313_p1;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_1_reg_143;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_2_reg_153;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_3_reg_164;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_4_reg_175;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_5_reg_186;
wire   [7:0] ap_phi_reg_pp0_iter0_in_pix_6_reg_197;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_6_reg_197;
wire   [7:0] ap_phi_reg_pp0_iter0_in_pix_7_reg_208;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_7_reg_208;
reg   [12:0] x_fu_72;
wire   [12:0] x_2_fu_236_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_x_1;
reg    ap_block_pp0_stage1_01001;
wire   [13:0] x_cast_fu_242_p1;
wire  signed [13:0] sub100_cast3_cast_fu_218_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_570;
reg    ap_condition_574;
reg    ap_condition_578;
reg    ap_condition_582;
reg    ap_condition_586;
reg    ap_condition_590;
reg    ap_condition_375;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

design_1_v_frmbuf_wr_0_1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_574)) begin
            ap_phi_reg_pp0_iter0_in_pix_1_reg_143 <= in_pix_fu_257_p1;
        end else if ((1'b1 == ap_condition_570)) begin
            ap_phi_reg_pp0_iter0_in_pix_1_reg_143 <= trunc_ln935_fu_265_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_578)) begin
        if ((or_ln934_1_reg_409 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_2_reg_153 <= ap_phi_reg_pp0_iter0_in_pix_1_reg_143;
        end else if ((or_ln934_1_reg_409 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_2_reg_153 <= trunc_ln935_1_fu_273_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_582)) begin
        if ((or_ln934_2_reg_418 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_3_reg_164 <= ap_phi_reg_pp0_iter0_in_pix_2_reg_153;
        end else if ((or_ln934_2_reg_418 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_3_reg_164 <= trunc_ln935_2_fu_281_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_586)) begin
        if ((or_ln934_3_reg_427 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_4_reg_175 <= ap_phi_reg_pp0_iter0_in_pix_3_reg_164;
        end else if ((or_ln934_3_reg_427 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_4_reg_175 <= trunc_ln935_3_fu_301_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_590)) begin
        if ((or_ln934_4_reg_431 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_5_reg_186 <= ap_phi_reg_pp0_iter0_in_pix_4_reg_175;
        end else if ((or_ln934_4_reg_431 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_5_reg_186 <= trunc_ln935_4_fu_305_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_375)) begin
        if (((or_ln934_5_reg_435 == 1'd0) & (icmp_ln930_reg_379 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_in_pix_6_reg_197 <= ap_phi_reg_pp0_iter0_in_pix_5_reg_186;
        end else if (((or_ln934_5_reg_435 == 1'd1) & (icmp_ln930_reg_379 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_in_pix_6_reg_197 <= trunc_ln935_5_fu_309_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_in_pix_6_reg_197 <= ap_phi_reg_pp0_iter0_in_pix_6_reg_197;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln934_6_reg_439 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_in_pix_7_reg_208 <= ap_phi_reg_pp0_iter1_in_pix_6_reg_197;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln934_6_reg_439 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_in_pix_7_reg_208 <= trunc_ln935_6_fu_313_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_in_pix_7_reg_208 <= ap_phi_reg_pp0_iter0_in_pix_7_reg_208;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln930_fu_230_p2 == 1'd0))) begin
            x_fu_72 <= x_2_fu_236_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_72 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln930_fu_230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp101_reg_383 <= cmp101_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln930_reg_379 <= icmp_ln930_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_pix_1_reg_143 <= ap_phi_reg_pp0_iter0_in_pix_1_reg_143;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        in_pix_2_reg_153 <= ap_phi_reg_pp0_iter0_in_pix_2_reg_153;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        in_pix_3_reg_164 <= ap_phi_reg_pp0_iter0_in_pix_3_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        in_pix_4_reg_175 <= ap_phi_reg_pp0_iter0_in_pix_4_reg_175;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        in_pix_5_reg_186 <= ap_phi_reg_pp0_iter0_in_pix_5_reg_186;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_pix_6_reg_197 <= ap_phi_reg_pp0_iter1_in_pix_6_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln930_reg_379 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_pix_reg_394 <= in_pix_fu_257_p1;
        or_ln934_reg_400 <= or_ln934_fu_261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln930_reg_379 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln934_1_reg_409 <= or_ln934_1_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln930_reg_379 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln934_2_reg_418 <= or_ln934_2_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln930_reg_379 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        or_ln934_3_reg_427 <= or_ln934_3_fu_285_p2;
        or_ln934_4_reg_431 <= or_ln934_4_fu_289_p2;
        or_ln934_5_reg_435 <= or_ln934_5_fu_293_p2;
        or_ln934_6_reg_439 <= or_ln934_6_fu_297_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln930_reg_379 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 13'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_blk_n = bytePlanes_full_n;
    end else begin
        bytePlanes_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_write = 1'b1;
    end else begin
        bytePlanes_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op74_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln934_6_reg_439 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln934_4_reg_431 == 1'd1)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln934_3_reg_427 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln934_2_reg_418 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln934_1_reg_409 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln930_reg_379 == 
    1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln934_reg_400 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op74_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op69_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op64_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op55_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op49_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op43_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) 
    | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op79_read_state9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op79_read_state9 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op79_read_state9 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((bytePlanes_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln930_reg_379 == 1'd0) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((bytePlanes_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln930_reg_379 == 1'd0) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((bytePlanes_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln930_reg_379 == 1'd0) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op43_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op43_read_state3 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op49_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op49_read_state4 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op55_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op55_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op64_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op64_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op69_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op69_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_predicate_op74_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_predicate_op74_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = (bytePlanes_full_n == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((icmp_ln930_reg_379 == 1'd0) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op43_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op49_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op55_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op64_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op69_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op74_read_state8 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((img_empty_n == 1'b0) & (ap_predicate_op79_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_375 = ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_570 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln934_reg_400 == 1'd1));
end

always @ (*) begin
    ap_condition_574 = ((1'b0 == ap_block_pp0_stage1_11001) & (or_ln934_fu_261_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_578 = ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_582 = ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_586 = ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_590 = ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln930_reg_379 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_in_pix_6_reg_197 = 'bx;

assign ap_phi_reg_pp0_iter0_in_pix_7_reg_208 = 'bx;

always @ (*) begin
    ap_predicate_op43_read_state3 = ((icmp_ln930_reg_379 == 1'd0) & (or_ln934_reg_400 == 1'd1));
end

always @ (*) begin
    ap_predicate_op49_read_state4 = ((icmp_ln930_reg_379 == 1'd0) & (or_ln934_1_reg_409 == 1'd1));
end

always @ (*) begin
    ap_predicate_op55_read_state5 = ((icmp_ln930_reg_379 == 1'd0) & (or_ln934_2_reg_418 == 1'd1));
end

always @ (*) begin
    ap_predicate_op64_read_state6 = ((icmp_ln930_reg_379 == 1'd0) & (or_ln934_3_reg_427 == 1'd1));
end

always @ (*) begin
    ap_predicate_op69_read_state7 = ((icmp_ln930_reg_379 == 1'd0) & (or_ln934_4_reg_431 == 1'd1));
end

always @ (*) begin
    ap_predicate_op74_read_state8 = ((or_ln934_5_reg_435 == 1'd1) & (icmp_ln930_reg_379 == 1'd0));
end

always @ (*) begin
    ap_predicate_op79_read_state9 = ((icmp_ln930_reg_379 == 1'd0) & (or_ln934_6_reg_439 == 1'd1));
end

assign bytePlanes_din = {{{{{{{{ap_phi_reg_pp0_iter1_in_pix_7_reg_208}, {in_pix_6_reg_197}}, {in_pix_5_reg_186}}, {in_pix_4_reg_175}}, {in_pix_3_reg_164}}, {in_pix_2_reg_153}}, {in_pix_1_reg_143}}, {in_pix_reg_394}};

assign cmp101_fu_246_p2 = (($signed(x_cast_fu_242_p1) < $signed(sub100_cast3_cast_fu_218_p1)) ? 1'b1 : 1'b0);

assign icmp_ln930_fu_230_p2 = ((ap_sig_allocacmp_x_1 == trunc_ln915_1) ? 1'b1 : 1'b0);

assign in_pix_fu_257_p1 = img_dout[7:0];

assign or_ln934_1_fu_269_p2 = (cmp103_2 | cmp101_reg_383);

assign or_ln934_2_fu_277_p2 = (cmp103_3 | cmp101_reg_383);

assign or_ln934_3_fu_285_p2 = (cmp103_4 | cmp101_reg_383);

assign or_ln934_4_fu_289_p2 = (cmp103_5 | cmp101_reg_383);

assign or_ln934_5_fu_293_p2 = (cmp103_6 | cmp101_reg_383);

assign or_ln934_6_fu_297_p2 = (icmp_ln920 | cmp101_reg_383);

assign or_ln934_fu_261_p2 = (cmp103_1 | cmp101_reg_383);

assign sub100_cast3_cast_fu_218_p1 = $signed(sub100_cast3);

assign trunc_ln935_1_fu_273_p1 = img_dout[7:0];

assign trunc_ln935_2_fu_281_p1 = img_dout[7:0];

assign trunc_ln935_3_fu_301_p1 = img_dout[7:0];

assign trunc_ln935_4_fu_305_p1 = img_dout[7:0];

assign trunc_ln935_5_fu_309_p1 = img_dout[7:0];

assign trunc_ln935_6_fu_313_p1 = img_dout[7:0];

assign trunc_ln935_fu_265_p1 = img_dout[7:0];

assign x_2_fu_236_p2 = (ap_sig_allocacmp_x_1 + 13'd1);

assign x_cast_fu_242_p1 = ap_sig_allocacmp_x_1;

endmodule //design_1_v_frmbuf_wr_0_1_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_930_1
