-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    imgL_in_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    imgL_in_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    imgL_in_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    imgL_in_data_empty_n : IN STD_LOGIC;
    imgL_in_data_read : OUT STD_LOGIC;
    mapxLMat_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mapxLMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    mapxLMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    mapxLMat_data_empty_n : IN STD_LOGIC;
    mapxLMat_data_read : OUT STD_LOGIC;
    mapyLMat_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mapyLMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    mapyLMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    mapyLMat_data_empty_n : IN STD_LOGIC;
    mapyLMat_data_read : OUT STD_LOGIC;
    leftRemappedMat_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    leftRemappedMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    leftRemappedMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    leftRemappedMat_data_full_n : IN STD_LOGIC;
    leftRemappedMat_data_write : OUT STD_LOGIC;
    r2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    r2_ce0 : OUT STD_LOGIC;
    r2_we0 : OUT STD_LOGIC;
    r2_d0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    r2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    r2_ce1 : OUT STD_LOGIC;
    r2_q1 : IN STD_LOGIC_VECTOR (16 downto 0);
    idxprom2582_i : IN STD_LOGIC_VECTOR (6 downto 0);
    r1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    r1_ce0 : OUT STD_LOGIC;
    r1_we0 : OUT STD_LOGIC;
    r1_d0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    r1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    r1_ce1 : OUT STD_LOGIC;
    r1_q1 : IN STD_LOGIC_VECTOR (16 downto 0);
    add106_i : IN STD_LOGIC_VECTOR (16 downto 0);
    i : IN STD_LOGIC_VECTOR (16 downto 0);
    cmp263_i : IN STD_LOGIC_VECTOR (0 downto 0);
    mul_ln314 : IN STD_LOGIC_VECTOR (14 downto 0);
    trunc_ln : IN STD_LOGIC_VECTOR (0 downto 0);
    cols_cast_i : IN STD_LOGIC_VECTOR (15 downto 0);
    cmp111_i : IN STD_LOGIC_VECTOR (0 downto 0);
    bitcast_ln347 : IN STD_LOGIC_VECTOR (30 downto 0);
    trunc_ln347_1 : IN STD_LOGIC_VECTOR (22 downto 0);
    conv1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    bitcast_ln348 : IN STD_LOGIC_VECTOR (30 downto 0);
    trunc_ln348_1 : IN STD_LOGIC_VECTOR (22 downto 0);
    conv2_i : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_42000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000010000000000000000000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv15_191 : STD_LOGIC_VECTOR (14 downto 0) := "000000110010001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln259_reg_1715 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln270_reg_1723 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op80_read_state2 : BOOLEAN;
    signal and_ln323_reg_1732 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal and_ln323_reg_1732_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln259_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal imgL_in_data_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mapxLMat_data_blk_n : STD_LOGIC;
    signal mapyLMat_data_blk_n : STD_LOGIC;
    signal leftRemappedMat_data_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln259_fu_540_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln259_reg_1719 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln259_reg_1719_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln270_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln314_fu_566_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln314_reg_1727 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln314_reg_1727_pp0_iter1_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal and_ln323_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln323_reg_1732_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_5_reg_1736_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1741_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_3_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_3_reg_1746 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_3_reg_1746_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_3_reg_1746_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_reg_1751 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_reg_1751_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_reg_1751_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal val_reg_1761 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_6_reg_1766 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln347_3_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_3_reg_1771_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_4_reg_1776_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_1_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_1_reg_1781 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_1_reg_1781_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_2_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_2_reg_1786 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_2_reg_1786_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fl_fu_686_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fl_reg_1791 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fl_reg_1791_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal y_fl_fu_690_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1803_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_1_reg_1808_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_492_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_2_reg_1813 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_sign_2_reg_1818 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_sign_2_reg_1818_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_sign_2_reg_1818_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln371_2_fu_736_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln371_2_reg_1823 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_276_fu_750_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_276_reg_1828 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_2_fu_768_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln18_2_reg_1833 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_reg_1838 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_10_fu_830_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_10_reg_1843 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_10_reg_1843_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_sign_reg_1849 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_sign_reg_1849_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_sign_reg_1849_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln371_fu_858_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln371_reg_1854 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_fu_872_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1859 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_fu_890_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln18_reg_1864 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_10_fu_898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_10_reg_1869 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_9_fu_957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_9_reg_1874 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_9_reg_1874_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_964_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1880 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1880_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1880_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1880_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1880_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1880_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1880_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1880_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal y_fu_969_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal y_reg_1885 : STD_LOGIC_VECTOR (26 downto 0);
    signal y_reg_1885_pp0_iter10_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal y_reg_1885_pp0_iter11_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal y_reg_1885_pp0_iter12_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal y_reg_1885_pp0_iter13_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal y_reg_1885_pp0_iter14_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal y_reg_1885_pp0_iter15_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln335_1_reg_1890 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln335_1_reg_1890_pp0_iter10_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln335_1_reg_1890_pp0_iter11_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln335_1_reg_1890_pp0_iter12_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln335_1_reg_1890_pp0_iter13_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln335_1_reg_1890_pp0_iter14_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln335_fu_997_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln335_reg_1896 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln335_reg_1896_pp0_iter10_reg : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln335_reg_1896_pp0_iter11_reg : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln335_reg_1896_pp0_iter12_reg : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln335_reg_1896_pp0_iter13_reg : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln335_reg_1896_pp0_iter14_reg : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln335_reg_1896_pp0_iter15_reg : STD_LOGIC_VECTOR (27 downto 0);
    signal iv_fu_1001_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal iv_reg_1901 : STD_LOGIC_VECTOR (4 downto 0);
    signal iv_reg_1901_pp0_iter10_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal iv_reg_1901_pp0_iter11_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal iv_reg_1901_pp0_iter12_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln370_fu_1057_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln370_reg_1908 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln370_fu_1065_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln370_reg_1913 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln370_1_fu_1087_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln370_1_reg_1919 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_285_reg_1924 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool438_i_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool438_i_reg_1929 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool438_i_reg_1929_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool438_i_reg_1929_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool438_i_reg_1929_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal result_9_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_9_reg_1937 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln370_4_fu_1130_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln370_4_reg_1942 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_284_reg_1947 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln370_5_fu_1160_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln370_5_reg_1952 : STD_LOGIC_VECTOR (7 downto 0);
    signal ya1_fu_1200_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ya1_reg_1957 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_12_fu_1207_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_reg_1962 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_reg_1962_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_reg_1962_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_reg_1962_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_reg_1962_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_reg_1962_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal iu_fu_1220_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal iu_reg_1967 : STD_LOGIC_VECTOR (4 downto 0);
    signal iu_reg_1967_pp0_iter12_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal xa1_fu_1274_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal xa1_reg_1974 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln368_1_fu_1296_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln368_1_reg_1981 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_fu_1325_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_reg_1987 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_136_fu_1334_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_136_reg_1993 : STD_LOGIC_VECTOR (14 downto 0);
    signal tobool428_i_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool428_i_reg_2019 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_i_i682_i_fu_1394_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_i_i682_i_reg_2027 : STD_LOGIC_VECTOR (5 downto 0);
    signal k01_fu_1412_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal k01_reg_2033 : STD_LOGIC_VECTOR (10 downto 0);
    signal k10_fu_1428_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal k10_reg_2038 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln412_1_fu_1492_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln412_1_reg_2048 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln412_2_fu_1499_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln412_2_reg_2053 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln439_1_fu_1530_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln439_1_reg_2068 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln439_2_fu_1539_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln439_2_reg_2073 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln347_2_fu_1596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_2_reg_2088 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln347_2_fu_1602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln347_2_reg_2093 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1678_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln439_reg_2098 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1687_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln439_1_reg_2103 : STD_LOGIC_VECTOR (17 downto 0);
    signal buf_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_ce0 : STD_LOGIC;
    signal buf_we0 : STD_LOGIC;
    signal buf_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_ce1 : STD_LOGIC;
    signal buf_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_3_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_3_ce0 : STD_LOGIC;
    signal buf_3_we0 : STD_LOGIC;
    signal buf_3_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_3_ce1 : STD_LOGIC;
    signal buf_3_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_4_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_4_ce0 : STD_LOGIC;
    signal buf_4_we0 : STD_LOGIC;
    signal buf_4_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_4_ce1 : STD_LOGIC;
    signal buf_4_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_5_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_5_ce0 : STD_LOGIC;
    signal buf_5_we0 : STD_LOGIC;
    signal buf_5_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_5_ce1 : STD_LOGIC;
    signal buf_5_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_s_reg_477 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_s_reg_477 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_s_reg_477 : STD_LOGIC_VECTOR (7 downto 0);
    signal idxprom2582_i_cast_fu_514_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln314_fu_679_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast5_fu_1353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast6_fu_1362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast7_fu_1372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8_fu_1381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln347_fu_1550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln347_1_fu_1554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_204 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_6_fu_534_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_5 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_506_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_cast_i_cast_fu_510_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln270_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal div235_udiv_i_fu_556_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_3_fu_578_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_600_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_627_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln347_fu_637_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_5_fu_653_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln348_fu_663_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln348_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln348_1_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln348_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_2_fu_715_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_2_fu_726_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_1_fu_740_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_1_fu_744_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln18_1_fu_758_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln18_2_fu_764_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_2_fu_776_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln18_5_fu_789_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_2_fu_785_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln18_2_fu_792_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal lshr_ln18_1_fu_796_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_277_fu_808_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln18_1_fu_802_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln21_1_fu_816_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_820_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_fu_837_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_fu_848_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_fu_862_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_866_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln18_fu_880_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln18_fu_886_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_fu_903_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln18_4_fu_916_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_912_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln18_fu_919_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal lshr_ln18_fu_923_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_274_fu_935_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln18_fu_929_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln21_fu_943_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_947_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln370_fu_1013_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal lshr_ln370_1_fu_1019_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln370_1_fu_1029_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln370_1_fu_1039_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln370_fu_1049_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_283_fu_1005_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln370_1_fu_1033_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln370_fu_1053_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_279_fu_979_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_and_f9_fu_1069_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln370_5_fu_1077_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln370_3_fu_1081_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln370_3_fu_1095_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln370_1_fu_1118_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln370_2_fu_1121_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln370_fu_1124_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sub_ln370_4_fu_1142_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_and_t5_fu_1148_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln370_7_fu_1156_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_and_f_fu_1166_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln371_fu_1177_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_and_t_fu_1182_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln371_2_fu_1190_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln371_1_fu_1194_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln371_fu_1173_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln5_fu_1224_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln368_fu_1242_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln368_2_fu_1248_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_282_fu_1234_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln368_1_fu_1258_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln368_3_fu_1264_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_278_fu_1212_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_and_t1_fu_1282_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln368_3_fu_1290_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_and_f3_fu_1304_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln370_6_fu_1311_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ya0_fu_1315_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_fu_1325_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_136_fu_1334_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln368_fu_1340_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal xa0_fu_1343_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_134_fu_1348_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_135_fu_1358_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_137_fu_1367_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_138_fu_1377_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal iv_cast_i_fu_1391_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal k01_fu_1412_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal k01_fu_1412_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal iu_cast_i_fu_1409_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_i_i569_i_fu_1418_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal k10_fu_1428_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal k10_fu_1428_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_i_i_fu_1440_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_i_i_fu_1440_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_i_i_fu_1440_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal d10_6_fu_1457_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal d00_fu_1471_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal d11_8_fu_1464_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal d01_fu_1478_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln412_fu_1485_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln412_3_fu_1506_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln439_1_fu_1530_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln439_1_fu_1530_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln439_2_fu_1539_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln439_2_fu_1539_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln338_1_fu_1545_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln347_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln347_1_fu_1568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln347_fu_1572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r1_load_cast_i_fu_1583_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal r2_load_cast_i_fu_1592_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ynext_fu_1559_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal and_ln347_1_fu_1578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_1_fu_1587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_fu_1608_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_281_fu_1621_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln347_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_fu_1628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln347_4_fu_1639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln347_5_fu_1644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln347_3_fu_1634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln439_2_fu_1655_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln439_2_fu_1655_p2 : signal is "no";
    signal in_range_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_fu_1659_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1678_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1678_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1687_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1687_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_492_ce : STD_LOGIC;
    signal grp_fu_497_ce : STD_LOGIC;
    signal grp_fu_502_ce : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal grp_fu_506_ce : STD_LOGIC;
    signal grp_fu_1678_ce : STD_LOGIC;
    signal grp_fu_1687_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_68 : BOOLEAN;
    signal ap_enable_state1_pp0_iter0_stage0 : BOOLEAN;
    signal ap_enable_operation_288 : BOOLEAN;
    signal ap_enable_state16_pp0_iter15_stage0 : BOOLEAN;
    signal ap_enable_operation_301 : BOOLEAN;
    signal ap_enable_state17_pp0_iter16_stage0 : BOOLEAN;
    signal ap_enable_operation_69 : BOOLEAN;
    signal ap_enable_operation_291 : BOOLEAN;
    signal ap_enable_operation_304 : BOOLEAN;
    signal ap_predicate_op98_store_state3 : BOOLEAN;
    signal ap_enable_operation_98 : BOOLEAN;
    signal ap_enable_state3_pp0_iter2_stage0 : BOOLEAN;
    signal ap_enable_operation_242 : BOOLEAN;
    signal ap_enable_state13_pp0_iter12_stage0 : BOOLEAN;
    signal ap_enable_operation_261 : BOOLEAN;
    signal ap_enable_state14_pp0_iter13_stage0 : BOOLEAN;
    signal ap_predicate_op100_store_state3 : BOOLEAN;
    signal ap_enable_operation_100 : BOOLEAN;
    signal ap_enable_operation_243 : BOOLEAN;
    signal ap_enable_operation_262 : BOOLEAN;
    signal ap_predicate_op102_store_state3 : BOOLEAN;
    signal ap_enable_operation_102 : BOOLEAN;
    signal ap_enable_operation_244 : BOOLEAN;
    signal ap_enable_operation_263 : BOOLEAN;
    signal ap_predicate_op104_store_state3 : BOOLEAN;
    signal ap_enable_operation_104 : BOOLEAN;
    signal ap_enable_operation_245 : BOOLEAN;
    signal ap_enable_operation_264 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1678_p20 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1687_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1687_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal k01_fu_1412_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal k01_fu_1412_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal k10_fu_1428_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal k10_fu_1428_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_i_i_fu_1440_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_i_i_fu_1440_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln439_1_fu_1530_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln439_1_fu_1530_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln439_2_fu_1539_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln439_2_fu_1539_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_condition_682 : BOOLEAN;
    signal ap_condition_684 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component stereolbm_axis_cambm_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component stereolbm_axis_cambm_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component stereolbm_axis_cambm_mul_8s_10ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component stereolbm_axis_cambm_mul_6ns_5ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component stereolbm_axis_cambm_mul_5ns_5ns_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component stereolbm_axis_cambm_mul_11ns_8ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component stereolbm_axis_cambm_ama_submuladd_11ns_11ns_8ns_18ns_18_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component stereolbm_axis_cambm_mac_muladd_10ns_8ns_18ns_18_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_buf_RAM_Abkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component stereolbm_axis_cambm_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    buf_U : component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_buf_RAM_Abkb
    generic map (
        DataWidth => 8,
        AddressRange => 26065,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_address0,
        ce0 => buf_ce0,
        we0 => buf_we0,
        d0 => ap_phi_reg_pp0_iter2_s_reg_477,
        address1 => buf_address1,
        ce1 => buf_ce1,
        q1 => buf_q1);

    buf_3_U : component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_buf_RAM_Abkb
    generic map (
        DataWidth => 8,
        AddressRange => 26065,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_3_address0,
        ce0 => buf_3_ce0,
        we0 => buf_3_we0,
        d0 => ap_phi_reg_pp0_iter2_s_reg_477,
        address1 => buf_3_address1,
        ce1 => buf_3_ce1,
        q1 => buf_3_q1);

    buf_4_U : component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_buf_RAM_Abkb
    generic map (
        DataWidth => 8,
        AddressRange => 26065,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_4_address0,
        ce0 => buf_4_ce0,
        we0 => buf_4_we0,
        d0 => ap_phi_reg_pp0_iter2_s_reg_477,
        address1 => buf_4_address1,
        ce1 => buf_4_ce1,
        q1 => buf_4_q1);

    buf_5_U : component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_buf_RAM_Abkb
    generic map (
        DataWidth => 8,
        AddressRange => 26065,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_5_address0,
        ce0 => buf_5_ce0,
        we0 => buf_5_we0,
        d0 => ap_phi_reg_pp0_iter2_s_reg_477,
        address1 => buf_5_address1,
        ce1 => buf_5_ce1,
        q1 => buf_5_q1);

    fmul_32ns_32ns_32_4_max_dsp_1_U223 : component stereolbm_axis_cambm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => y_fl_fu_690_p1,
        din1 => ap_const_lv32_42000000,
        ce => grp_fu_492_ce,
        dout => grp_fu_492_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U224 : component stereolbm_axis_cambm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x_fl_reg_1791_pp0_iter3_reg,
        din1 => ap_const_lv32_42000000,
        ce => grp_fu_497_ce,
        dout => grp_fu_497_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U225 : component stereolbm_axis_cambm_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => y_fl_fu_690_p1,
        din1 => conv1_i,
        ce => grp_fu_502_ce,
        opcode => ap_const_lv5_5,
        dout => grp_fu_502_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U226 : component stereolbm_axis_cambm_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_506_p0,
        din1 => conv2_i,
        ce => grp_fu_506_ce,
        opcode => ap_const_lv5_5,
        dout => grp_fu_506_p2);

    mul_8s_10ns_15_1_1_U227 : component stereolbm_axis_cambm_mul_8s_10ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 15)
    port map (
        din0 => ya0_fu_1315_p3,
        din1 => empty_fu_1325_p1,
        dout => empty_fu_1325_p2);

    mul_8s_10ns_15_1_1_U228 : component stereolbm_axis_cambm_mul_8s_10ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 15)
    port map (
        din0 => ya1_reg_1957,
        din1 => empty_136_fu_1334_p1,
        dout => empty_136_fu_1334_p2);

    mul_6ns_5ns_11_1_1_U229 : component stereolbm_axis_cambm_mul_6ns_5ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 5,
        dout_WIDTH => 11)
    port map (
        din0 => k01_fu_1412_p0,
        din1 => k01_fu_1412_p1,
        dout => k01_fu_1412_p2);

    mul_6ns_5ns_11_1_1_U230 : component stereolbm_axis_cambm_mul_6ns_5ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 5,
        dout_WIDTH => 11)
    port map (
        din0 => k10_fu_1428_p0,
        din1 => k10_fu_1428_p1,
        dout => k10_fu_1428_p2);

    mul_5ns_5ns_10_1_1_U231 : component stereolbm_axis_cambm_mul_5ns_5ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        din0 => mul_i_i_fu_1440_p0,
        din1 => mul_i_i_fu_1440_p1,
        dout => mul_i_i_fu_1440_p2);

    mul_11ns_8ns_18_1_1_U232 : component stereolbm_axis_cambm_mul_11ns_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln439_1_fu_1530_p0,
        din1 => mul_ln439_1_fu_1530_p1,
        dout => mul_ln439_1_fu_1530_p2);

    mul_11ns_8ns_18_1_1_U233 : component stereolbm_axis_cambm_mul_11ns_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln439_2_fu_1539_p0,
        din1 => mul_ln439_2_fu_1539_p1,
        dout => mul_ln439_2_fu_1539_p2);

    ama_submuladd_11ns_11ns_8ns_18ns_18_4_1_U234 : component stereolbm_axis_cambm_ama_submuladd_11ns_11ns_8ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 8,
        din3_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1678_p0,
        din1 => k01_fu_1412_p2,
        din2 => grp_fu_1678_p2,
        din3 => mul_ln439_1_reg_2068,
        ce => grp_fu_1678_ce,
        dout => grp_fu_1678_p4);

    mac_muladd_10ns_8ns_18ns_18_4_1_U235 : component stereolbm_axis_cambm_mac_muladd_10ns_8ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1687_p0,
        din1 => grp_fu_1687_p1,
        din2 => mul_ln439_2_reg_2073,
        ce => grp_fu_1687_ce,
        dout => grp_fu_1687_p3);

    flow_control_loop_pipe_sequential_init_U : component stereolbm_axis_cambm_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter16_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_s_reg_477_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_682)) then
                if (((ap_const_lv1_0 = and_ln270_fu_550_p2) and (icmp_ln259_fu_528_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_s_reg_477 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_s_reg_477 <= ap_phi_reg_pp0_iter0_s_reg_477;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_s_reg_477_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_684)) then
                if (((ap_const_lv1_1 = and_ln270_reg_1723) and (icmp_ln259_reg_1715 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_s_reg_477 <= imgL_in_data_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_s_reg_477 <= ap_phi_reg_pp0_iter1_s_reg_477;
                end if;
            end if; 
        end if;
    end process;

    j_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_start_int = ap_const_logic_1) and (icmp_ln259_fu_528_p2 = ap_const_lv1_0))) then 
                    j_fu_204 <= j_6_fu_534_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_204 <= ap_const_lv17_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln259_fu_528_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln314_reg_1727 <= add_ln314_fu_566_p2;
                and_ln270_reg_1723 <= and_ln270_fu_550_p2;
                and_ln323_reg_1732 <= and_ln323_fu_572_p2;
                trunc_ln259_reg_1719 <= trunc_ln259_fu_540_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln314_reg_1727_pp0_iter1_reg <= add_ln314_reg_1727;
                and_ln323_reg_1732_pp0_iter1_reg <= and_ln323_reg_1732;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln259_reg_1715 <= icmp_ln259_fu_528_p2;
                icmp_ln347_5_reg_1736_pp0_iter1_reg <= icmp_ln347_5_reg_1736;
                icmp_ln347_reg_1741_pp0_iter1_reg <= icmp_ln347_reg_1741;
                icmp_ln348_3_reg_1746_pp0_iter1_reg <= icmp_ln348_3_reg_1746;
                icmp_ln348_reg_1751_pp0_iter1_reg <= icmp_ln348_reg_1751;
                trunc_ln259_reg_1719_pp0_iter1_reg <= trunc_ln259_reg_1719;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter15_reg) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln439_1_reg_2103 <= grp_fu_1687_p3;
                add_ln439_reg_2098 <= grp_fu_1678_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln323_reg_1732_pp0_iter10_reg <= and_ln323_reg_1732_pp0_iter9_reg;
                and_ln323_reg_1732_pp0_iter11_reg <= and_ln323_reg_1732_pp0_iter10_reg;
                and_ln323_reg_1732_pp0_iter12_reg <= and_ln323_reg_1732_pp0_iter11_reg;
                and_ln323_reg_1732_pp0_iter13_reg <= and_ln323_reg_1732_pp0_iter12_reg;
                and_ln323_reg_1732_pp0_iter14_reg <= and_ln323_reg_1732_pp0_iter13_reg;
                and_ln323_reg_1732_pp0_iter15_reg <= and_ln323_reg_1732_pp0_iter14_reg;
                and_ln323_reg_1732_pp0_iter16_reg <= and_ln323_reg_1732_pp0_iter15_reg;
                and_ln323_reg_1732_pp0_iter2_reg <= and_ln323_reg_1732_pp0_iter1_reg;
                and_ln323_reg_1732_pp0_iter3_reg <= and_ln323_reg_1732_pp0_iter2_reg;
                and_ln323_reg_1732_pp0_iter4_reg <= and_ln323_reg_1732_pp0_iter3_reg;
                and_ln323_reg_1732_pp0_iter5_reg <= and_ln323_reg_1732_pp0_iter4_reg;
                and_ln323_reg_1732_pp0_iter6_reg <= and_ln323_reg_1732_pp0_iter5_reg;
                and_ln323_reg_1732_pp0_iter7_reg <= and_ln323_reg_1732_pp0_iter6_reg;
                and_ln323_reg_1732_pp0_iter8_reg <= and_ln323_reg_1732_pp0_iter7_reg;
                and_ln323_reg_1732_pp0_iter9_reg <= and_ln323_reg_1732_pp0_iter8_reg;
                and_ln348_1_reg_1808_pp0_iter10_reg <= and_ln348_1_reg_1808_pp0_iter9_reg;
                and_ln348_1_reg_1808_pp0_iter11_reg <= and_ln348_1_reg_1808_pp0_iter10_reg;
                and_ln348_1_reg_1808_pp0_iter12_reg <= and_ln348_1_reg_1808_pp0_iter11_reg;
                and_ln348_1_reg_1808_pp0_iter13_reg <= and_ln348_1_reg_1808_pp0_iter12_reg;
                and_ln348_1_reg_1808_pp0_iter14_reg <= and_ln348_1_reg_1808_pp0_iter13_reg;
                and_ln348_1_reg_1808_pp0_iter15_reg <= and_ln348_1_reg_1808_pp0_iter14_reg;
                and_ln348_1_reg_1808_pp0_iter16_reg <= and_ln348_1_reg_1808_pp0_iter15_reg;
                and_ln348_1_reg_1808_pp0_iter4_reg <= and_ln348_1_reg_1808;
                and_ln348_1_reg_1808_pp0_iter5_reg <= and_ln348_1_reg_1808_pp0_iter4_reg;
                and_ln348_1_reg_1808_pp0_iter6_reg <= and_ln348_1_reg_1808_pp0_iter5_reg;
                and_ln348_1_reg_1808_pp0_iter7_reg <= and_ln348_1_reg_1808_pp0_iter6_reg;
                and_ln348_1_reg_1808_pp0_iter8_reg <= and_ln348_1_reg_1808_pp0_iter7_reg;
                and_ln348_1_reg_1808_pp0_iter9_reg <= and_ln348_1_reg_1808_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln347_3_reg_1771_pp0_iter10_reg <= icmp_ln347_3_reg_1771_pp0_iter9_reg;
                icmp_ln347_3_reg_1771_pp0_iter11_reg <= icmp_ln347_3_reg_1771_pp0_iter10_reg;
                icmp_ln347_3_reg_1771_pp0_iter12_reg <= icmp_ln347_3_reg_1771_pp0_iter11_reg;
                icmp_ln347_3_reg_1771_pp0_iter13_reg <= icmp_ln347_3_reg_1771_pp0_iter12_reg;
                icmp_ln347_3_reg_1771_pp0_iter14_reg <= icmp_ln347_3_reg_1771_pp0_iter13_reg;
                icmp_ln347_3_reg_1771_pp0_iter15_reg <= icmp_ln347_3_reg_1771_pp0_iter14_reg;
                icmp_ln347_3_reg_1771_pp0_iter2_reg <= icmp_ln347_3_reg_1771;
                icmp_ln347_3_reg_1771_pp0_iter3_reg <= icmp_ln347_3_reg_1771_pp0_iter2_reg;
                icmp_ln347_3_reg_1771_pp0_iter4_reg <= icmp_ln347_3_reg_1771_pp0_iter3_reg;
                icmp_ln347_3_reg_1771_pp0_iter5_reg <= icmp_ln347_3_reg_1771_pp0_iter4_reg;
                icmp_ln347_3_reg_1771_pp0_iter6_reg <= icmp_ln347_3_reg_1771_pp0_iter5_reg;
                icmp_ln347_3_reg_1771_pp0_iter7_reg <= icmp_ln347_3_reg_1771_pp0_iter6_reg;
                icmp_ln347_3_reg_1771_pp0_iter8_reg <= icmp_ln347_3_reg_1771_pp0_iter7_reg;
                icmp_ln347_3_reg_1771_pp0_iter9_reg <= icmp_ln347_3_reg_1771_pp0_iter8_reg;
                icmp_ln347_4_reg_1776_pp0_iter10_reg <= icmp_ln347_4_reg_1776_pp0_iter9_reg;
                icmp_ln347_4_reg_1776_pp0_iter11_reg <= icmp_ln347_4_reg_1776_pp0_iter10_reg;
                icmp_ln347_4_reg_1776_pp0_iter12_reg <= icmp_ln347_4_reg_1776_pp0_iter11_reg;
                icmp_ln347_4_reg_1776_pp0_iter13_reg <= icmp_ln347_4_reg_1776_pp0_iter12_reg;
                icmp_ln347_4_reg_1776_pp0_iter14_reg <= icmp_ln347_4_reg_1776_pp0_iter13_reg;
                icmp_ln347_4_reg_1776_pp0_iter15_reg <= icmp_ln347_4_reg_1776_pp0_iter14_reg;
                icmp_ln347_4_reg_1776_pp0_iter2_reg <= icmp_ln347_4_reg_1776;
                icmp_ln347_4_reg_1776_pp0_iter3_reg <= icmp_ln347_4_reg_1776_pp0_iter2_reg;
                icmp_ln347_4_reg_1776_pp0_iter4_reg <= icmp_ln347_4_reg_1776_pp0_iter3_reg;
                icmp_ln347_4_reg_1776_pp0_iter5_reg <= icmp_ln347_4_reg_1776_pp0_iter4_reg;
                icmp_ln347_4_reg_1776_pp0_iter6_reg <= icmp_ln347_4_reg_1776_pp0_iter5_reg;
                icmp_ln347_4_reg_1776_pp0_iter7_reg <= icmp_ln347_4_reg_1776_pp0_iter6_reg;
                icmp_ln347_4_reg_1776_pp0_iter8_reg <= icmp_ln347_4_reg_1776_pp0_iter7_reg;
                icmp_ln347_4_reg_1776_pp0_iter9_reg <= icmp_ln347_4_reg_1776_pp0_iter8_reg;
                icmp_ln347_5_reg_1736_pp0_iter10_reg <= icmp_ln347_5_reg_1736_pp0_iter9_reg;
                icmp_ln347_5_reg_1736_pp0_iter11_reg <= icmp_ln347_5_reg_1736_pp0_iter10_reg;
                icmp_ln347_5_reg_1736_pp0_iter12_reg <= icmp_ln347_5_reg_1736_pp0_iter11_reg;
                icmp_ln347_5_reg_1736_pp0_iter13_reg <= icmp_ln347_5_reg_1736_pp0_iter12_reg;
                icmp_ln347_5_reg_1736_pp0_iter14_reg <= icmp_ln347_5_reg_1736_pp0_iter13_reg;
                icmp_ln347_5_reg_1736_pp0_iter15_reg <= icmp_ln347_5_reg_1736_pp0_iter14_reg;
                icmp_ln347_5_reg_1736_pp0_iter2_reg <= icmp_ln347_5_reg_1736_pp0_iter1_reg;
                icmp_ln347_5_reg_1736_pp0_iter3_reg <= icmp_ln347_5_reg_1736_pp0_iter2_reg;
                icmp_ln347_5_reg_1736_pp0_iter4_reg <= icmp_ln347_5_reg_1736_pp0_iter3_reg;
                icmp_ln347_5_reg_1736_pp0_iter5_reg <= icmp_ln347_5_reg_1736_pp0_iter4_reg;
                icmp_ln347_5_reg_1736_pp0_iter6_reg <= icmp_ln347_5_reg_1736_pp0_iter5_reg;
                icmp_ln347_5_reg_1736_pp0_iter7_reg <= icmp_ln347_5_reg_1736_pp0_iter6_reg;
                icmp_ln347_5_reg_1736_pp0_iter8_reg <= icmp_ln347_5_reg_1736_pp0_iter7_reg;
                icmp_ln347_5_reg_1736_pp0_iter9_reg <= icmp_ln347_5_reg_1736_pp0_iter8_reg;
                icmp_ln347_reg_1741_pp0_iter10_reg <= icmp_ln347_reg_1741_pp0_iter9_reg;
                icmp_ln347_reg_1741_pp0_iter11_reg <= icmp_ln347_reg_1741_pp0_iter10_reg;
                icmp_ln347_reg_1741_pp0_iter12_reg <= icmp_ln347_reg_1741_pp0_iter11_reg;
                icmp_ln347_reg_1741_pp0_iter13_reg <= icmp_ln347_reg_1741_pp0_iter12_reg;
                icmp_ln347_reg_1741_pp0_iter14_reg <= icmp_ln347_reg_1741_pp0_iter13_reg;
                icmp_ln347_reg_1741_pp0_iter15_reg <= icmp_ln347_reg_1741_pp0_iter14_reg;
                icmp_ln347_reg_1741_pp0_iter2_reg <= icmp_ln347_reg_1741_pp0_iter1_reg;
                icmp_ln347_reg_1741_pp0_iter3_reg <= icmp_ln347_reg_1741_pp0_iter2_reg;
                icmp_ln347_reg_1741_pp0_iter4_reg <= icmp_ln347_reg_1741_pp0_iter3_reg;
                icmp_ln347_reg_1741_pp0_iter5_reg <= icmp_ln347_reg_1741_pp0_iter4_reg;
                icmp_ln347_reg_1741_pp0_iter6_reg <= icmp_ln347_reg_1741_pp0_iter5_reg;
                icmp_ln347_reg_1741_pp0_iter7_reg <= icmp_ln347_reg_1741_pp0_iter6_reg;
                icmp_ln347_reg_1741_pp0_iter8_reg <= icmp_ln347_reg_1741_pp0_iter7_reg;
                icmp_ln347_reg_1741_pp0_iter9_reg <= icmp_ln347_reg_1741_pp0_iter8_reg;
                icmp_ln348_1_reg_1781_pp0_iter2_reg <= icmp_ln348_1_reg_1781;
                icmp_ln348_2_reg_1786_pp0_iter2_reg <= icmp_ln348_2_reg_1786;
                icmp_ln348_3_reg_1746_pp0_iter2_reg <= icmp_ln348_3_reg_1746_pp0_iter1_reg;
                icmp_ln348_reg_1751_pp0_iter2_reg <= icmp_ln348_reg_1751_pp0_iter1_reg;
                iu_reg_1967_pp0_iter12_reg <= iu_reg_1967;
                iv_reg_1901_pp0_iter10_reg <= iv_reg_1901;
                iv_reg_1901_pp0_iter11_reg <= iv_reg_1901_pp0_iter10_reg;
                iv_reg_1901_pp0_iter12_reg <= iv_reg_1901_pp0_iter11_reg;
                result_12_reg_1962_pp0_iter12_reg <= result_12_reg_1962;
                result_12_reg_1962_pp0_iter13_reg <= result_12_reg_1962_pp0_iter12_reg;
                result_12_reg_1962_pp0_iter14_reg <= result_12_reg_1962_pp0_iter13_reg;
                result_12_reg_1962_pp0_iter15_reg <= result_12_reg_1962_pp0_iter14_reg;
                result_12_reg_1962_pp0_iter16_reg <= result_12_reg_1962_pp0_iter15_reg;
                result_reg_1880_pp0_iter10_reg <= result_reg_1880;
                result_reg_1880_pp0_iter11_reg <= result_reg_1880_pp0_iter10_reg;
                result_reg_1880_pp0_iter12_reg <= result_reg_1880_pp0_iter11_reg;
                result_reg_1880_pp0_iter13_reg <= result_reg_1880_pp0_iter12_reg;
                result_reg_1880_pp0_iter14_reg <= result_reg_1880_pp0_iter13_reg;
                result_reg_1880_pp0_iter15_reg <= result_reg_1880_pp0_iter14_reg;
                result_reg_1880_pp0_iter16_reg <= result_reg_1880_pp0_iter15_reg;
                sext_ln335_reg_1896_pp0_iter10_reg <= sext_ln335_reg_1896;
                sext_ln335_reg_1896_pp0_iter11_reg <= sext_ln335_reg_1896_pp0_iter10_reg;
                sext_ln335_reg_1896_pp0_iter12_reg <= sext_ln335_reg_1896_pp0_iter11_reg;
                sext_ln335_reg_1896_pp0_iter13_reg <= sext_ln335_reg_1896_pp0_iter12_reg;
                sext_ln335_reg_1896_pp0_iter14_reg <= sext_ln335_reg_1896_pp0_iter13_reg;
                sext_ln335_reg_1896_pp0_iter15_reg <= sext_ln335_reg_1896_pp0_iter14_reg;
                tmp_4_reg_1803_pp0_iter10_reg <= tmp_4_reg_1803_pp0_iter9_reg;
                tmp_4_reg_1803_pp0_iter11_reg <= tmp_4_reg_1803_pp0_iter10_reg;
                tmp_4_reg_1803_pp0_iter12_reg <= tmp_4_reg_1803_pp0_iter11_reg;
                tmp_4_reg_1803_pp0_iter13_reg <= tmp_4_reg_1803_pp0_iter12_reg;
                tmp_4_reg_1803_pp0_iter14_reg <= tmp_4_reg_1803_pp0_iter13_reg;
                tmp_4_reg_1803_pp0_iter15_reg <= tmp_4_reg_1803_pp0_iter14_reg;
                tmp_4_reg_1803_pp0_iter4_reg <= tmp_4_reg_1803;
                tmp_4_reg_1803_pp0_iter5_reg <= tmp_4_reg_1803_pp0_iter4_reg;
                tmp_4_reg_1803_pp0_iter6_reg <= tmp_4_reg_1803_pp0_iter5_reg;
                tmp_4_reg_1803_pp0_iter7_reg <= tmp_4_reg_1803_pp0_iter6_reg;
                tmp_4_reg_1803_pp0_iter8_reg <= tmp_4_reg_1803_pp0_iter7_reg;
                tmp_4_reg_1803_pp0_iter9_reg <= tmp_4_reg_1803_pp0_iter8_reg;
                tobool438_i_reg_1929_pp0_iter10_reg <= tobool438_i_reg_1929;
                tobool438_i_reg_1929_pp0_iter11_reg <= tobool438_i_reg_1929_pp0_iter10_reg;
                tobool438_i_reg_1929_pp0_iter12_reg <= tobool438_i_reg_1929_pp0_iter11_reg;
                trunc_ln335_1_reg_1890_pp0_iter10_reg <= trunc_ln335_1_reg_1890;
                trunc_ln335_1_reg_1890_pp0_iter11_reg <= trunc_ln335_1_reg_1890_pp0_iter10_reg;
                trunc_ln335_1_reg_1890_pp0_iter12_reg <= trunc_ln335_1_reg_1890_pp0_iter11_reg;
                trunc_ln335_1_reg_1890_pp0_iter13_reg <= trunc_ln335_1_reg_1890_pp0_iter12_reg;
                trunc_ln335_1_reg_1890_pp0_iter14_reg <= trunc_ln335_1_reg_1890_pp0_iter13_reg;
                val_10_reg_1843_pp0_iter8_reg <= val_10_reg_1843;
                val_9_reg_1874_pp0_iter10_reg <= val_9_reg_1874;
                x_fl_reg_1791_pp0_iter3_reg <= x_fl_reg_1791;
                xs_sign_2_reg_1818_pp0_iter7_reg <= xs_sign_2_reg_1818;
                xs_sign_2_reg_1818_pp0_iter8_reg <= xs_sign_2_reg_1818_pp0_iter7_reg;
                xs_sign_reg_1849_pp0_iter10_reg <= xs_sign_reg_1849_pp0_iter9_reg;
                xs_sign_reg_1849_pp0_iter9_reg <= xs_sign_reg_1849;
                y_reg_1885_pp0_iter10_reg <= y_reg_1885;
                y_reg_1885_pp0_iter11_reg <= y_reg_1885_pp0_iter10_reg;
                y_reg_1885_pp0_iter12_reg <= y_reg_1885_pp0_iter11_reg;
                y_reg_1885_pp0_iter13_reg <= y_reg_1885_pp0_iter12_reg;
                y_reg_1885_pp0_iter14_reg <= y_reg_1885_pp0_iter13_reg;
                y_reg_1885_pp0_iter15_reg <= y_reg_1885_pp0_iter14_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter15_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln347_2_reg_2093 <= and_ln347_2_fu_1602_p2;
                icmp_ln347_2_reg_2088 <= icmp_ln347_2_fu_1596_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln348_1_reg_1808 <= and_ln348_1_fu_709_p2;
                tmp_4_reg_1803 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dc_2_reg_1813 <= grp_fu_492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter6_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dc_reg_1838 <= grp_fu_497_p2;
                val_10_reg_1843 <= val_10_fu_830_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter10_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_136_reg_1993 <= empty_136_fu_1334_p2;
                empty_reg_1987 <= empty_fu_1325_p2;
                iu_reg_1967 <= iu_fu_1220_p1;
                result_12_reg_1962 <= result_12_fu_1207_p3;
                select_ln368_1_reg_1981 <= select_ln368_1_fu_1296_p3;
                xa1_reg_1974 <= xa1_fu_1274_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln347_3_reg_1771 <= icmp_ln347_3_fu_641_p2;
                icmp_ln347_4_reg_1776 <= icmp_ln347_4_fu_647_p2;
                icmp_ln348_1_reg_1781 <= icmp_ln348_1_fu_667_p2;
                icmp_ln348_2_reg_1786 <= icmp_ln348_2_fu_673_p2;
                val_6_reg_1766 <= mapyLMat_data_dout;
                val_reg_1761 <= mapxLMat_data_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_fu_572_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln259_fu_528_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln347_5_reg_1736 <= icmp_ln347_5_fu_588_p2;
                icmp_ln347_reg_1741 <= icmp_ln347_fu_594_p2;
                icmp_ln348_3_reg_1746 <= icmp_ln348_3_fu_610_p2;
                icmp_ln348_reg_1751 <= icmp_ln348_fu_616_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter8_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                iv_reg_1901 <= iv_fu_1001_p1;
                result_reg_1880 <= result_fu_964_p3;
                select_ln370_1_reg_1919 <= select_ln370_1_fu_1087_p3;
                select_ln370_reg_1908 <= select_ln370_fu_1057_p3;
                sext_ln335_reg_1896 <= sext_ln335_fu_997_p1;
                tmp_285_reg_1924 <= select_ln370_fu_1057_p3(27 downto 27);
                tobool438_i_reg_1929 <= tobool438_i_fu_1107_p2;
                trunc_ln335_1_reg_1890 <= result_fu_964_p3(11 downto 5);
                trunc_ln370_reg_1913 <= trunc_ln370_fu_1065_p1;
                val_9_reg_1874 <= val_9_fu_957_p3;
                y_reg_1885 <= result_fu_964_p3(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter12_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k01_reg_2033 <= k01_fu_1412_p2;
                k10_reg_2038 <= k10_fu_1428_p2;
                select_ln412_1_reg_2048 <= select_ln412_1_fu_1492_p3;
                select_ln412_2_reg_2053 <= select_ln412_2_fu_1499_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter13_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_ln439_1_reg_2068 <= mul_ln439_1_fu_1530_p2;
                mul_ln439_2_reg_2073 <= mul_ln439_2_fu_1539_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter7_reg) and (xs_sign_2_reg_1818_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                result_10_reg_1869 <= result_10_fu_898_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter9_reg) and (xs_sign_reg_1849_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                result_9_reg_1937 <= result_9_fu_1113_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter5_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln18_2_reg_1833 <= select_ln18_2_fu_768_p3;
                tmp_276_reg_1828 <= add_ln346_1_fu_744_p2(8 downto 8);
                trunc_ln371_2_reg_1823 <= trunc_ln371_2_fu_736_p1;
                xs_sign_2_reg_1818 <= data_2_fu_715_p1(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter7_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln18_reg_1864 <= select_ln18_fu_890_p3;
                tmp_reg_1859 <= add_ln346_fu_866_p2(8 downto 8);
                trunc_ln371_reg_1854 <= trunc_ln371_fu_858_p1;
                xs_sign_reg_1849 <= data_fu_837_p1(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter11_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sub_i_i682_i_reg_2027 <= sub_i_i682_i_fu_1394_p2;
                tobool428_i_reg_2019 <= tobool428_i_fu_1386_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter9_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sub_ln370_5_reg_1952 <= sub_ln370_5_fu_1160_p2;
                tmp_284_reg_1947 <= add_ln370_fu_1124_p2(28 downto 28);
                trunc_ln370_4_reg_1942 <= trunc_ln370_4_fu_1130_p1;
                ya1_reg_1957 <= ya1_fu_1200_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                x_fl_reg_1791 <= x_fl_fu_686_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln314_fu_566_p2 <= std_logic_vector(unsigned(mul_ln314) + unsigned(div235_udiv_i_fu_556_p4));
    add_ln338_1_fu_1545_p2 <= std_logic_vector(unsigned(trunc_ln335_1_reg_1890_pp0_iter14_reg) + unsigned(ap_const_lv7_1));
    add_ln346_1_fu_744_p2 <= std_logic_vector(unsigned(zext_ln346_1_fu_740_p1) + unsigned(ap_const_lv9_181));
    add_ln346_fu_866_p2 <= std_logic_vector(unsigned(zext_ln346_fu_862_p1) + unsigned(ap_const_lv9_181));
    add_ln370_fu_1124_p2 <= std_logic_vector(signed(sext_ln370_1_fu_1118_p1) + signed(sext_ln370_2_fu_1121_p1));
    add_ln439_2_fu_1655_p2 <= std_logic_vector(unsigned(add_ln439_1_reg_2103) + unsigned(add_ln439_reg_2098));
    and_ln270_fu_550_p2 <= (icmp_ln270_fu_544_p2 and cmp111_i);
    and_ln323_fu_572_p2 <= (icmp_ln270_fu_544_p2 and cmp263_i);
    and_ln347_1_fu_1578_p2 <= (tmp_4_reg_1803_pp0_iter15_reg and and_ln347_fu_1572_p2);
    and_ln347_2_fu_1602_p2 <= (icmp_ln347_1_fu_1587_p2 and and_ln347_1_fu_1578_p2);
    and_ln347_3_fu_1634_p2 <= (xor_ln347_fu_1615_p2 and and_ln347_2_reg_2093);
    and_ln347_4_fu_1639_p2 <= (xor_ln348_fu_1628_p2 and icmp_ln347_2_reg_2088);
    and_ln347_5_fu_1644_p2 <= (and_ln348_1_reg_1808_pp0_iter16_reg and and_ln347_4_fu_1639_p2);
    and_ln347_fu_1572_p2 <= (or_ln347_fu_1564_p2 and or_ln347_1_fu_1568_p2);
    and_ln348_1_fu_709_p2 <= (grp_fu_506_p2 and and_ln348_fu_703_p2);
    and_ln348_fu_703_p2 <= (or_ln348_fu_695_p2 and or_ln348_1_fu_699_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter17, imgL_in_data_empty_n, ap_predicate_op80_read_state2, mapxLMat_data_empty_n, and_ln323_reg_1732, mapyLMat_data_empty_n, leftRemappedMat_data_full_n, and_ln323_reg_1732_pp0_iter16_reg)
    begin
                ap_block_pp0_stage0_00001 <= (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter16_reg) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (leftRemappedMat_data_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op80_read_state2 = ap_const_boolean_1) and (imgL_in_data_empty_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln323_reg_1732) and (mapyLMat_data_empty_n = ap_const_logic_0)) or ((mapxLMat_data_empty_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln323_reg_1732)))));
    end process;


    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter17, imgL_in_data_empty_n, ap_predicate_op80_read_state2, mapxLMat_data_empty_n, and_ln323_reg_1732, mapyLMat_data_empty_n, leftRemappedMat_data_full_n, and_ln323_reg_1732_pp0_iter16_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter16_reg) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (leftRemappedMat_data_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op80_read_state2 = ap_const_boolean_1) and (imgL_in_data_empty_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln323_reg_1732) and (mapyLMat_data_empty_n = ap_const_logic_0)) or ((mapxLMat_data_empty_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln323_reg_1732)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter17, imgL_in_data_empty_n, ap_predicate_op80_read_state2, mapxLMat_data_empty_n, and_ln323_reg_1732, mapyLMat_data_empty_n, leftRemappedMat_data_full_n, and_ln323_reg_1732_pp0_iter16_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter16_reg) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (leftRemappedMat_data_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op80_read_state2 = ap_const_boolean_1) and (imgL_in_data_empty_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln323_reg_1732) and (mapyLMat_data_empty_n = ap_const_logic_0)) or ((mapxLMat_data_empty_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln323_reg_1732)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter17, imgL_in_data_empty_n, ap_predicate_op80_read_state2, mapxLMat_data_empty_n, and_ln323_reg_1732, mapyLMat_data_empty_n, leftRemappedMat_data_full_n, and_ln323_reg_1732_pp0_iter16_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter16_reg) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (leftRemappedMat_data_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op80_read_state2 = ap_const_boolean_1) and (imgL_in_data_empty_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln323_reg_1732) and (mapyLMat_data_empty_n = ap_const_logic_0)) or ((mapxLMat_data_empty_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln323_reg_1732)))));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp0_stage0_iter17_assign_proc : process(leftRemappedMat_data_full_n, and_ln323_reg_1732_pp0_iter16_reg)
    begin
                ap_block_state18_pp0_stage0_iter17 <= ((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter16_reg) and (leftRemappedMat_data_full_n = ap_const_logic_0));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(imgL_in_data_empty_n, ap_predicate_op80_read_state2, mapxLMat_data_empty_n, and_ln323_reg_1732, mapyLMat_data_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op80_read_state2 = ap_const_boolean_1) and (imgL_in_data_empty_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln323_reg_1732) and (mapyLMat_data_empty_n = ap_const_logic_0)) or ((mapxLMat_data_empty_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln323_reg_1732)));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_682_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_682 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_684_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_684 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln259_fu_528_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln259_fu_528_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter16_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter16_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_100_assign_proc : process(ap_predicate_op100_store_state3)
    begin
                ap_enable_operation_100 <= (ap_predicate_op100_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_102_assign_proc : process(ap_predicate_op102_store_state3)
    begin
                ap_enable_operation_102 <= (ap_predicate_op102_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_104_assign_proc : process(ap_predicate_op104_store_state3)
    begin
                ap_enable_operation_104 <= (ap_predicate_op104_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_242_assign_proc : process(and_ln323_reg_1732_pp0_iter11_reg)
    begin
                ap_enable_operation_242 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter11_reg);
    end process;


    ap_enable_operation_243_assign_proc : process(and_ln323_reg_1732_pp0_iter11_reg)
    begin
                ap_enable_operation_243 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter11_reg);
    end process;


    ap_enable_operation_244_assign_proc : process(and_ln323_reg_1732_pp0_iter11_reg)
    begin
                ap_enable_operation_244 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter11_reg);
    end process;


    ap_enable_operation_245_assign_proc : process(and_ln323_reg_1732_pp0_iter11_reg)
    begin
                ap_enable_operation_245 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter11_reg);
    end process;


    ap_enable_operation_261_assign_proc : process(and_ln323_reg_1732_pp0_iter12_reg)
    begin
                ap_enable_operation_261 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter12_reg);
    end process;


    ap_enable_operation_262_assign_proc : process(and_ln323_reg_1732_pp0_iter12_reg)
    begin
                ap_enable_operation_262 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter12_reg);
    end process;


    ap_enable_operation_263_assign_proc : process(and_ln323_reg_1732_pp0_iter12_reg)
    begin
                ap_enable_operation_263 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter12_reg);
    end process;


    ap_enable_operation_264_assign_proc : process(and_ln323_reg_1732_pp0_iter12_reg)
    begin
                ap_enable_operation_264 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter12_reg);
    end process;


    ap_enable_operation_288_assign_proc : process(and_ln323_reg_1732_pp0_iter14_reg)
    begin
                ap_enable_operation_288 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter14_reg);
    end process;


    ap_enable_operation_291_assign_proc : process(and_ln323_reg_1732_pp0_iter14_reg)
    begin
                ap_enable_operation_291 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter14_reg);
    end process;


    ap_enable_operation_301_assign_proc : process(and_ln323_reg_1732_pp0_iter15_reg)
    begin
                ap_enable_operation_301 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter15_reg);
    end process;


    ap_enable_operation_304_assign_proc : process(and_ln323_reg_1732_pp0_iter15_reg)
    begin
                ap_enable_operation_304 <= (ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter15_reg);
    end process;


    ap_enable_operation_68_assign_proc : process(icmp_ln259_fu_528_p2)
    begin
                ap_enable_operation_68 <= (icmp_ln259_fu_528_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_69_assign_proc : process(icmp_ln259_fu_528_p2)
    begin
                ap_enable_operation_69 <= (icmp_ln259_fu_528_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_98_assign_proc : process(ap_predicate_op98_store_state3)
    begin
                ap_enable_operation_98 <= (ap_predicate_op98_store_state3 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state13_pp0_iter12_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12)
    begin
                ap_enable_state13_pp0_iter12_stage0 <= ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state14_pp0_iter13_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter13)
    begin
                ap_enable_state14_pp0_iter13_stage0 <= ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state16_pp0_iter15_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15)
    begin
                ap_enable_state16_pp0_iter15_stage0 <= ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state17_pp0_iter16_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter16)
    begin
                ap_enable_state17_pp0_iter16_stage0 <= ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state1_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_start_int)
    begin
                ap_enable_state1_pp0_iter0_stage0 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state3_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state3_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_reg_pp0_iter0_s_reg_477 <= "XXXXXXXX";

    ap_predicate_op100_store_state3_assign_proc : process(trunc_ln, trunc_ln259_reg_1719_pp0_iter1_reg)
    begin
                ap_predicate_op100_store_state3 <= ((trunc_ln259_reg_1719_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln = ap_const_lv1_0));
    end process;


    ap_predicate_op102_store_state3_assign_proc : process(trunc_ln, trunc_ln259_reg_1719_pp0_iter1_reg)
    begin
                ap_predicate_op102_store_state3 <= ((trunc_ln259_reg_1719_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1));
    end process;


    ap_predicate_op104_store_state3_assign_proc : process(trunc_ln, trunc_ln259_reg_1719_pp0_iter1_reg)
    begin
                ap_predicate_op104_store_state3 <= ((trunc_ln259_reg_1719_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln = ap_const_lv1_1));
    end process;


    ap_predicate_op80_read_state2_assign_proc : process(icmp_ln259_reg_1715, and_ln270_reg_1723)
    begin
                ap_predicate_op80_read_state2 <= ((ap_const_lv1_1 = and_ln270_reg_1723) and (icmp_ln259_reg_1715 = ap_const_lv1_0));
    end process;


    ap_predicate_op98_store_state3_assign_proc : process(trunc_ln, trunc_ln259_reg_1719_pp0_iter1_reg)
    begin
                ap_predicate_op98_store_state3 <= ((trunc_ln259_reg_1719_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_204, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_j_5 <= ap_const_lv17_0;
        else 
            ap_sig_allocacmp_j_5 <= j_fu_204;
        end if; 
    end process;

    buf_3_address0 <= zext_ln314_fu_679_p1(15 - 1 downto 0);
    buf_3_address1 <= p_cast6_fu_1362_p1(15 - 1 downto 0);

    buf_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_3_ce0 <= ap_const_logic_1;
        else 
            buf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_3_ce1 <= ap_const_logic_1;
        else 
            buf_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln, ap_block_pp0_stage0_11001, trunc_ln259_reg_1719_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln259_reg_1719_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_3_we0 <= ap_const_logic_1;
        else 
            buf_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_4_address0 <= zext_ln314_fu_679_p1(15 - 1 downto 0);
    buf_4_address1 <= p_cast7_fu_1372_p1(15 - 1 downto 0);

    buf_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_4_ce0 <= ap_const_logic_1;
        else 
            buf_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_4_ce1 <= ap_const_logic_1;
        else 
            buf_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln, ap_block_pp0_stage0_11001, trunc_ln259_reg_1719_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln259_reg_1719_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_4_we0 <= ap_const_logic_1;
        else 
            buf_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_5_address0 <= zext_ln314_fu_679_p1(15 - 1 downto 0);
    buf_5_address1 <= p_cast8_fu_1381_p1(15 - 1 downto 0);

    buf_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_5_ce0 <= ap_const_logic_1;
        else 
            buf_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_5_ce1 <= ap_const_logic_1;
        else 
            buf_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln, ap_block_pp0_stage0_11001, trunc_ln259_reg_1719_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln259_reg_1719_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_5_we0 <= ap_const_logic_1;
        else 
            buf_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_address0 <= zext_ln314_fu_679_p1(15 - 1 downto 0);
    buf_address1 <= p_cast5_fu_1353_p1(15 - 1 downto 0);

    buf_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_ce0 <= ap_const_logic_1;
        else 
            buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_ce1_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_ce1 <= ap_const_logic_1;
        else 
            buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_we0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln, ap_block_pp0_stage0_11001, trunc_ln259_reg_1719_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln259_reg_1719_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_we0 <= ap_const_logic_1;
        else 
            buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cols_cast_i_cast_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cols_cast_i),17));
    d00_fu_1471_p3 <= 
        buf_4_q1 when (tobool428_i_reg_2019(0) = '1') else 
        buf_5_q1;
    d01_fu_1478_p3 <= 
        buf_5_q1 when (tobool428_i_reg_2019(0) = '1') else 
        buf_4_q1;
    d10_6_fu_1457_p3 <= 
        buf_q1 when (tobool428_i_reg_2019(0) = '1') else 
        buf_3_q1;
    d11_8_fu_1464_p3 <= 
        buf_3_q1 when (tobool428_i_reg_2019(0) = '1') else 
        buf_q1;
    d_fu_1659_p4 <= add_ln439_2_fu_1655_p2(17 downto 10);
    data_2_fu_715_p1 <= dc_2_reg_1813;
    data_fu_837_p1 <= dc_reg_1838;
    div235_udiv_i_fu_556_p4 <= ap_sig_allocacmp_j_5(15 downto 1);
    empty_134_fu_1348_p2 <= std_logic_vector(unsigned(empty_reg_1987) + unsigned(xa0_fu_1343_p2));
    empty_135_fu_1358_p2 <= std_logic_vector(unsigned(empty_reg_1987) + unsigned(xa1_reg_1974));
    empty_136_fu_1334_p1 <= ap_const_lv15_191(10 - 1 downto 0);
    empty_137_fu_1367_p2 <= std_logic_vector(unsigned(empty_136_reg_1993) + unsigned(xa0_fu_1343_p2));
    empty_138_fu_1377_p2 <= std_logic_vector(unsigned(empty_136_reg_1993) + unsigned(xa1_reg_1974));
    empty_fu_1325_p1 <= ap_const_lv15_191(10 - 1 downto 0);

    grp_fu_1678_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1678_ce <= ap_const_logic_1;
        else 
            grp_fu_1678_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1678_p0 <= (sub_i_i682_i_reg_2027 & ap_const_lv5_0);
    grp_fu_1678_p2 <= grp_fu_1678_p20(8 - 1 downto 0);
    grp_fu_1678_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln412_fu_1485_p3),18));

    grp_fu_1687_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1687_ce <= ap_const_logic_1;
        else 
            grp_fu_1687_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1687_p0 <= grp_fu_1687_p00(10 - 1 downto 0);
    grp_fu_1687_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_i_i_fu_1440_p2),18));
    grp_fu_1687_p1 <= grp_fu_1687_p10(8 - 1 downto 0);
    grp_fu_1687_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln412_3_fu_1506_p3),18));

    grp_fu_492_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_492_ce <= ap_const_logic_1;
        else 
            grp_fu_492_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_497_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_497_ce <= ap_const_logic_1;
        else 
            grp_fu_497_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_502_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_502_ce <= ap_const_logic_1;
        else 
            grp_fu_502_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_506_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_506_ce <= ap_const_logic_1;
        else 
            grp_fu_506_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_506_p0 <= val_reg_1761;
    icmp_ln259_fu_528_p2 <= "1" when (ap_sig_allocacmp_j_5 = add106_i) else "0";
    icmp_ln270_fu_544_p2 <= "1" when (unsigned(ap_sig_allocacmp_j_5) < unsigned(cols_cast_i_cast_fu_510_p1)) else "0";
    icmp_ln347_1_fu_1587_p2 <= "1" when (r1_load_cast_i_fu_1583_p1 = y_reg_1885_pp0_iter15_reg) else "0";
    icmp_ln347_2_fu_1596_p2 <= "1" when (r2_load_cast_i_fu_1592_p1 = ynext_fu_1559_p2) else "0";
    icmp_ln347_3_fu_641_p2 <= "0" when (tmp_2_fu_627_p4 = ap_const_lv8_FF) else "1";
    icmp_ln347_4_fu_647_p2 <= "1" when (trunc_ln347_fu_637_p1 = ap_const_lv23_0) else "0";
    icmp_ln347_5_fu_588_p2 <= "0" when (tmp_3_fu_578_p4 = ap_const_lv8_FF) else "1";
    icmp_ln347_fu_594_p2 <= "1" when (trunc_ln347_1 = ap_const_lv23_0) else "0";
    icmp_ln348_1_fu_667_p2 <= "0" when (tmp_5_fu_653_p4 = ap_const_lv8_FF) else "1";
    icmp_ln348_2_fu_673_p2 <= "1" when (trunc_ln348_fu_663_p1 = ap_const_lv23_0) else "0";
    icmp_ln348_3_fu_610_p2 <= "0" when (tmp_6_fu_600_p4 = ap_const_lv8_FF) else "1";
    icmp_ln348_fu_616_p2 <= "1" when (trunc_ln348_1 = ap_const_lv23_0) else "0";
    idxprom2582_i_cast_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idxprom2582_i),64));

    imgL_in_data_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, imgL_in_data_empty_n, ap_predicate_op80_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op80_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            imgL_in_data_blk_n <= imgL_in_data_empty_n;
        else 
            imgL_in_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgL_in_data_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op80_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op80_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            imgL_in_data_read <= ap_const_logic_1;
        else 
            imgL_in_data_read <= ap_const_logic_0;
        end if; 
    end process;

    in_range_fu_1649_p2 <= (and_ln347_5_fu_1644_p2 and and_ln347_3_fu_1634_p2);
    iu_cast_i_fu_1409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iu_reg_1967_pp0_iter12_reg),6));
    iu_fu_1220_p1 <= result_12_fu_1207_p3(5 - 1 downto 0);
    iv_cast_i_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iv_reg_1901_pp0_iter11_reg),6));
    iv_fu_1001_p1 <= result_fu_964_p3(5 - 1 downto 0);
    j_6_fu_534_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_5) + unsigned(ap_const_lv17_1));
    k01_fu_1412_p0 <= k01_fu_1412_p00(6 - 1 downto 0);
    k01_fu_1412_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_i_i682_i_reg_2027),11));
    k01_fu_1412_p1 <= k01_fu_1412_p10(5 - 1 downto 0);
    k01_fu_1412_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iu_reg_1967_pp0_iter12_reg),11));
    k10_fu_1428_p0 <= k10_fu_1428_p00(6 - 1 downto 0);
    k10_fu_1428_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_i_i569_i_fu_1418_p2),11));
    k10_fu_1428_p1 <= k10_fu_1428_p10(5 - 1 downto 0);
    k10_fu_1428_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iv_reg_1901_pp0_iter12_reg),11));

    leftRemappedMat_data_blk_n_assign_proc : process(ap_enable_reg_pp0_iter17, leftRemappedMat_data_full_n, and_ln323_reg_1732_pp0_iter16_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter16_reg) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            leftRemappedMat_data_blk_n <= leftRemappedMat_data_full_n;
        else 
            leftRemappedMat_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    leftRemappedMat_data_din <= 
        d_fu_1659_p4 when (in_range_fu_1649_p2(0) = '1') else 
        ap_const_lv8_0;

    leftRemappedMat_data_write_assign_proc : process(ap_enable_reg_pp0_iter17, and_ln323_reg_1732_pp0_iter16_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln323_reg_1732_pp0_iter16_reg) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            leftRemappedMat_data_write <= ap_const_logic_1;
        else 
            leftRemappedMat_data_write <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln18_1_fu_796_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_2_fu_785_p1),to_integer(unsigned('0' & zext_ln18_2_fu_792_p1(31-1 downto 0)))));
    lshr_ln18_fu_923_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_912_p1),to_integer(unsigned('0' & zext_ln18_fu_919_p1(31-1 downto 0)))));
    lshr_ln370_1_fu_1019_p4 <= sub_ln370_fu_1013_p2(27 downto 1);
    mantissa_2_fu_776_p4 <= ((ap_const_lv1_1 & trunc_ln371_2_reg_1823) & ap_const_lv1_0);
    mantissa_fu_903_p4 <= ((ap_const_lv1_1 & trunc_ln371_reg_1854) & ap_const_lv1_0);

    mapxLMat_data_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, mapxLMat_data_empty_n, and_ln323_reg_1732, ap_block_pp0_stage0)
    begin
        if (((ap_const_lv1_1 = and_ln323_reg_1732) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            mapxLMat_data_blk_n <= mapxLMat_data_empty_n;
        else 
            mapxLMat_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mapxLMat_data_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln323_reg_1732, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln323_reg_1732) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mapxLMat_data_read <= ap_const_logic_1;
        else 
            mapxLMat_data_read <= ap_const_logic_0;
        end if; 
    end process;


    mapyLMat_data_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln323_reg_1732, mapyLMat_data_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_lv1_1 = and_ln323_reg_1732) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            mapyLMat_data_blk_n <= mapyLMat_data_empty_n;
        else 
            mapyLMat_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mapyLMat_data_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln323_reg_1732, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln323_reg_1732) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mapyLMat_data_read <= ap_const_logic_1;
        else 
            mapyLMat_data_read <= ap_const_logic_0;
        end if; 
    end process;

    mul_i_i_fu_1440_p0 <= mul_i_i_fu_1440_p00(5 - 1 downto 0);
    mul_i_i_fu_1440_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iv_reg_1901_pp0_iter12_reg),10));
    mul_i_i_fu_1440_p1 <= mul_i_i_fu_1440_p10(5 - 1 downto 0);
    mul_i_i_fu_1440_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iu_reg_1967_pp0_iter12_reg),10));
    mul_ln439_1_fu_1530_p0 <= mul_ln439_1_fu_1530_p00(11 - 1 downto 0);
    mul_ln439_1_fu_1530_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k01_reg_2033),18));
    mul_ln439_1_fu_1530_p1 <= mul_ln439_1_fu_1530_p10(8 - 1 downto 0);
    mul_ln439_1_fu_1530_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln412_1_reg_2048),18));
    mul_ln439_2_fu_1539_p0 <= mul_ln439_2_fu_1539_p00(11 - 1 downto 0);
    mul_ln439_2_fu_1539_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k10_reg_2038),18));
    mul_ln439_2_fu_1539_p1 <= mul_ln439_2_fu_1539_p10(8 - 1 downto 0);
    mul_ln439_2_fu_1539_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln412_2_reg_2053),18));
    or_ln347_1_fu_1568_p2 <= (icmp_ln347_reg_1741_pp0_iter15_reg or icmp_ln347_5_reg_1736_pp0_iter15_reg);
    or_ln347_fu_1564_p2 <= (icmp_ln347_4_reg_1776_pp0_iter15_reg or icmp_ln347_3_reg_1771_pp0_iter15_reg);
    or_ln348_1_fu_699_p2 <= (icmp_ln348_reg_1751_pp0_iter2_reg or icmp_ln348_3_reg_1746_pp0_iter2_reg);
    or_ln348_fu_695_p2 <= (icmp_ln348_2_reg_1786_pp0_iter2_reg or icmp_ln348_1_reg_1781_pp0_iter2_reg);
    p_and_f3_fu_1304_p3 <= (ap_const_lv1_0 & trunc_ln370_4_reg_1942);
    p_and_f9_fu_1069_p3 <= (ap_const_lv1_0 & tmp_279_fu_979_p3);
    p_and_f_fu_1166_p3 <= (ap_const_lv1_0 & trunc_ln370_reg_1913);
    p_and_t1_fu_1282_p3 <= (ap_const_lv1_0 & tmp_278_fu_1212_p3);
    p_and_t5_fu_1148_p3 <= (ap_const_lv1_0 & sub_ln370_4_fu_1142_p2);
    p_and_t_fu_1182_p3 <= (ap_const_lv1_0 & sub_ln371_fu_1177_p2);
    p_cast5_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_134_fu_1348_p2),64));
    p_cast6_fu_1362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_135_fu_1358_p2),64));
    p_cast7_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_137_fu_1367_p2),64));
    p_cast8_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_138_fu_1377_p2),64));
    r1_address0 <= idxprom2582_i_cast_fu_514_p1(7 - 1 downto 0);
    r1_address1 <= zext_ln347_fu_1550_p1(7 - 1 downto 0);

    r1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            r1_ce0 <= ap_const_logic_1;
        else 
            r1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r1_ce1_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            r1_ce1 <= ap_const_logic_1;
        else 
            r1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    r1_d0 <= i;
    r1_load_cast_i_fu_1583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r1_q1),27));

    r1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln259_fu_528_p2, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln259_fu_528_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            r1_we0 <= ap_const_logic_1;
        else 
            r1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    r2_address0 <= idxprom2582_i_cast_fu_514_p1(7 - 1 downto 0);
    r2_address1 <= zext_ln347_1_fu_1554_p1(7 - 1 downto 0);

    r2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            r2_ce0 <= ap_const_logic_1;
        else 
            r2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r2_ce1_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            r2_ce1 <= ap_const_logic_1;
        else 
            r2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    r2_d0 <= i;
    r2_load_cast_i_fu_1592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r2_q1),28));

    r2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln259_fu_528_p2, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln259_fu_528_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            r2_we0 <= ap_const_logic_1;
        else 
            r2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    result_10_fu_898_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_10_reg_1843));
    result_12_fu_1207_p3 <= 
        result_9_reg_1937 when (xs_sign_reg_1849_pp0_iter10_reg(0) = '1') else 
        val_9_reg_1874_pp0_iter10_reg;
    result_9_fu_1113_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_9_reg_1874));
    result_fu_964_p3 <= 
        result_10_reg_1869 when (xs_sign_2_reg_1818_pp0_iter8_reg(0) = '1') else 
        val_10_reg_1843_pp0_iter8_reg;
    select_ln18_2_fu_768_p3 <= 
        sext_ln18_2_fu_764_p1 when (tmp_276_fu_750_p3(0) = '1') else 
        add_ln346_1_fu_744_p2;
    select_ln18_fu_890_p3 <= 
        sext_ln18_fu_886_p1 when (tmp_fu_872_p3(0) = '1') else 
        add_ln346_fu_866_p2;
    select_ln368_1_fu_1296_p3 <= 
        sub_ln368_3_fu_1290_p2 when (tmp_282_fu_1234_p3(0) = '1') else 
        p_and_t1_fu_1282_p3;
    select_ln370_1_fu_1087_p3 <= 
        sub_ln370_3_fu_1081_p2 when (tmp_283_fu_1005_p3(0) = '1') else 
        zext_ln370_5_fu_1077_p1;
    select_ln370_fu_1057_p3 <= 
        sub_ln370_1_fu_1033_p2 when (tmp_283_fu_1005_p3(0) = '1') else 
        zext_ln370_fu_1053_p1;
    select_ln412_1_fu_1492_p3 <= 
        d11_8_fu_1464_p3 when (tobool438_i_reg_1929_pp0_iter12_reg(0) = '1') else 
        d01_fu_1478_p3;
    select_ln412_2_fu_1499_p3 <= 
        d00_fu_1471_p3 when (tobool438_i_reg_1929_pp0_iter12_reg(0) = '1') else 
        d10_6_fu_1457_p3;
    select_ln412_3_fu_1506_p3 <= 
        d01_fu_1478_p3 when (tobool438_i_reg_1929_pp0_iter12_reg(0) = '1') else 
        d11_8_fu_1464_p3;
    select_ln412_fu_1485_p3 <= 
        d10_6_fu_1457_p3 when (tobool438_i_reg_1929_pp0_iter12_reg(0) = '1') else 
        d00_fu_1471_p3;
        sext_ln18_2_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_1_fu_758_p2),9));

        sext_ln18_4_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_reg_1864),32));

        sext_ln18_5_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_2_reg_1833),32));

        sext_ln18_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_fu_880_p2),9));

        sext_ln335_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_fu_969_p4),28));

        sext_ln368_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln368_1_reg_1981),15));

        sext_ln370_1_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln370_reg_1908),29));

        sext_ln370_2_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln370_1_reg_1919),29));

        sext_ln370_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln370_1_fu_1039_p4),27));

    shl_ln18_1_fu_802_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_2_fu_785_p1),to_integer(unsigned('0' & zext_ln18_2_fu_792_p1(31-1 downto 0)))));
    shl_ln18_fu_929_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_912_p1),to_integer(unsigned('0' & zext_ln18_fu_919_p1(31-1 downto 0)))));
    sub_i_i569_i_fu_1418_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(iu_cast_i_fu_1409_p1));
    sub_i_i682_i_fu_1394_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(iv_cast_i_fu_1391_p1));
    sub_ln18_1_fu_758_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_2_fu_726_p4));
    sub_ln18_fu_880_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_fu_848_p4));
    sub_ln368_1_fu_1258_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(trunc_ln368_2_fu_1248_p4));
    sub_ln368_3_fu_1290_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(p_and_t1_fu_1282_p3));
    sub_ln368_fu_1242_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln5_fu_1224_p4));
    sub_ln370_1_fu_1033_p2 <= std_logic_vector(unsigned(ap_const_lv28_0) - unsigned(zext_ln370_1_fu_1029_p1));
    sub_ln370_3_fu_1081_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(zext_ln370_5_fu_1077_p1));
    sub_ln370_4_fu_1142_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(trunc_ln370_4_fu_1130_p1));
    sub_ln370_5_fu_1160_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(zext_ln370_7_fu_1156_p1));
    sub_ln370_fu_1013_p2 <= std_logic_vector(unsigned(ap_const_lv28_0) - unsigned(sext_ln335_fu_997_p1));
    sub_ln371_1_fu_1194_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(zext_ln371_2_fu_1190_p1));
    sub_ln371_fu_1177_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(trunc_ln370_reg_1913));
    tmp_274_fu_935_p3 <= lshr_ln18_fu_923_p2(24 downto 24);
    tmp_276_fu_750_p3 <= add_ln346_1_fu_744_p2(8 downto 8);
    tmp_277_fu_808_p3 <= lshr_ln18_1_fu_796_p2(24 downto 24);
    tmp_278_fu_1212_p3 <= result_12_fu_1207_p3(5 downto 5);
    tmp_279_fu_979_p3 <= result_fu_964_p3(5 downto 5);
    tmp_280_fu_1608_p3 <= result_reg_1880_pp0_iter16_reg(31 downto 31);
    tmp_281_fu_1621_p3 <= result_12_reg_1962_pp0_iter16_reg(31 downto 31);
    tmp_282_fu_1234_p3 <= result_12_fu_1207_p3(31 downto 31);
    tmp_283_fu_1005_p3 <= result_fu_964_p3(31 downto 31);
    tmp_2_fu_627_p4 <= mapyLMat_data_dout(30 downto 23);
    tmp_3_fu_578_p4 <= bitcast_ln347(30 downto 23);
    tmp_5_fu_653_p4 <= mapxLMat_data_dout(30 downto 23);
    tmp_6_fu_600_p4 <= bitcast_ln348(30 downto 23);
    tmp_8_fu_820_p4 <= shl_ln18_1_fu_802_p2(55 downto 24);
    tmp_fu_872_p3 <= add_ln346_fu_866_p2(8 downto 8);
    tmp_s_fu_947_p4 <= shl_ln18_fu_929_p2(55 downto 24);
    tobool428_i_fu_1386_p2 <= "1" when (select_ln368_1_reg_1981 = ap_const_lv2_0) else "0";
    tobool438_i_fu_1107_p2 <= "1" when (trunc_ln370_3_fu_1095_p1 = ap_const_lv2_0) else "0";
    trunc_ln259_fu_540_p1 <= ap_sig_allocacmp_j_5(1 - 1 downto 0);
    trunc_ln347_fu_637_p1 <= mapyLMat_data_dout(23 - 1 downto 0);
    trunc_ln348_fu_663_p1 <= mapxLMat_data_dout(23 - 1 downto 0);
    trunc_ln368_2_fu_1248_p4 <= sub_ln368_fu_1242_p2(15 downto 1);
    trunc_ln368_3_fu_1264_p4 <= result_12_fu_1207_p3(20 downto 6);
    trunc_ln370_1_fu_1039_p4 <= result_fu_964_p3(31 downto 6);
    trunc_ln370_3_fu_1095_p1 <= select_ln370_1_fu_1087_p3(2 - 1 downto 0);
    trunc_ln370_4_fu_1130_p1 <= add_ln370_fu_1124_p2(6 - 1 downto 0);
    trunc_ln370_fu_1065_p1 <= select_ln370_fu_1057_p3(6 - 1 downto 0);
    trunc_ln371_2_fu_736_p1 <= data_2_fu_715_p1(23 - 1 downto 0);
    trunc_ln371_fu_858_p1 <= data_fu_837_p1(23 - 1 downto 0);
    trunc_ln5_fu_1224_p4 <= result_12_fu_1207_p3(20 downto 5);
    val_10_fu_830_p3 <= 
        zext_ln21_1_fu_816_p1 when (tmp_276_reg_1828(0) = '1') else 
        tmp_8_fu_820_p4;
    val_9_fu_957_p3 <= 
        zext_ln21_fu_943_p1 when (tmp_reg_1859(0) = '1') else 
        tmp_s_fu_947_p4;
    x_fl_fu_686_p1 <= val_reg_1761;
    xa0_fu_1343_p2 <= std_logic_vector(unsigned(xa1_reg_1974) + unsigned(sext_ln368_fu_1340_p1));
    xa1_fu_1274_p3 <= 
        sub_ln368_1_fu_1258_p2 when (tmp_282_fu_1234_p3(0) = '1') else 
        trunc_ln368_3_fu_1264_p4;
    xor_ln347_fu_1615_p2 <= (tmp_280_fu_1608_p3 xor ap_const_lv1_1);
    xor_ln348_fu_1628_p2 <= (tmp_281_fu_1621_p3 xor ap_const_lv1_1);
    xs_exp_2_fu_726_p4 <= data_2_fu_715_p1(30 downto 23);
    xs_exp_fu_848_p4 <= data_fu_837_p1(30 downto 23);
    y_fl_fu_690_p1 <= val_6_reg_1766;
    y_fu_969_p4 <= result_fu_964_p3(31 downto 5);
    ya0_fu_1315_p3 <= 
        sub_ln370_5_reg_1952 when (tmp_284_reg_1947(0) = '1') else 
        zext_ln370_6_fu_1311_p1;
    ya1_fu_1200_p3 <= 
        sub_ln371_1_fu_1194_p2 when (tmp_285_reg_1924(0) = '1') else 
        zext_ln371_fu_1173_p1;
    ynext_fu_1559_p2 <= std_logic_vector(signed(sext_ln335_reg_1896_pp0_iter15_reg) + signed(ap_const_lv28_1));
    zext_ln15_2_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_2_fu_776_p4),79));
    zext_ln15_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_903_p4),79));
    zext_ln18_2_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_5_fu_789_p1),79));
    zext_ln18_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_4_fu_916_p1),79));
    zext_ln21_1_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_277_fu_808_p3),32));
    zext_ln21_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_274_fu_935_p3),32));
    zext_ln314_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln314_reg_1727_pp0_iter1_reg),64));
    zext_ln346_1_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_2_fu_726_p4),9));
    zext_ln346_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_fu_848_p4),9));
    zext_ln347_1_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln338_1_fu_1545_p2),64));
    zext_ln347_fu_1550_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln335_1_reg_1890_pp0_iter14_reg),64));
    zext_ln370_1_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln370_1_fu_1019_p4),28));
    zext_ln370_5_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_and_f9_fu_1069_p3),3));
    zext_ln370_6_fu_1311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_and_f3_fu_1304_p3),8));
    zext_ln370_7_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_and_t5_fu_1148_p3),8));
    zext_ln370_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln370_fu_1049_p1),28));
    zext_ln371_2_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_and_t_fu_1182_p3),8));
    zext_ln371_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_and_f_fu_1166_p3),8));
end behav;
