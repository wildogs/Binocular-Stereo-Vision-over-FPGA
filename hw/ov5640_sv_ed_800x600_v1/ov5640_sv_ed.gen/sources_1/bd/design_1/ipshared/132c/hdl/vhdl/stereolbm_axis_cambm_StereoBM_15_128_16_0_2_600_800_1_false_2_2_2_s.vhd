-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stereolbm_axis_cambm_StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    leftRemappedMat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    leftRemappedMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    leftRemappedMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    leftRemappedMat_data_empty_n : IN STD_LOGIC;
    leftRemappedMat_data_read : OUT STD_LOGIC;
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    rightRemappedMat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    rightRemappedMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    rightRemappedMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    rightRemappedMat_data_empty_n : IN STD_LOGIC;
    rightRemappedMat_data_read : OUT STD_LOGIC;
    img_disp16u_data_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_disp16u_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_disp16u_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_disp16u_data_full_n : IN STD_LOGIC;
    img_disp16u_data_write : OUT STD_LOGIC;
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of stereolbm_axis_cambm_StereoBM_15_128_16_0_2_600_800_1_false_2_2_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal empty_fu_98_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_reg_135 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_311_fu_103_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_311_reg_140 : STD_LOGIC_VECTOR (15 downto 0);
    signal width_fu_108_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal width_reg_145 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_fu_114_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_reg_151 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindStereoCorrespondenceLBMNO_fu_76_leftRemappedMat_data_read : STD_LOGIC;
    signal grp_xFFindStereoCorrespondenceLBMNO_fu_76_rightRemappedMat_data_read : STD_LOGIC;
    signal grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_din : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_write : STD_LOGIC;
    signal grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start : STD_LOGIC;
    signal grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done : STD_LOGIC;
    signal grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready : STD_LOGIC;
    signal grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_idle : STD_LOGIC;
    signal grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_continue : STD_LOGIC;
    signal grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call14 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready : STD_LOGIC;
    signal ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component stereolbm_axis_cambm_xFFindStereoCorrespondenceLBMNO IS
    port (
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        leftRemappedMat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        leftRemappedMat_data_empty_n : IN STD_LOGIC;
        leftRemappedMat_data_read : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
        rightRemappedMat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        rightRemappedMat_data_empty_n : IN STD_LOGIC;
        rightRemappedMat_data_read : OUT STD_LOGIC;
        img_disp16u_data_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_disp16u_data_full_n : IN STD_LOGIC;
        img_disp16u_data_write : OUT STD_LOGIC;
        p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
        height : IN STD_LOGIC_VECTOR (15 downto 0);
        width : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_read4_ap_vld : IN STD_LOGIC;
        p_read5_ap_vld : IN STD_LOGIC;
        p_read6_ap_vld : IN STD_LOGIC;
        height_ap_vld : IN STD_LOGIC;
        width_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        p_read_ap_vld : IN STD_LOGIC;
        p_read1_ap_vld : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        p_read2_ap_vld : IN STD_LOGIC;
        p_read3_ap_vld : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    grp_xFFindStereoCorrespondenceLBMNO_fu_76 : component stereolbm_axis_cambm_xFFindStereoCorrespondenceLBMNO
    port map (
        p_read => height_reg_151,
        p_read1 => width_reg_145,
        leftRemappedMat_data_dout => leftRemappedMat_data_dout,
        leftRemappedMat_data_empty_n => leftRemappedMat_data_empty_n,
        leftRemappedMat_data_read => grp_xFFindStereoCorrespondenceLBMNO_fu_76_leftRemappedMat_data_read,
        p_read2 => empty_311_reg_140,
        p_read3 => empty_reg_135,
        rightRemappedMat_data_dout => rightRemappedMat_data_dout,
        rightRemappedMat_data_empty_n => rightRemappedMat_data_empty_n,
        rightRemappedMat_data_read => grp_xFFindStereoCorrespondenceLBMNO_fu_76_rightRemappedMat_data_read,
        img_disp16u_data_din => grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_din,
        img_disp16u_data_full_n => img_disp16u_data_full_n,
        img_disp16u_data_write => grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_write,
        p_read4 => p_read4,
        p_read5 => p_read5,
        p_read6 => p_read6,
        height => height_reg_151,
        width => width_reg_145,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_read4_ap_vld => ap_const_logic_1,
        p_read5_ap_vld => ap_const_logic_1,
        p_read6_ap_vld => ap_const_logic_1,
        height_ap_vld => ap_const_logic_1,
        width_ap_vld => ap_const_logic_1,
        ap_start => grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start,
        p_read_ap_vld => ap_const_logic_1,
        p_read1_ap_vld => ap_const_logic_1,
        ap_done => grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done,
        p_read2_ap_vld => ap_const_logic_1,
        p_read3_ap_vld => ap_const_logic_1,
        ap_ready => grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready,
        ap_idle => grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_idle,
        ap_continue => grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
                    ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done <= ap_const_logic_0;
                elsif ((grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
                    ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready <= ap_const_logic_0;
                elsif ((grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg <= ap_const_logic_0;
            else
                if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready = ap_const_logic_0)))) then 
                    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready = ap_const_logic_1)) then 
                    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                empty_311_reg_140 <= empty_311_fu_103_p1;
                empty_reg_135 <= empty_fu_98_p1;
                height_reg_151 <= height_fu_114_p1;
                width_reg_145 <= width_fu_108_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call14_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call14 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready, ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready and ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done) = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done <= (grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done or ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_done);
    ap_sync_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready <= (grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready or ap_sync_reg_grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_ready);
    empty_311_fu_103_p1 <= p_read2(16 - 1 downto 0);
    empty_fu_98_p1 <= p_read3(16 - 1 downto 0);

    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_continue_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
            grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_continue <= ap_const_logic_1;
        else 
            grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start <= grp_xFFindStereoCorrespondenceLBMNO_fu_76_ap_start_reg;
    height_fu_114_p1 <= p_read(16 - 1 downto 0);
    img_disp16u_data_din <= grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_din;

    img_disp16u_data_write_assign_proc : process(grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_disp16u_data_write <= grp_xFFindStereoCorrespondenceLBMNO_fu_76_img_disp16u_data_write;
        else 
            img_disp16u_data_write <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    leftRemappedMat_data_read_assign_proc : process(grp_xFFindStereoCorrespondenceLBMNO_fu_76_leftRemappedMat_data_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            leftRemappedMat_data_read <= grp_xFFindStereoCorrespondenceLBMNO_fu_76_leftRemappedMat_data_read;
        else 
            leftRemappedMat_data_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    rightRemappedMat_data_read_assign_proc : process(grp_xFFindStereoCorrespondenceLBMNO_fu_76_rightRemappedMat_data_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rightRemappedMat_data_read <= grp_xFFindStereoCorrespondenceLBMNO_fu_76_rightRemappedMat_data_read;
        else 
            rightRemappedMat_data_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    width_fu_108_p1 <= p_read1(16 - 1 downto 0);
end behav;
