-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    imgL_in_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    imgL_in_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    imgL_in_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    imgL_in_data_empty_n : IN STD_LOGIC;
    imgL_in_data_read : OUT STD_LOGIC;
    leftRemappedMat_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    leftRemappedMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    leftRemappedMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    leftRemappedMat_data_full_n : IN STD_LOGIC;
    leftRemappedMat_data_write : OUT STD_LOGIC;
    mapxLMat_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mapxLMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    mapxLMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    mapxLMat_data_empty_n : IN STD_LOGIC;
    mapxLMat_data_read : OUT STD_LOGIC;
    mapyLMat_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mapyLMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    mapyLMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    mapyLMat_data_empty_n : IN STD_LOGIC;
    mapyLMat_data_read : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv17_40 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv15_191 : STD_LOGIC_VECTOR (14 downto 0) := "000000110010001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal rows_cast_i_fu_138_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rows_cast_i_reg_285 : STD_LOGIC_VECTOR (16 downto 0);
    signal cols_cast_i_fu_142_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal cols_cast_i_reg_291 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub284_i_fu_146_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub284_i_reg_296 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub300_i_fu_152_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub300_i_reg_301 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_done : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal add_i_fu_171_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_i_reg_316 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add106_i_fu_176_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add106_i_reg_321 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_132_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_i_reg_326 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_135_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_i_reg_331 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln347_fu_185_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln347_reg_336 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln347_1_fu_189_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln347_1_reg_341 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln348_fu_197_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln348_reg_346 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln348_1_fu_201_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln348_1_reg_351 : STD_LOGIC_VECTOR (22 downto 0);
    signal i_3_reg_356 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal trunc_ln249_fu_208_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln249_reg_362 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln249_1_fu_212_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln249_1_reg_367 : STD_LOGIC_VECTOR (6 downto 0);
    signal cmp111_i_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp111_i_reg_375 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln249_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln314_fu_246_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln314_reg_380 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_385 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal r1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r1_ce0 : STD_LOGIC;
    signal r1_we0 : STD_LOGIC;
    signal r1_d0 : STD_LOGIC_VECTOR (16 downto 0);
    signal r1_ce1 : STD_LOGIC;
    signal r1_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r2_ce0 : STD_LOGIC;
    signal r2_we0 : STD_LOGIC;
    signal r2_d0 : STD_LOGIC_VECTOR (16 downto 0);
    signal r2_ce1 : STD_LOGIC;
    signal r2_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_start : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_idle : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_ready : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_ce0 : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_we0 : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_d0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_start : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_idle : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_ready : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_ce0 : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_we0 : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_d0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_start : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_done : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_idle : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_ready : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_imgL_in_data_read : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_mapxLMat_data_read : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_mapyLMat_data_read : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_leftRemappedMat_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_leftRemappedMat_data_write : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_ce0 : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_we0 : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_d0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_ce1 : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_ce0 : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_we0 : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_d0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_ce1 : STD_LOGIC;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call9 : BOOLEAN;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call10 : BOOLEAN;
    signal grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal i_fu_68 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_4_fu_221_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_132_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_135_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln347_fu_181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln348_fu_193_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal div228_i_fu_232_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln314_fu_246_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln314_fu_246_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_257_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_132_ce : STD_LOGIC;
    signal grp_fu_135_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal mul_ln314_fu_246_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        r1_ce0 : OUT STD_LOGIC;
        r1_we0 : OUT STD_LOGIC;
        r1_d0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        r2_ce0 : OUT STD_LOGIC;
        r2_we0 : OUT STD_LOGIC;
        r2_d0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        imgL_in_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imgL_in_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgL_in_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgL_in_data_empty_n : IN STD_LOGIC;
        imgL_in_data_read : OUT STD_LOGIC;
        mapxLMat_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapxLMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        mapxLMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        mapxLMat_data_empty_n : IN STD_LOGIC;
        mapxLMat_data_read : OUT STD_LOGIC;
        mapyLMat_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapyLMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        mapyLMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        mapyLMat_data_empty_n : IN STD_LOGIC;
        mapyLMat_data_read : OUT STD_LOGIC;
        leftRemappedMat_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        leftRemappedMat_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        leftRemappedMat_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        leftRemappedMat_data_full_n : IN STD_LOGIC;
        leftRemappedMat_data_write : OUT STD_LOGIC;
        r2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        r2_ce0 : OUT STD_LOGIC;
        r2_we0 : OUT STD_LOGIC;
        r2_d0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        r2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        r2_ce1 : OUT STD_LOGIC;
        r2_q1 : IN STD_LOGIC_VECTOR (16 downto 0);
        idxprom2582_i : IN STD_LOGIC_VECTOR (6 downto 0);
        r1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        r1_ce0 : OUT STD_LOGIC;
        r1_we0 : OUT STD_LOGIC;
        r1_d0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        r1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        r1_ce1 : OUT STD_LOGIC;
        r1_q1 : IN STD_LOGIC_VECTOR (16 downto 0);
        add106_i : IN STD_LOGIC_VECTOR (16 downto 0);
        i : IN STD_LOGIC_VECTOR (16 downto 0);
        cmp263_i : IN STD_LOGIC_VECTOR (0 downto 0);
        mul_ln314 : IN STD_LOGIC_VECTOR (14 downto 0);
        trunc_ln : IN STD_LOGIC_VECTOR (0 downto 0);
        cols_cast_i : IN STD_LOGIC_VECTOR (15 downto 0);
        cmp111_i : IN STD_LOGIC_VECTOR (0 downto 0);
        bitcast_ln347 : IN STD_LOGIC_VECTOR (30 downto 0);
        trunc_ln347_1 : IN STD_LOGIC_VECTOR (22 downto 0);
        conv1_i : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln348 : IN STD_LOGIC_VECTOR (30 downto 0);
        trunc_ln348_1 : IN STD_LOGIC_VECTOR (22 downto 0);
        conv2_i : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component stereolbm_axis_cambm_sitofp_32s_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component stereolbm_axis_cambm_mul_6ns_10ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_r1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;



begin
    r1_U : component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_r1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 17,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => r1_address0,
        ce0 => r1_ce0,
        we0 => r1_we0,
        d0 => r1_d0,
        address1 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_address1,
        ce1 => r1_ce1,
        q1 => r1_q1);

    r2_U : component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_r1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 17,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => r2_address0,
        ce0 => r2_ce0,
        we0 => r2_we0,
        d0 => r2_d0,
        address1 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_address1,
        ce1 => r2_ce1,
        q1 => r2_q1);

    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92 : component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_start,
        ap_done => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_done,
        ap_idle => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_idle,
        ap_ready => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_ready,
        r1_address0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_address0,
        r1_ce0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_ce0,
        r1_we0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_we0,
        r1_d0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_d0);

    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98 : component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_start,
        ap_done => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_done,
        ap_idle => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_idle,
        ap_ready => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_ready,
        r2_address0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_address0,
        r2_ce0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_ce0,
        r2_we0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_we0,
        r2_d0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_d0);

    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104 : component stereolbm_axis_cambm_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_start,
        ap_done => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_done,
        ap_idle => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_idle,
        ap_ready => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_ready,
        imgL_in_data_dout => imgL_in_data_dout,
        imgL_in_data_num_data_valid => ap_const_lv2_0,
        imgL_in_data_fifo_cap => ap_const_lv2_0,
        imgL_in_data_empty_n => imgL_in_data_empty_n,
        imgL_in_data_read => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_imgL_in_data_read,
        mapxLMat_data_dout => mapxLMat_data_dout,
        mapxLMat_data_num_data_valid => ap_const_lv2_0,
        mapxLMat_data_fifo_cap => ap_const_lv2_0,
        mapxLMat_data_empty_n => mapxLMat_data_empty_n,
        mapxLMat_data_read => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_mapxLMat_data_read,
        mapyLMat_data_dout => mapyLMat_data_dout,
        mapyLMat_data_num_data_valid => ap_const_lv2_0,
        mapyLMat_data_fifo_cap => ap_const_lv2_0,
        mapyLMat_data_empty_n => mapyLMat_data_empty_n,
        mapyLMat_data_read => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_mapyLMat_data_read,
        leftRemappedMat_data_din => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_leftRemappedMat_data_din,
        leftRemappedMat_data_num_data_valid => ap_const_lv2_0,
        leftRemappedMat_data_fifo_cap => ap_const_lv2_0,
        leftRemappedMat_data_full_n => leftRemappedMat_data_full_n,
        leftRemappedMat_data_write => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_leftRemappedMat_data_write,
        r2_address0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_address0,
        r2_ce0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_ce0,
        r2_we0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_we0,
        r2_d0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_d0,
        r2_address1 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_address1,
        r2_ce1 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_ce1,
        r2_q1 => r2_q1,
        idxprom2582_i => trunc_ln249_1_reg_367,
        r1_address0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_address0,
        r1_ce0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_ce0,
        r1_we0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_we0,
        r1_d0 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_d0,
        r1_address1 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_address1,
        r1_ce1 => grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_ce1,
        r1_q1 => r1_q1,
        add106_i => add106_i_reg_321,
        i => i_3_reg_356,
        cmp263_i => icmp_reg_385,
        mul_ln314 => mul_ln314_reg_380,
        trunc_ln => trunc_ln249_reg_362,
        cols_cast_i => p_read1,
        cmp111_i => cmp111_i_reg_375,
        bitcast_ln347 => trunc_ln347_reg_336,
        trunc_ln347_1 => trunc_ln347_1_reg_341,
        conv1_i => conv1_i_reg_326,
        bitcast_ln348 => trunc_ln348_reg_346,
        trunc_ln348_1 => trunc_ln348_1_reg_351,
        conv2_i => conv2_i_reg_331);

    sitofp_32s_32_6_no_dsp_1_U265 : component stereolbm_axis_cambm_sitofp_32s_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_132_p0,
        ce => grp_fu_132_ce,
        dout => grp_fu_132_p1);

    sitofp_32s_32_6_no_dsp_1_U266 : component stereolbm_axis_cambm_sitofp_32s_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_135_p0,
        ce => grp_fu_135_ce,
        dout => grp_fu_135_p1);

    mul_6ns_10ns_15_1_1_U267 : component stereolbm_axis_cambm_mul_6ns_10ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 10,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln314_fu_246_p0,
        din1 => mul_ln314_fu_246_p1,
        dout => mul_ln314_fu_246_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln249_fu_216_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_ready = ap_const_logic_1)) then 
                    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_ready = ap_const_logic_1)) then 
                    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_ready = ap_const_logic_1)) then 
                    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_68 <= ap_const_lv17_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln249_fu_216_p2 = ap_const_lv1_0))) then 
                i_fu_68 <= i_4_fu_221_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add106_i_reg_321 <= add106_i_fu_176_p2;
                add_i_reg_316 <= add_i_fu_171_p2;
                conv1_i_reg_326 <= grp_fu_132_p1;
                conv2_i_reg_331 <= grp_fu_135_p1;
                trunc_ln347_1_reg_341 <= trunc_ln347_1_fu_189_p1;
                trunc_ln347_reg_336 <= trunc_ln347_fu_185_p1;
                trunc_ln348_1_reg_351 <= trunc_ln348_1_fu_201_p1;
                trunc_ln348_reg_346 <= trunc_ln348_fu_197_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln249_fu_216_p2 = ap_const_lv1_0))) then
                cmp111_i_reg_375 <= cmp111_i_fu_227_p2;
                mul_ln314_reg_380 <= mul_ln314_fu_246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    cols_cast_i_reg_291(15 downto 0) <= cols_cast_i_fu_142_p1(15 downto 0);
                    rows_cast_i_reg_285(15 downto 0) <= rows_cast_i_fu_138_p1(15 downto 0);
                sub284_i_reg_296 <= sub284_i_fu_146_p2;
                sub300_i_reg_301 <= sub300_i_fu_152_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i_3_reg_356 <= i_fu_68;
                trunc_ln249_1_reg_367 <= trunc_ln249_1_fu_212_p1;
                trunc_ln249_reg_362 <= trunc_ln249_fu_208_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_reg_385 <= icmp_fu_266_p2;
            end if;
        end if;
    end process;
    rows_cast_i_reg_285(16) <= '0';
    cols_cast_i_reg_291(16) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_CS_fsm_state8, icmp_ln249_fu_216_p2, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_done, ap_CS_fsm_state10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln249_fu_216_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add106_i_fu_176_p2 <= std_logic_vector(unsigned(cols_cast_i_reg_291) + unsigned(ap_const_lv17_1));
    add_i_fu_171_p2 <= std_logic_vector(unsigned(rows_cast_i_reg_285) + unsigned(ap_const_lv17_40));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_done)
    begin
        if ((grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call10_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call10 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call9_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call9 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_done, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_done = ap_const_logic_0) or (grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8, icmp_ln249_fu_216_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln249_fu_216_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8, icmp_ln249_fu_216_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln249_fu_216_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln347_fu_181_p1 <= grp_fu_132_p1;
    bitcast_ln348_fu_193_p1 <= grp_fu_135_p1;
    cmp111_i_fu_227_p2 <= "1" when (unsigned(i_fu_68) < unsigned(rows_cast_i_reg_285)) else "0";
    cols_cast_i_fu_142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1),17));
    div228_i_fu_232_p4 <= i_fu_68(6 downto 1);

    grp_fu_132_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_boolean_1 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_132_ce <= ap_const_logic_0;
        else 
            grp_fu_132_ce <= ap_const_logic_1;
        end if; 
    end process;

        grp_fu_132_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub284_i_reg_296),32));


    grp_fu_135_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_boolean_1 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_135_ce <= ap_const_logic_0;
        else 
            grp_fu_135_ce <= ap_const_logic_1;
        end if; 
    end process;

        grp_fu_135_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub300_i_reg_301),32));

    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_start <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_ap_start_reg;
    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_start <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_ap_start_reg;
    grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_start <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_ap_start_reg;
    i_4_fu_221_p2 <= std_logic_vector(unsigned(i_fu_68) + unsigned(ap_const_lv17_1));
    icmp_fu_266_p2 <= "0" when (tmp_fu_257_p4 = ap_const_lv11_0) else "1";
    icmp_ln249_fu_216_p2 <= "1" when (i_fu_68 = add_i_reg_316) else "0";

    imgL_in_data_read_assign_proc : process(grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_imgL_in_data_read, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            imgL_in_data_read <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_imgL_in_data_read;
        else 
            imgL_in_data_read <= ap_const_logic_0;
        end if; 
    end process;

    leftRemappedMat_data_din <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_leftRemappedMat_data_din;

    leftRemappedMat_data_write_assign_proc : process(grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_leftRemappedMat_data_write, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            leftRemappedMat_data_write <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_leftRemappedMat_data_write;
        else 
            leftRemappedMat_data_write <= ap_const_logic_0;
        end if; 
    end process;


    mapxLMat_data_read_assign_proc : process(grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_mapxLMat_data_read, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mapxLMat_data_read <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_mapxLMat_data_read;
        else 
            mapxLMat_data_read <= ap_const_logic_0;
        end if; 
    end process;


    mapyLMat_data_read_assign_proc : process(grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_mapyLMat_data_read, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mapyLMat_data_read <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_mapyLMat_data_read;
        else 
            mapyLMat_data_read <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln314_fu_246_p0 <= mul_ln314_fu_246_p00(6 - 1 downto 0);
    mul_ln314_fu_246_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div228_i_fu_232_p4),15));
    mul_ln314_fu_246_p1 <= ap_const_lv15_191(10 - 1 downto 0);

    r1_address0_assign_proc : process(ap_CS_fsm_state2, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_address0, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_address0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r1_address0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r1_address0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_address0;
        else 
            r1_address0 <= "XXXXXXX";
        end if; 
    end process;


    r1_ce0_assign_proc : process(ap_CS_fsm_state2, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_ce0, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_ce0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r1_ce0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r1_ce0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_ce0;
        else 
            r1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r1_ce1_assign_proc : process(grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_ce1, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r1_ce1 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_ce1;
        else 
            r1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r1_d0_assign_proc : process(ap_CS_fsm_state2, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_d0, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_d0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r1_d0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r1_d0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_d0;
        else 
            r1_d0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r1_we0_assign_proc : process(ap_CS_fsm_state2, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_we0, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_we0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r1_we0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r1_we0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_1_fu_92_r1_we0;
        else 
            r1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    r2_address0_assign_proc : process(ap_CS_fsm_state2, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_address0, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_address0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r2_address0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r2_address0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_address0;
        else 
            r2_address0 <= "XXXXXXX";
        end if; 
    end process;


    r2_ce0_assign_proc : process(ap_CS_fsm_state2, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_ce0, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_ce0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r2_ce0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r2_ce0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_ce0;
        else 
            r2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r2_ce1_assign_proc : process(grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_ce1, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r2_ce1 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_ce1;
        else 
            r2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r2_d0_assign_proc : process(ap_CS_fsm_state2, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_d0, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_d0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r2_d0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r2_d0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_d0;
        else 
            r2_d0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r2_we0_assign_proc : process(ap_CS_fsm_state2, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_we0, grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_we0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r2_we0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_loop_width_fu_104_r2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r2_we0 <= grp_xFRemapLI_0_0_1_7_128_600_800_1_2_2_2_2_false_6_Pipeline_2_fu_98_r2_we0;
        else 
            r2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    rows_cast_i_fu_138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read),17));
    sub284_i_fu_146_p2 <= std_logic_vector(unsigned(rows_cast_i_fu_138_p1) + unsigned(ap_const_lv17_1FFFF));
    sub300_i_fu_152_p2 <= std_logic_vector(unsigned(cols_cast_i_fu_142_p1) + unsigned(ap_const_lv17_1FFFF));
    tmp_fu_257_p4 <= i_3_reg_356(16 downto 6);
    trunc_ln249_1_fu_212_p1 <= i_fu_68(7 - 1 downto 0);
    trunc_ln249_fu_208_p1 <= i_fu_68(1 - 1 downto 0);
    trunc_ln347_1_fu_189_p1 <= bitcast_ln347_fu_181_p1(23 - 1 downto 0);
    trunc_ln347_fu_185_p1 <= bitcast_ln347_fu_181_p1(31 - 1 downto 0);
    trunc_ln348_1_fu_201_p1 <= bitcast_ln348_fu_193_p1(23 - 1 downto 0);
    trunc_ln348_fu_197_p1 <= bitcast_ln348_fu_193_p1(31 - 1 downto 0);
end behav;
